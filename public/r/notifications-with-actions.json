{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "notifications-with-actions",
  "type": "registry:ui",
  "title": "Notifications With Actions",
  "description": "Interactive notification component with swipe-to-reveal actions like archive and delete.",
  "dependencies": [
    "lucide-react",
    "framer-motion"
  ],
  "files": [
    {
      "path": "registry/ruixenui/notifications-with-actions.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\"\r\nimport { Bell, GripVertical, Trash2, Archive, ChevronRight } from \"lucide-react\"\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\"\r\nimport { Card } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { motion } from \"framer-motion\"\r\n\r\ninterface NotificationItem {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  time: string\r\n}\r\n\r\ninterface NotificationsWithActionsProps {\r\n  items?: NotificationItem[]\r\n  placement?: \"top\" | \"right\" | \"bottom\" | \"left\"\r\n}\r\n\r\nconst defaultNotifications: NotificationItem[] = [\r\n  {\r\n    id: \"1\",\r\n    title: \"Welcome ðŸŽ‰\",\r\n    description: \"Thanks for checking out the notifications component!\",\r\n    time: \"just now\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    title: \"System Update\",\r\n    description: \"Weâ€™ve rolled out a new feature for you.\",\r\n    time: \"1h ago\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    title: \"Reminder\",\r\n    description: \"Donâ€™t forget to finish your profile setup.\",\r\n    time: \"3h ago\",\r\n  },\r\n]\r\n\r\nexport default function NotificationsWithActions({\r\n  items = defaultNotifications,\r\n  placement = \"bottom\",\r\n}: NotificationsWithActionsProps) {\r\n  const [notifications, setNotifications] =\r\n    React.useState<NotificationItem[]>(items)\r\n  const [activeId, setActiveId] = React.useState<string | null>(null)\r\n\r\n  const handleArchive = () => {\r\n    setActiveId(null)\r\n  }\r\n\r\n  const handleDelete = (id: string) => {\r\n    setNotifications((prev) => prev.filter((n) => n.id !== id))\r\n    setActiveId(null)\r\n  }\r\n\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger asChild>\r\n        <button className=\"relative inline-flex items-center justify-center rounded-full p-2 hover:bg-muted\">\r\n          <Bell className=\"h-5 w-5\" />\r\n          {notifications.length > 0 && (\r\n            <Badge\r\n              variant=\"default\"\r\n              className=\"absolute -top-1 -right-1 text-xs px-1.5 py-0\"\r\n            >\r\n              {notifications.length}\r\n            </Badge>\r\n          )}\r\n        </button>\r\n      </PopoverTrigger>\r\n      <PopoverContent\r\n        className=\"w-80 p-0\"\r\n        align=\"center\"\r\n        side={placement}\r\n      >\r\n        <Card className=\"max-h-80 overflow-y-auto rounded-lg border-none shadow-none\">\r\n          {notifications.length === 0 ? (\r\n            <div className=\"p-4 text-sm text-muted-foreground text-center\">\r\n              No notifications\r\n            </div>\r\n          ) : (\r\n            <ul className=\"divide-y divide-border\">\r\n              {notifications.map((item) => {\r\n                const isActive = activeId === item.id\r\n                return (\r\n                  <li\r\n                    key={item.id}\r\n                    className=\"flex items-center justify-between p-4 hover:bg-muted/50 transition\"\r\n                  >\r\n                    {/* Left text with animation */}\r\n                    <motion.div\r\n                      animate={{ x: isActive ? -40 : 0 }}\r\n                      transition={{ duration: 0.2 }}\r\n                      className=\"flex-1\"\r\n                    >\r\n                      <div className=\"flex justify-between items-center mb-1\">\r\n                        <span className=\"font-medium text-sm\">{item.title}</span>\r\n                        <span className=\"text-xs text-muted-foreground\">\r\n                          {item.time}\r\n                        </span>\r\n                      </div>\r\n                      <p className=\"text-xs text-muted-foreground leading-relaxed\">\r\n                        {item.description}\r\n                      </p>\r\n                    </motion.div>\r\n\r\n                    {/* Right side controls */}\r\n                    <div className=\"ml-2 flex items-center\">\r\n                      {isActive ? (\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <button\r\n                            className=\"p-1 rounded-md hover:bg-muted\"\r\n                            onClick={handleArchive}\r\n                          >\r\n                            <Archive className=\"h-4 w-4 text-muted-foreground\" />\r\n                          </button>\r\n                          <button\r\n                            className=\"p-1 rounded-md hover:bg-muted\"\r\n                            onClick={() => handleDelete(item.id)}\r\n                          >\r\n                            <Trash2 className=\"h-4 w-4 text-destructive\" />\r\n                          </button>\r\n                          <button\r\n                            className=\"p-1 rounded-md hover:bg-muted\"\r\n                            onClick={() => setActiveId(null)}\r\n                          >\r\n                            <ChevronRight className=\"h-4 w-4 text-muted-foreground\" />\r\n                          </button>\r\n                        </div>\r\n                      ) : (\r\n                        <button\r\n                          className=\"p-1 rounded-md hover:bg-muted\"\r\n                          onClick={() =>\r\n                            setActiveId(isActive ? null : item.id)\r\n                          }\r\n                        >\r\n                          <GripVertical className=\"h-4 w-4 text-muted-foreground\" />\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          )}\r\n        </Card>\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/notifications-with-actions.tsx"
    }
  ]
}