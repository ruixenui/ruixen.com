{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sketchpad-dropzone",
  "type": "registry:ui",
  "title": "Sketchpad Dropzone",
  "description": "Creative dropzone with sketchpad-style grid background and sticky note file cards.",
  "dependencies": [
    "framer-motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/sketchpad-dropzone.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Trash2 } from \"lucide-react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\n\nexport type DropFile = {\n  id: string;\n  file: File;\n};\n\ninterface SketchpadDropzoneProps {\n  files: DropFile[];\n  onDrop?: (files: FileList) => void;\n  onRemove?: (id: string) => void;\n}\n\nexport function SketchpadDropzone({\n  files,\n  onDrop,\n  onRemove,\n}: SketchpadDropzoneProps) {\n  const dropRef = React.useRef<HTMLDivElement | null>(null);\n  const fileInputRef = React.useRef<HTMLInputElement | null>(null);\n\n  // Handle drop\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    if (e.dataTransfer.files && onDrop) {\n      onDrop(e.dataTransfer.files);\n    }\n  };\n\n  // Handle click to open file manager\n  const handleClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && onDrop) {\n      onDrop(e.target.files);\n      e.target.value = \"\"; // reset input so same file can be selected again\n    }\n  };\n\n  return (\n    <div>\n      {/* Hidden file input */}\n      <input\n        type=\"file\"\n        multiple\n        className=\"hidden\"\n        ref={fileInputRef}\n        onChange={handleFileSelect}\n      />\n\n      {/* Drop Zone / Sketchpad */}\n      <div\n        ref={dropRef}\n        onClick={handleClick}\n        onDragOver={(e) => e.preventDefault()}\n        onDrop={handleDrop}\n        className=\"relative border-2 border-dashed border-gray-400 dark:border-gray-600 rounded-lg p-8 min-h-[300px] bg-white dark:bg-black flex flex-wrap gap-4 items-start cursor-pointer\"\n        style={{\n          backgroundImage:\n            \"repeating-linear-gradient(0deg, transparent, transparent 24px, rgba(0,0,0,0.05) 25px), repeating-linear-gradient(-90deg, transparent, transparent 24px, rgba(0,0,0,0.05) 25px)\",\n        }}\n      >\n        <AnimatePresence>\n          {files.map((file) => (\n            <motion.div\n              key={file.id}\n              initial={{ scale: 0, rotate: -5, opacity: 0 }}\n              animate={{ scale: 1, rotate: 0, opacity: 1 }}\n              exit={{ scale: 0, opacity: 0 }}\n              transition={{ duration: 0.3 }}\n              className=\"relative\"\n            >\n              <Card className=\"w-40 bg-yellow-50 dark:bg-yellow-900 shadow-lg relative\">\n                <CardContent className=\"p-2 flex justify-between items-center\">\n                  <p className=\"font-medium text-sm break-all\">\n                    {file.file.name}\n                  </p>\n                  {onRemove && (\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      className=\"h-5 w-5\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        onRemove(file.id);\n                      }}\n                    >\n                      <Trash2 className=\"h-3 w-3 text-red-500\" />\n                    </Button>\n                  )}\n                </CardContent>\n              </Card>\n            </motion.div>\n          ))}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/sketchpad-dropzone.tsx"
    }
  ]
}