{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "featured-highlights",
  "type": "registry:ui",
  "title": "Featured Highlights",
  "description": "Interactive feature showcase with image preview and hover effects",
  "files": [
    {
      "path": "registry/ruixenui/featured-highlights.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport Image from \"next/image\";\nimport { Atom } from \"lucide-react\";\n\nexport interface FeatureItem {\n  id: number;\n  title: string;\n  image: string;\n  description: string;\n}\n\nexport interface FeaturedHighlightsProps {\n  heading?: string;\n  features?: FeatureItem[];\n}\n\nconst defaultFeatures: FeatureItem[] = [\n  {\n    id: 1,\n    title: \"Lead Management\",\n    image: \"/image/feature-01.jpg\",\n    description:\n      \"Track, prioritize, and manage leads efficiently with an intuitive dashboard to close deals faster and boost sales conversions.\",\n  },\n  {\n    id: 2,\n    title: \"Automated Workflows\",\n    image: \"/image/feature-02.jpg\",\n    description:\n      \"Automate repetitive tasks like email follow-ups and lead assignments to streamline your business processes and save time.\",\n  },\n  {\n    id: 3,\n    title: \"Real-Time Analytics\",\n    image: \"/image/feature-03.jpg\",\n    description:\n      \"Monitor sales performance, team productivity, and customer behavior with powerful dashboards and real-time insights.\",\n  },\n  {\n    id: 4,\n    title: \"Customer 360° View\",\n    image: \"/image/feature-04.jpg\",\n    description:\n      \"Get a complete view of every customer — from contact details and communication history to purchase behavior and feedback.\",\n  },\n];\n\nexport default function FeaturedHighlights({\n  heading = \"Powerful Features to Accelerate Your Workflow\",\n  features = defaultFeatures,\n}: FeaturedHighlightsProps) {\n  const [activeId, setActiveId] = useState<number>(features[0].id);\n  const activeFeature = features.find((f) => f.id === activeId);\n\n  return (\n    <section className=\"py-20 md:py-32\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex flex-col items-start md:flex-row md:items-center md:justify-between mb-12 gap-6\">\n          <h2 className=\"text-3xl md:text-4xl lg:text-5xl font-semibold tracking-tight max-w-2xl text-left\">\n            {heading}\n          </h2>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          {/* Features List */}\n          <ul className=\"space-y-4\">\n            {features.map((feature) => {\n              const isActive = feature.id === activeId;\n              return (\n                <li\n                  key={feature.id}\n                  onClick={() => setActiveId(feature.id)}\n                  className={`group flex items-start gap-3 p-3 border-b border-gray-300 dark:border-gray-700 cursor-pointer transition-all duration-300 transform rounded-lg ${\n                    isActive\n                      ? \"bg-muted text-primary shadow-md scale-[1.02] -translate-y-1\"\n                      : \"hover:shadow-sm hover:-translate-y-0.5\"\n                  }`}\n                >\n                  <div\n                    className=\"w-6 h-6 flex-shrink-0\"\n                    style={{\n                      transform: isActive ? \"rotateY(0deg)\" : \"rotateY(90deg)\",\n                      opacity: isActive ? 1 : 0,\n                      transition: \"transform 0.4s ease, opacity 0.4s ease\",\n                    }}\n                  >\n                    {isActive && (\n                      <div className=\"w-5 h-5\">\n                        <Atom\n                          className=\"w-full h-full\"\n                          style={{ stroke: \"url(#grad)\" }}\n                        />\n                        <svg width=\"0\" height=\"0\">\n                          <defs>\n                            <linearGradient\n                              id=\"grad\"\n                              x1=\"0%\"\n                              y1=\"0%\"\n                              x2=\"100%\"\n                              y2=\"0%\"\n                            >\n                              <stop offset=\"0%\" stopColor=\"#3b82f6\" />\n                              <stop offset=\"50%\" stopColor=\"#a855f7\" />\n                              <stop offset=\"100%\" stopColor=\"#ec4899\" />\n                            </linearGradient>\n                          </defs>\n                        </svg>\n                      </div>\n                    )}\n                  </div>\n\n                  <div>\n                    <h3\n                      className={`text-md font-semibold mb-1 transition-colors ${\n                        isActive\n                          ? \"text-primary\"\n                          : \"text-gray-800 dark:text-gray-200 group-hover:text-primary\"\n                      }`}\n                    >\n                      {feature.title}\n                    </h3>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      {feature.description}\n                    </p>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n\n          {/* Image Preview */}\n          <div className=\"relative w-full h-96 rounded-2xl overflow-hidden border border-gray-300 dark:border-gray-800 bg-gray-50 dark:bg-black\">\n            {activeFeature && (\n              <Image\n                src={activeFeature.image}\n                alt={activeFeature.title}\n                fill\n                className=\"object-cover transition-all duration-500 bg-gray-50 dark:bg-black blur-xs\"\n                priority\n                unoptimized\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/featured-highlights.tsx"
    }
  ]
}