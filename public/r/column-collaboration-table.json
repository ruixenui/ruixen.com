{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "column-collaboration-table",
  "type": "registry:ui",
  "title": "Column Collaboration Table",
  "description": "A collaborative table with column-level comments and annotations.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "table",
    "button",
    "popover",
    "input",
    "scroll-area"
  ],
  "files": [
    {
      "path": "registry/ruixenui/column-collaboration-table.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableFooter,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Popover, PopoverTrigger, PopoverContent } from \"@/components/ui/popover\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { CircleFadingPlus } from \"lucide-react\";\r\n\r\n/** --- Types --- */\r\nexport type ColumnCollaborationItem = {\r\n  id: string;\r\n  [key: string]: string;\r\n};\r\n\r\nexport type ColumnCollaborationTableProps = {\r\n  columns?: string[];\r\n  data?: ColumnCollaborationItem[];\r\n};\r\n\r\n/** --- Default Data --- */\r\nconst defaultColumns = [\"Name\", \"Email\", \"Location\", \"Status\", \"Balance\"];\r\n\r\nconst defaultData: ColumnCollaborationItem[] = [\r\n  { id: \"1\", Name: \"Arjun Mehta\", Email: \"arjun.mehta@company.com\", Location: \"Bangalore, IN\", Status: \"Active\", Balance: \"$1,250.00\" },\r\n  { id: \"2\", Name: \"Hannah Park\", Email: \"hannah.park@company.com\", Location: \"Seoul, KR\", Status: \"Active\", Balance: \"$600.00\" },\r\n  { id: \"3\", Name: \"Oliver Scott\", Email: \"oliver.scott@company.com\", Location: \"Manchester, UK\", Status: \"Inactive\", Balance: \"$650.00\" },\r\n  { id: \"4\", Name: \"Camila Torres\", Email: \"camila.torres@company.com\", Location: \"Bogot√°, CO\", Status: \"Active\", Balance: \"$0.00\" },\r\n  { id: \"5\", Name: \"Kenji Tanaka\", Email: \"kenji.tanaka@company.com\", Location: \"Osaka, JP\", Status: \"Active\", Balance: \"-$1,000.00\" },\r\n];\r\n\r\n/** --- Component --- */\r\nexport default function ColumnCollaborationTable({\r\n  columns = defaultColumns,\r\n  data = defaultData,\r\n}: ColumnCollaborationTableProps) {\r\n  const [comments, setComments] = React.useState<{ [key: string]: string[] }>({});\r\n  const [newComment, setNewComment] = React.useState<{ [key: string]: string }>({});\r\n\r\n  const addComment = (column: string) => {\r\n    if (!newComment[column]) return;\r\n    setComments((prev) => ({\r\n      ...prev,\r\n      [column]: [...(prev[column] || []), newComment[column]],\r\n    }));\r\n    setNewComment((prev) => ({ ...prev, [column]: \"\" }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-background p-4 rounded-lg border\">\r\n      <ScrollArea className=\"max-h-[400px]\">\r\n        <Table className=\"w-full border-separate border-spacing-0\">\r\n          {/* Header with popovers */}\r\n          <TableHeader className=\"sticky top-0 bg-background/90 backdrop-blur-sm z-10\">\r\n            <TableRow>\r\n              {columns.map((col) => (\r\n                <TableHead key={col} className=\"relative\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    {col}\r\n                    <Popover>\r\n                      <PopoverTrigger asChild>\r\n                        <Button size=\"sm\" variant=\"outline\" className=\"ml-2 p-1\">\r\n                          <CircleFadingPlus className=\"w-4 h-4\" />\r\n                        </Button>\r\n                      </PopoverTrigger>\r\n                      <PopoverContent className=\"w-64 p-2\">\r\n                        <div className=\"flex flex-col gap-2\">\r\n                          <ScrollArea className=\"max-h-32\">\r\n                            <ul className=\"space-y-1\">\r\n                              {(comments[col] || []).map((cmt, i) => (\r\n                                <li key={i} className=\"text-sm border-b pb-1\">{cmt}</li>\r\n                              ))}\r\n                              {(!comments[col] || comments[col].length === 0) && (\r\n                                <li className=\"text-sm text-muted-foreground\">No comments</li>\r\n                              )}\r\n                            </ul>\r\n                          </ScrollArea>\r\n                          <div className=\"flex gap-2\">\r\n                            <Input\r\n                              value={newComment[col] || \"\"}\r\n                              onChange={(e) =>\r\n                                setNewComment((prev) => ({ ...prev, [col]: e.target.value }))\r\n                              }\r\n                              placeholder=\"Add comment\"\r\n                              className=\"flex-1\"\r\n                            />\r\n                            <Button size=\"sm\" onClick={() => addComment(col)}>\r\n                              Add\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      </PopoverContent>\r\n                    </Popover>\r\n                  </div>\r\n                </TableHead>\r\n              ))}\r\n            </TableRow>\r\n          </TableHeader>\r\n\r\n          {/* Body */}\r\n          <TableBody>\r\n            {data.map((item) => (\r\n              <TableRow key={item.id}>\r\n                {columns.map((col) => (\r\n                  <TableCell key={col}>{item[col] || \"-\"}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n\r\n          {/* Footer */}\r\n          <TableFooter className=\"bg-background/50 sticky bottom-0 backdrop-blur-sm\">\r\n            <TableRow>\r\n              <TableCell colSpan={columns.length} className=\"text-right font-medium\">\r\n                Total Rows: {data.length}\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </ScrollArea>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/column-collaboration-table.tsx"
    }
  ]
}