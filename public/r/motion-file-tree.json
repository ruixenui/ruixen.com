{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "motion-file-tree",
  "type": "registry:ui",
  "title": "Motion File Tree",
  "description": "An animated file tree component with smooth expand/collapse transitions.",
  "dependencies": [
    "framer-motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/motion-file-tree.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { ChevronRight, ChevronDown, Folder, File } from \"lucide-react\";\r\n\r\n// -------- Types --------\r\nexport type FileNode = {\r\n  id: string;\r\n  name: string;\r\n  type: \"file\" | \"folder\";\r\n  children?: FileNode[];\r\n};\r\n\r\nexport type MotionFileTreeProps = {\r\n  data: FileNode[];\r\n  defaultExpanded?: Record<string, boolean>;\r\n  onSelect?: (node: FileNode) => void;\r\n};\r\n\r\n// -------- Component --------\r\nexport default function MotionFileTree({ data, defaultExpanded = {}, onSelect }: MotionFileTreeProps) {\r\n  const [expanded, setExpanded] = useState<Record<string, boolean>>(defaultExpanded);\r\n  const [selected, setSelected] = useState<string | null>(null);\r\n\r\n  const toggle = (id: string) => {\r\n    setExpanded((prev) => ({ ...prev, [id]: !prev[id] }));\r\n  };\r\n\r\n  const renderNodes = (nodes: FileNode[], level = 0) => {\r\n    return nodes.map((n) => (\r\n      <div key={n.id} className=\"relative\">\r\n        <div\r\n          role=\"treeitem\"\r\n          tabIndex={0}\r\n          aria-expanded={n.type === \"folder\" ? !!expanded[n.id] : undefined}\r\n          className={cn(\r\n            \"flex items-center gap-2 px-2 py-1 rounded-md cursor-pointer transition-colors select-none outline-none\",\r\n            selected === n.id\r\n              ? \"bg-accent text-accent-foreground border-l-2 border-primary\"\r\n              : \"hover:bg-muted\"\r\n          )}\r\n          style={{ paddingLeft: level * 14 + 8 }}\r\n          onClick={() => {\r\n            if (n.type === \"folder\") toggle(n.id);\r\n            setSelected(n.id);\r\n            onSelect?.(n);\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (n.type === \"folder\" && (e.key === \"Enter\" || e.key === \" \")) {\r\n              e.preventDefault();\r\n              toggle(n.id);\r\n            }\r\n          }}\r\n        >\r\n          {n.type === \"folder\" ? (\r\n            <>\r\n              {expanded[n.id] ? <ChevronDown size={14} /> : <ChevronRight size={14} />}\r\n              <Folder size={16} />\r\n            </>\r\n          ) : (\r\n            <File size={14} />\r\n          )}\r\n          <span className=\"text-sm truncate\">{n.name}</span>\r\n        </div>\r\n\r\n        {/* Children with smooth animation */}\r\n        <AnimatePresence initial={false}>\r\n          {n.children && n.children.length > 0 && expanded[n.id] && (\r\n            <motion.div\r\n              key=\"children\"\r\n              role=\"group\"\r\n              initial={{ height: 0, opacity: 0 }}\r\n              animate={{ height: \"auto\", opacity: 1 }}\r\n              exit={{ height: 0, opacity: 0 }}\r\n              transition={{ duration: 0.25, ease: \"easeInOut\" }}\r\n              className=\"pl-3 border-l border-muted\"\r\n            >\r\n              {renderNodes(n.children, level + 1)}\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div role=\"tree\" className=\"space-y-1 text-sm\">\r\n      {renderNodes(data)}\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/motion-file-tree.tsx"
    }
  ]
}