{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "inline-analytics-table",
  "type": "registry:ui",
  "title": "Inline Analytics Table",
  "description": "A table with inline analytics including progress bars and trend indicators.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "table",
    "progress"
  ],
  "files": [
    {
      "path": "registry/ruixenui/inline-analytics-table.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableFooter,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { TrendingUp, TrendingDown } from \"lucide-react\";\r\n\r\nexport type AnalyticsItem = {\r\n  id: string;\r\n  region: string;\r\n  sales: number;\r\n  revenue: number;\r\n  growth: number;\r\n};\r\n\r\nexport type ColumnConfig<T> = {\r\n  key: keyof T;\r\n  label: string;\r\n  showProgress?: boolean;\r\n  progressValue?: number;\r\n  align?: string;\r\n  render?: (item: T) => React.ReactNode;\r\n};\r\n\r\nexport type InlineAnalyticsTableProps<T extends AnalyticsItem> = {\r\n  data?: T[];\r\n  columns?: ColumnConfig<T>[];\r\n  defaultProgress?: number;\r\n};\r\n\r\nconst defaultData: AnalyticsItem[] = [\r\n  { id: \"1\", region: \"North America\", sales: 1200, revenue: 25000, growth: 12 },\r\n  { id: \"2\", region: \"Europe\", sales: 900, revenue: 18000, growth: -5 },\r\n  { id: \"3\", region: \"Asia\", sales: 1500, revenue: 30000, growth: 20 },\r\n  { id: \"4\", region: \"South America\", sales: 600, revenue: 10000, growth: 8 },\r\n  { id: \"5\", region: \"Africa\", sales: 400, revenue: 7000, growth: -3 },\r\n];\r\n\r\nconst defaultColumns: ColumnConfig<AnalyticsItem>[] = [\r\n  { key: \"region\", label: \"Region\", align: \"text-left\" },\r\n  { key: \"sales\", label: \"Sales\", showProgress: true, progressValue: 70 },\r\n  { key: \"revenue\", label: \"Revenue\", showProgress: true, progressValue: 60 },\r\n  { key: \"growth\", label: \"Growth\", showProgress: true, progressValue: 50 },\r\n  {\r\n    key: \"growth\",\r\n    label: \"Trend\",\r\n    align: \"text-right\",\r\n    render: (item) =>\r\n      item.growth >= 0 ? (\r\n        <TrendingUp className=\"h-4 w-4 text-green-500\" />\r\n      ) : (\r\n        <TrendingDown className=\"h-4 w-4 text-red-500\" />\r\n      ),\r\n  },\r\n];\r\n\r\nexport default function InlineAnalyticsTable<T extends AnalyticsItem>({\r\n  data = defaultData as T[],\r\n  columns = defaultColumns as ColumnConfig<T>[],\r\n  defaultProgress = 50,\r\n}: InlineAnalyticsTableProps<T>) {\r\n  return (\r\n    <div className=\"bg-background p-4 overflow-x-auto\">\r\n      <Table className=\"min-w-[600px]\">\r\n        <TableHeader>\r\n          <TableRow>\r\n            {columns.map((col) => (\r\n              <TableHead key={String(col.key)} className={col.align ?? \"\"}>\r\n                {col.showProgress ? (\r\n                  <div className=\"flex flex-col\">\r\n                    <span>{col.label}</span>\r\n                    <Progress\r\n                      value={col.progressValue ?? defaultProgress}\r\n                      className=\"h-1 mt-1\"\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  col.label\r\n                )}\r\n              </TableHead>\r\n            ))}\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {data.map((item) => (\r\n            <TableRow key={item.id}>\r\n              {columns.map((col) => (\r\n                <TableCell key={String(col.key)} className={col.align ?? \"\"}>\r\n                  {col.render ? col.render(item) : (item as any)[col.key]}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Total</TableCell>\r\n            <TableCell>\r\n              $\r\n              {data\r\n                .reduce((acc, cur) => acc + cur.revenue, 0)\r\n                .toLocaleString()}\r\n            </TableCell>\r\n            <TableCell colSpan={columns.length - 3}></TableCell>\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n      <p className=\"mt-4 text-center text-sm text-muted-foreground\">\r\n        Configurable Inline Analytics Table\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/inline-analytics-table.tsx"
    }
  ]
}