{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "magic-tree",
  "type": "registry:ui",
  "title": "Magic Tree",
  "description": "A magical file tree with sparkle effects and interactive animations.",
  "dependencies": [
    "framer-motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/magic-tree.tsx",
      "content": "\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Star, Folder, File } from \"lucide-react\";\r\n\r\n// -------- MagicNode Types --------\r\nexport type MagicNode = {\r\n  id: string;\r\n  name: string;\r\n  type: \"file\" | \"folder\";\r\n  children?: MagicNode[];\r\n  sparkle?: boolean;\r\n};\r\n\r\nexport type MagicTreeProps = {\r\n  data?: MagicNode[];\r\n  onSelect?: (node: MagicNode) => void;\r\n};\r\n\r\n// -------- Default Data --------\r\nconst defaultMagicData: MagicNode[] = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Magical Folder\",\r\n    type: \"folder\",\r\n    sparkle: true,\r\n    children: [\r\n      { id: \"1-1\", name: \"Shiny File.txt\", type: \"file\", sparkle: true },\r\n      { id: \"1-2\", name: \"Hidden Gems\", type: \"folder\", children: [{ id: \"1-2-1\", name: \"Gem.js\", type: \"file\", sparkle: true }] },\r\n    ],\r\n  },\r\n  { id: \"2\", name: \"Plain File.md\", type: \"file\" },\r\n];\r\n\r\nexport default function MagicTree({ data = defaultMagicData, onSelect }: MagicTreeProps) {\r\n  const [expanded, setExpanded] = useState<Record<string, boolean>>({});\r\n  const [selected, setSelected] = useState<string | null>(null);\r\n\r\n  const toggle = (id: string) => {\r\n    setExpanded((prev) => ({ ...prev, [id]: !prev[id] }));\r\n  };\r\n\r\n  const renderNodes = (nodes: MagicNode[], level = 0) => {\r\n    return nodes.map((n) => (\r\n      <div key={n.id} className=\"relative group\">\r\n        <motion.div\r\n          className={cn(\r\n            \"flex items-center gap-2 px-2 py-1 rounded-md cursor-pointer select-none\",\r\n            selected === n.id ? \"bg-gray-100 dark:bg-gray-700 text-black dark:text-white\" : \"hover:bg-muted\"\r\n          )}\r\n          style={{ paddingLeft: level * 16 + 8 }}\r\n          onClick={() => {\r\n            if (n.type === \"folder\") toggle(n.id);\r\n            setSelected(n.id);\r\n            onSelect?.(n);\r\n          }}\r\n          whileHover={{ scale: 1.03 }}\r\n          whileTap={{ scale: 0.97 }}\r\n        >\r\n          {/* Icon for selected node */}\r\n          {selected === n.id ? <Star size={16} className=\"text-yellow-400\" /> : n.type === \"folder\" ? <Folder size={16} /> : <File size={14} />}\r\n          <span className=\"flex-1 truncate\">{n.name}</span>\r\n        </motion.div>\r\n\r\n        <AnimatePresence>\r\n          {n.children && n.children.length > 0 && expanded[n.id] && (\r\n            <motion.div\r\n              role=\"group\"\r\n              initial={{ height: 0, opacity: 0 }}\r\n              animate={{ height: \"auto\", opacity: 1 }}\r\n              exit={{ height: 0, opacity: 0 }}\r\n              transition={{ duration: 0.3, ease: \"easeInOut\" }}\r\n              className=\"pl-4 border-l border-purple-300\"\r\n            >\r\n              {renderNodes(n.children, level + 1)}\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return <div className=\"space-y-1\">{renderNodes(data)}</div>;\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/magic-tree.tsx"
    }
  ]
}