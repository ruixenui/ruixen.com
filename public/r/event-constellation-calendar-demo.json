{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "event-constellation-calendar-demo",
  "type": "registry:example",
  "title": "Event Constellation Calendar Demo",
  "description": "Example showing a starfield-style calendar with constellation connections.",
  "registryDependencies": [
    "https://ruixen.com/r/event-constellation-calendar"
  ],
  "files": [
    {
      "path": "registry/example/event-constellation-calendar-demo.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  EventConstellationCalendar,\n  CalendarEvent,\n} from \"@/registry/ruixenui/event-constellation-calendar\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function EventConstellationDemo() {\n  const [events, setEvents] = React.useState<CalendarEvent[]>([\n    {\n      id: uuidv4(),\n      title: \"Kickoff Meeting\",\n      date: new Date().toISOString(),\n    },\n    {\n      id: uuidv4(),\n      title: \"Demo Review\",\n      date: new Date(\n        new Date().setDate(new Date().getDate() + 3),\n      ).toISOString(),\n    },\n    {\n      id: uuidv4(),\n      title: \"Design Handoff\",\n      date: new Date(\n        new Date().setDate(new Date().getDate() + 7),\n      ).toISOString(),\n    },\n  ]);\n\n  const handleAdd = (ev: CalendarEvent) => setEvents((p) => [...p, ev]);\n  const handleRemove = (id: string) =>\n    setEvents((p) => p.filter((e) => e.id !== id));\n\n  return (\n    <div className=\"p-6\">\n      <h1 className=\"text-lg font-semibold mb-4\">\n        Event Constellation Calendar (Demo)\n      </h1>\n      <EventConstellationCalendar\n        events={events}\n        onAddEvent={handleAdd}\n        onRemoveEvent={handleRemove}\n      />\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/event-constellation-calendar-demo.tsx"
    }
  ]
}