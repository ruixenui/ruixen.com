{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "product-image-card",
  "type": "registry:ui",
  "title": "Product Image Card",
  "description": "A product showcase card with scrollable image gallery, color selection, and interactive features for e-commerce applications.",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/product-image-card.tsx",
      "content": "// components/product-image-card.tsx\n\"use client\";\n\nimport * as React from \"react\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { AspectRatio } from \"@/components/ui/aspect-ratio\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { cn } from \"@/lib/utils\";\nimport { ArrowLeft, Heart, ChevronLeft, ChevronRight } from \"lucide-react\";\nimport Link from \"next/link\";\n\nexport type ProductImage = {\n  src: string;\n  alt?: string;\n  thumbSrc?: string; // optional smaller thumbnail; falls back to src\n};\n\nexport interface ProductImageCardProps {\n  title?: string;\n  images: ProductImage[];\n  initialIndex?: number;\n  onIndexChange?: (index: number) => void;\n  className?: string;\n}\n\nexport function ProductImageCard({\n  title = \"Product Details\",\n  images,\n  initialIndex = 0,\n  onIndexChange,\n  className,\n}: ProductImageCardProps) {\n  const [index, setIndex] = React.useState(initialIndex);\n\n  const setSafeIndex = (i: number) => {\n    const next = (i + images.length) % images.length;\n    setIndex(next);\n    onIndexChange?.(next);\n  };\n\n  const prev = () => setSafeIndex(index - 1);\n  const next = () => setSafeIndex(index + 1);\n\n  // optional keyboard support\n  React.useEffect(() => {\n    const handler = (e: KeyboardEvent) => {\n      if (e.key === \"ArrowLeft\") prev();\n      if (e.key === \"ArrowRight\") next();\n    };\n    window.addEventListener(\"keydown\", handler);\n    return () => window.removeEventListener(\"keydown\", handler);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [index, images.length]);\n\n  if (!images?.length) return null;\n\n  return (\n    <Card\n      className={cn(\n        \"relative mx-auto w-full max-w-3xl rounded-3xl border-border bg-card/70 p-4 shadow-sm\",\n        className,\n      )}\n    >\n      {/* Header row */}\n      <div className=\"flex items-center justify-between\">\n        <Button asChild size=\"icon\" variant=\"outline\" className=\"rounded-full\">\n          <Link href=\"#\" aria-label=\"Back\">\n            <ArrowLeft className=\"h-4 w-4\" />\n          </Link>\n        </Button>\n\n        <h2 className=\"text-xl font-semibold sm:text-2xl\">{title}</h2>\n\n        <Button\n          size=\"icon\"\n          variant=\"outline\"\n          className=\"rounded-full\"\n          aria-label=\"Favorite\"\n        >\n          <Heart className=\"h-4 w-4\" />\n        </Button>\n      </div>\n\n      <Separator className=\"my-4\" />\n\n      {/* Content grid */}\n      <div className=\"grid grid-cols-12 gap-4\">\n        {/* Thumbnails */}\n        <div className=\"order-2 col-span-12 sm:order-1 sm:col-span-3\">\n          {/* vertical on sm+, horizontal on xs */}\n          <ScrollArea className=\"h-auto sm:h-[420px]\">\n            <div className=\"flex gap-3 sm:flex-col\">\n              {images.map((img, i) => {\n                const active = i === index;\n                return (\n                  <button\n                    key={i}\n                    type=\"button\"\n                    onClick={() => setSafeIndex(i)}\n                    aria-pressed={active}\n                    className={cn(\n                      \"relative overflow-hidden rounded-xl border p-0 outline-none transition\",\n                      \"focus-visible:ring-2 focus-visible:ring-ring\",\n                      active\n                        ? \"border-foreground\"\n                        : \"border-border hover:border-foreground/50\",\n                    )}\n                  >\n                    <img\n                      src={img.thumbSrc ?? img.src}\n                      alt={img.alt ?? `Thumbnail ${i + 1}`}\n                      className=\"h-20 w-20 object-cover sm:h-16 sm:w-full\"\n                      loading={i === 0 ? \"eager\" : \"lazy\"}\n                    />\n                  </button>\n                );\n              })}\n            </div>\n          </ScrollArea>\n        </div>\n\n        {/* Main image */}\n        <div className=\"order-1 col-span-12 sm:order-2 sm:col-span-9\">\n          <div className=\"relative\">\n            <AspectRatio ratio={4 / 5}>\n              <div className=\"h-full w-full overflow-hidden rounded-3xl bg-muted\">\n                <img\n                  src={images[index].src}\n                  alt={images[index].alt ?? \"Selected view\"}\n                  className=\"h-full w-full rounded-3xl object-contain\"\n                />\n              </div>\n            </AspectRatio>\n\n            {/* Next/Prev controls */}\n            <div className=\"absolute bottom-3 right-3 flex gap-2\">\n              <Button\n                size=\"icon\"\n                variant=\"secondary\"\n                className=\"rounded-full bg-background/80 backdrop-blur\"\n                onClick={prev}\n                aria-label=\"Previous image\"\n              >\n                <ChevronLeft className=\"h-4 w-4\" />\n              </Button>\n              <Button\n                size=\"icon\"\n                variant=\"secondary\"\n                className=\"rounded-full bg-background/80 backdrop-blur\"\n                onClick={next}\n                aria-label=\"Next image\"\n              >\n                <ChevronRight className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/product-image-card.tsx"
    }
  ]
}