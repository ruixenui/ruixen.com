{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "product-image-card",
  "type": "registry:ui",
  "title": "Product Image Card",
  "description": "A product showcase card with scrollable image gallery, color selection, and interactive features for e-commerce applications.",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/product-image-card.tsx",
      "content": "// components/product-image-card.tsx\r\n\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Card } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { AspectRatio } from \"@/components/ui/aspect-ratio\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { ArrowLeft, Heart, ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\n\r\nexport type ProductImage = {\r\n  src: string;\r\n  alt?: string;\r\n  thumbSrc?: string; // optional smaller thumbnail; falls back to src\r\n};\r\n\r\nexport interface ProductImageCardProps {\r\n  title?: string;\r\n  images: ProductImage[];\r\n  initialIndex?: number;\r\n  onIndexChange?: (index: number) => void;\r\n  className?: string;\r\n}\r\n\r\nexport function ProductImageCard({\r\n  title = \"Product Details\",\r\n  images,\r\n  initialIndex = 0,\r\n  onIndexChange,\r\n  className,\r\n}: ProductImageCardProps) {\r\n  const [index, setIndex] = React.useState(initialIndex);\r\n\r\n  const setSafeIndex = (i: number) => {\r\n    const next = (i + images.length) % images.length;\r\n    setIndex(next);\r\n    onIndexChange?.(next);\r\n  };\r\n\r\n  const prev = () => setSafeIndex(index - 1);\r\n  const next = () => setSafeIndex(index + 1);\r\n\r\n  // optional keyboard support\r\n  React.useEffect(() => {\r\n    const handler = (e: KeyboardEvent) => {\r\n      if (e.key === \"ArrowLeft\") prev();\r\n      if (e.key === \"ArrowRight\") next();\r\n    };\r\n    window.addEventListener(\"keydown\", handler);\r\n    return () => window.removeEventListener(\"keydown\", handler);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [index, images.length]);\r\n\r\n  if (!images?.length) return null;\r\n\r\n  return (\r\n    <Card\r\n      className={cn(\r\n        \"relative mx-auto w-full max-w-3xl rounded-3xl border-border bg-card/70 p-4 shadow-sm\",\r\n        className\r\n      )}\r\n    >\r\n      {/* Header row */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <Button asChild size=\"icon\" variant=\"outline\" className=\"rounded-full\">\r\n          <Link href=\"#\" aria-label=\"Back\">\r\n            <ArrowLeft className=\"h-4 w-4\" />\r\n          </Link>\r\n        </Button>\r\n\r\n        <h2 className=\"text-xl font-semibold sm:text-2xl\">{title}</h2>\r\n\r\n        <Button size=\"icon\" variant=\"outline\" className=\"rounded-full\" aria-label=\"Favorite\">\r\n          <Heart className=\"h-4 w-4\" />\r\n        </Button>\r\n      </div>\r\n\r\n      <Separator className=\"my-4\" />\r\n\r\n      {/* Content grid */}\r\n      <div className=\"grid grid-cols-12 gap-4\">\r\n        {/* Thumbnails */}\r\n        <div className=\"order-2 col-span-12 sm:order-1 sm:col-span-3\">\r\n          {/* vertical on sm+, horizontal on xs */}\r\n          <ScrollArea className=\"h-auto sm:h-[420px]\">\r\n            <div className=\"flex gap-3 sm:flex-col\">\r\n              {images.map((img, i) => {\r\n                const active = i === index;\r\n                return (\r\n                  <button\r\n                    key={i}\r\n                    type=\"button\"\r\n                    onClick={() => setSafeIndex(i)}\r\n                    aria-pressed={active}\r\n                    className={cn(\r\n                      \"relative overflow-hidden rounded-xl border p-0 outline-none transition\",\r\n                      \"focus-visible:ring-2 focus-visible:ring-ring\",\r\n                      active\r\n                        ? \"border-foreground\"\r\n                        : \"border-border hover:border-foreground/50\"\r\n                    )}\r\n                  >\r\n                    <img\r\n                      src={img.thumbSrc ?? img.src}\r\n                      alt={img.alt ?? `Thumbnail ${i + 1}`}\r\n                      className=\"h-20 w-20 object-cover sm:h-16 sm:w-full\"\r\n                      loading={i === 0 ? \"eager\" : \"lazy\"}\r\n                    />\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </ScrollArea>\r\n        </div>\r\n\r\n        {/* Main image */}\r\n        <div className=\"order-1 col-span-12 sm:order-2 sm:col-span-9\">\r\n          <div className=\"relative\">\r\n            <AspectRatio ratio={4 / 5}>\r\n              <div className=\"h-full w-full overflow-hidden rounded-3xl bg-muted\">\r\n                <img\r\n                  src={images[index].src}\r\n                  alt={images[index].alt ?? \"Selected view\"}\r\n                  className=\"h-full w-full rounded-3xl object-contain\"\r\n                />\r\n              </div>\r\n            </AspectRatio>\r\n\r\n            {/* Next/Prev controls */}\r\n            <div className=\"absolute bottom-3 right-3 flex gap-2\">\r\n              <Button\r\n                size=\"icon\"\r\n                variant=\"secondary\"\r\n                className=\"rounded-full bg-background/80 backdrop-blur\"\r\n                onClick={prev}\r\n                aria-label=\"Previous image\"\r\n              >\r\n                <ChevronLeft className=\"h-4 w-4\" />\r\n              </Button>\r\n              <Button\r\n                size=\"icon\"\r\n                variant=\"secondary\"\r\n                className=\"rounded-full bg-background/80 backdrop-blur\"\r\n                onClick={next}\r\n                aria-label=\"Next image\"\r\n              >\r\n                <ChevronRight className=\"h-4 w-4\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/product-image-card.tsx"
    }
  ]
}