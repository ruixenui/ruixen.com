{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tech-orbit-showcase",
  "type": "registry:ui",
  "title": "Tech Orbit Showcase",
  "description": "Animated orbital showcase with rotating tech icons and call-to-action",
  "dependencies": [
    "react-icons"
  ],
  "files": [
    {
      "path": "registry/ruixenui/tech-orbit-showcase.tsx",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport Link from \"next/link\";\nimport {\n  FaReact,\n  FaAws,\n  FaDocker,\n  FaNodeJs,\n  FaGithub,\n  FaTwitter,\n  FaLinkedin,\n  FaInstagram,\n  FaGoogle,\n  FaApple,\n} from \"react-icons/fa\";\nimport {\n  SiNextdotjs,\n  SiVercel,\n  SiRedux,\n  SiTypescript,\n  SiFacebook,\n} from \"react-icons/si\";\n\nconst fallbackUrls = [\n  \"https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg\",\n  \"https://upload.wikimedia.org/wikipedia/commons/9/96/Among_Us_icon.png\",\n];\n\nconst iconConfigs = [\n  { Icon: FaReact, color: \"#61DAFB\" },\n  { Icon: FaAws, color: \"#FF9900\" },\n  { Icon: FaDocker, color: \"#2496ED\" },\n  { Icon: FaNodeJs, color: \"#339933\" },\n  { Icon: SiNextdotjs, color: \"#000000\" },\n  { Icon: SiVercel, color: \"#000000\" },\n  { Icon: SiRedux, color: \"#764ABC\" },\n  { Icon: SiTypescript, color: \"#3178C6\" },\n  { Icon: FaGithub, color: \"#181717\" },\n  { Icon: FaTwitter, color: \"#1DA1F2\" },\n  { Icon: FaLinkedin, color: \"#0077B5\" },\n  { Icon: FaInstagram, color: \"#E1306C\" },\n  { Icon: FaGoogle, color: \"#DB4437\" },\n  { Icon: FaApple, color: \"#000000\" },\n  { Icon: SiFacebook, color: \"#1877F2\" },\n  { Icon: null, img: fallbackUrls[0] },\n  { Icon: null, img: fallbackUrls[1] },\n];\n\nexport default function TechOrbitShowcase() {\n  const orbitCount = 3;\n  const orbitGap = 8; // rem between orbits\n  const iconsPerOrbit = Math.ceil(iconConfigs.length / orbitCount);\n\n  return (\n    <section className=\"relative max-w-6xl mx-auto my-32 pl-10 flex items-center justify-between h-[30rem] border border-gray-200 dark:border-gray-700 bg-white dark:bg-black overflow-hidden rounded-3xl\">\n      {/* Left side: Heading */}\n      <div className=\"w-1/2 z-10\">\n        <h1 className=\"text-4xl sm:text-6xl font-bold mb-4 text-gray-900 dark:text-white\">\n          Build your idea\n        </h1>\n        <p className=\"text-gray-500 dark:text-gray-300 mb-6 max-w-lg\">\n          RUIXEN is a modern and responsive UI kit for React, Next.js, and\n          Tailwind CSS.\n        </p>\n        <div className=\"flex items-center gap-3\">\n          <Button variant=\"default\">\n            <Link href=\"https://ruixen.com\" target=\"_blank\">\n              Get Started\n            </Link>\n          </Button>\n          <Button variant=\"outline\">Learn More</Button>\n        </div>\n      </div>\n\n      {/* Right side: Orbit animation */}\n      <div className=\"relative w-1/2 h-full flex items-center justify-start overflow-hidden\">\n        <div className=\"relative w-[50rem] h-[50rem] translate-x-[50%] flex items-center justify-center\">\n          {/* Center Circle */}\n          <div className=\"w-24 h-24 rounded-full bg-gray-50 dark:bg-gray-800 shadow-lg flex items-center justify-center\">\n            <FaReact className=\"w-12 h-12 text-blue-400\" />\n          </div>\n\n          {/* Generate Orbits */}\n          {[...Array(orbitCount)].map((_, orbitIdx) => {\n            const size = `${12 + orbitGap * (orbitIdx + 1)}rem`;\n            const angleStep = (2 * Math.PI) / iconsPerOrbit;\n\n            return (\n              <div\n                key={orbitIdx}\n                className=\"absolute rounded-full border-2 border-dotted border-gray-300 dark:border-gray-600\"\n                style={{\n                  width: size,\n                  height: size,\n                  animation: `spin ${12 + orbitIdx * 6}s linear infinite`,\n                }}\n              >\n                {iconConfigs\n                  .slice(\n                    orbitIdx * iconsPerOrbit,\n                    orbitIdx * iconsPerOrbit + iconsPerOrbit,\n                  )\n                  .map((cfg, iconIdx) => {\n                    const angle = iconIdx * angleStep;\n                    const x = 50 + 50 * Math.cos(angle);\n                    const y = 50 + 50 * Math.sin(angle);\n\n                    return (\n                      <div\n                        key={iconIdx}\n                        className=\"absolute bg-white dark:bg-gray-800 rounded-full p-1 shadow-md\"\n                        style={{\n                          left: `${x}%`,\n                          top: `${y}%`,\n                          transform: \"translate(-50%, -50%)\",\n                        }}\n                      >\n                        {cfg.Icon ? (\n                          <cfg.Icon\n                            className=\"w-8 h-8\"\n                            style={{ color: cfg.color }}\n                          />\n                        ) : (\n                          <img\n                            src={cfg.img}\n                            alt=\"icon\"\n                            className=\"w-8 h-8 object-contain\"\n                          />\n                        )}\n                      </div>\n                    );\n                  })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Animation keyframes */}\n      <style jsx>{`\n        @keyframes spin {\n          from {\n            transform: rotate(0deg);\n          }\n          to {\n            transform: rotate(360deg);\n          }\n        }\n      `}</style>\n    </section>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/tech-orbit-showcase.tsx"
    }
  ],
  "css": {
    "@keyframes spin": {
      "from": {
        "transform": "rotate(0deg)"
      },
      "to": {
        "transform": "rotate(360deg)"
      }
    }
  }
}