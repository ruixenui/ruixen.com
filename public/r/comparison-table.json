{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "comparison-table",
  "type": "registry:ui",
  "title": "Comparison Table",
  "description": "A comparison table with filtering, search, and side-by-side item comparison.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "table",
    "card",
    "button",
    "input",
    "select"
  ],
  "files": [
    {
      "path": "registry/ruixenui/comparison-table.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Card, CardContent } from \"@/components/ui/card\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport type Item = {\r\n  id: number\r\n  category: string\r\n  price: number\r\n  rating: number\r\n  stock: number\r\n}\r\n\r\n// Default sample data\r\nconst defaultData: Item[] = [\r\n  { id: 1, category: \"Laptop\", price: 1200, rating: 4.5, stock: 20 },\r\n  { id: 2, category: \"Tablet\", price: 600, rating: 4.1, stock: 35 },\r\n  { id: 3, category: \"Smartphone\", price: 800, rating: 4.7, stock: 50 },\r\n  { id: 4, category: \"Monitor\", price: 300, rating: 4.0, stock: 15 },\r\n  { id: 5, category: \"Laptop\", price: 1500, rating: 4.8, stock: 10 },\r\n  { id: 6, category: \"Tablet\", price: 550, rating: 4.2, stock: 28 },\r\n]\r\n\r\nconst defaultCategories = [\"Laptop\", \"Tablet\", \"Smartphone\", \"Monitor\"]\r\n\r\ninterface ComparisonTableProps {\r\n  /** Data for the table */\r\n  data?: Item[]\r\n  /** Categories available for filtering */\r\n  categories?: string[]\r\n  /** Optional heading/title */\r\n  title?: string\r\n}\r\n\r\nexport default function ComparisonTable({\r\n  data = defaultData,\r\n  categories = defaultCategories,\r\n  title = \"Comparison Table\",\r\n}: ComparisonTableProps) {\r\n  const [selected, setSelected] = React.useState<number[]>([])\r\n  const [search, setSearch] = React.useState(\"\")\r\n  const [category, setCategory] = React.useState<string>(\"all\")\r\n\r\n  // Toggle select logic (max 2 items)\r\n  const toggleSelect = (id: number) => {\r\n    setSelected((prev) =>\r\n      prev.includes(id) ? prev.filter((x) => x !== id) : prev.length < 2 ? [...prev, id] : prev\r\n    )\r\n  }\r\n\r\n  const resetSelection = () => setSelected([])\r\n\r\n  // Apply filters\r\n  const filteredData = data.filter((item) => {\r\n    const matchesSearch = item.category.toLowerCase().includes(search.toLowerCase())\r\n    const matchesCategory = category === \"all\" || item.category === category\r\n    return matchesSearch && matchesCategory\r\n  })\r\n\r\n  // Selected comparison items\r\n  const comparedItems = data.filter((item) => selected.includes(item.id))\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-2xl mx-auto\">\r\n      <CardContent className=\"p-3\">\r\n        <h2 className=\"text-xl font-semibold mb-4\">{title}</h2>\r\n\r\n        {/* Filters */}\r\n        <div className=\"flex items-center gap-3 mb-4\">\r\n          <Input\r\n            placeholder=\"Search category...\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"max-w-xs\"\r\n          />\r\n          <Select value={category} onValueChange={setCategory}>\r\n            <SelectTrigger className=\"w-[180px]\">\r\n              <SelectValue placeholder=\"Filter by category\" />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"all\">All</SelectItem>\r\n              {categories.map((cat) => (\r\n                <SelectItem key={cat} value={cat}>\r\n                  {cat}\r\n                </SelectItem>\r\n              ))}\r\n            </SelectContent>\r\n          </Select>\r\n          <Button variant=\"outline\" onClick={resetSelection}>\r\n            Reset\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Table */}\r\n        <Table>\r\n          <TableHeader>\r\n            <TableRow>\r\n              <TableHead>Category</TableHead>\r\n              <TableHead>Price ($)</TableHead>\r\n              <TableHead>Rating</TableHead>\r\n              <TableHead>Stock</TableHead>\r\n              <TableHead>Select</TableHead>\r\n            </TableRow>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {filteredData.map((item) => (\r\n              <TableRow\r\n                key={item.id}\r\n                className={cn(selected.includes(item.id) && \"bg-muted/50\")}\r\n              >\r\n                <TableCell className=\"p-2\">{item.category}</TableCell>\r\n                <TableCell className=\"p-2\">{item.price}</TableCell>\r\n                <TableCell className=\"p-2\">{item.rating}</TableCell>\r\n                <TableCell className=\"p-2\">{item.stock}</TableCell>\r\n                <TableCell className=\"p-2\">\r\n                  <Button\r\n                    variant={selected.includes(item.id) ? \"destructive\" : \"outline\"}\r\n                    size=\"sm\"\r\n                    className={selected.includes(item.id) ? \"text-white\" : \"\"}\r\n                    onClick={() => toggleSelect(item.id)}\r\n                  >\r\n                    {selected.includes(item.id) ? \"Remove\" : \"Compare\"}\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        {/* Comparison view */}\r\n        {comparedItems.length === 2 && (\r\n          <div className=\"mt-6 border-t pt-4\">\r\n            <h3 className=\"text-lg font-medium mb-3\">Comparison Result</h3>\r\n            <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n              <div className=\"font-semibold\">Attribute</div>\r\n              <div className=\"font-semibold\">{comparedItems[0].category}</div>\r\n              <div className=\"font-semibold\">{comparedItems[1].category}</div>\r\n\r\n              <div>Price ($)</div>\r\n              <div\r\n                className={cn(comparedItems[0].price < comparedItems[1].price && \"text-green-600 dark:text-green-400\")}\r\n              >\r\n                {comparedItems[0].price}\r\n              </div>\r\n              <div\r\n                className={cn(comparedItems[1].price < comparedItems[0].price && \"text-green-600 dark:text-green-400\")}\r\n              >\r\n                {comparedItems[1].price}\r\n              </div>\r\n\r\n              <div>Rating</div>\r\n              <div\r\n                className={cn(comparedItems[0].rating > comparedItems[1].rating && \"text-green-600 dark:text-green-400\")}\r\n              >\r\n                {comparedItems[0].rating}\r\n              </div>\r\n              <div\r\n                className={cn(comparedItems[1].rating > comparedItems[0].rating && \"text-green-600 dark:text-green-400\")}\r\n              >\r\n                {comparedItems[1].rating}\r\n              </div>\r\n\r\n              <div>Stock</div>\r\n              <div\r\n                className={cn(comparedItems[0].stock > comparedItems[1].stock && \"text-green-600 dark:text-green-400\")}\r\n              >\r\n                {comparedItems[0].stock}\r\n              </div>\r\n              <div\r\n                className={cn(comparedItems[1].stock > comparedItems[0].stock && \"text-green-600 dark:text-green-400\")}\r\n              >\r\n                {comparedItems[1].stock}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/comparison-table.tsx"
    }
  ]
}