{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "comparison-table",
  "type": "registry:ui",
  "title": "Comparison Table",
  "description": "A comparison table with filtering, search, and side-by-side item comparison.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "table",
    "card",
    "button",
    "input",
    "select"
  ],
  "files": [
    {
      "path": "registry/ruixenui/comparison-table.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { cn } from \"@/lib/utils\";\n\nexport type Item = {\n  id: number;\n  category: string;\n  price: number;\n  rating: number;\n  stock: number;\n};\n\n// Default sample data\nconst defaultData: Item[] = [\n  { id: 1, category: \"Laptop\", price: 1200, rating: 4.5, stock: 20 },\n  { id: 2, category: \"Tablet\", price: 600, rating: 4.1, stock: 35 },\n  { id: 3, category: \"Smartphone\", price: 800, rating: 4.7, stock: 50 },\n  { id: 4, category: \"Monitor\", price: 300, rating: 4.0, stock: 15 },\n  { id: 5, category: \"Laptop\", price: 1500, rating: 4.8, stock: 10 },\n  { id: 6, category: \"Tablet\", price: 550, rating: 4.2, stock: 28 },\n];\n\nconst defaultCategories = [\"Laptop\", \"Tablet\", \"Smartphone\", \"Monitor\"];\n\ninterface ComparisonTableProps {\n  /** Data for the table */\n  data?: Item[];\n  /** Categories available for filtering */\n  categories?: string[];\n  /** Optional heading/title */\n  title?: string;\n}\n\nexport default function ComparisonTable({\n  data = defaultData,\n  categories = defaultCategories,\n  title = \"Comparison Table\",\n}: ComparisonTableProps) {\n  const [selected, setSelected] = React.useState<number[]>([]);\n  const [search, setSearch] = React.useState(\"\");\n  const [category, setCategory] = React.useState<string>(\"all\");\n\n  // Toggle select logic (max 2 items)\n  const toggleSelect = (id: number) => {\n    setSelected((prev) =>\n      prev.includes(id)\n        ? prev.filter((x) => x !== id)\n        : prev.length < 2\n          ? [...prev, id]\n          : prev,\n    );\n  };\n\n  const resetSelection = () => setSelected([]);\n\n  // Apply filters\n  const filteredData = data.filter((item) => {\n    const matchesSearch = item.category\n      .toLowerCase()\n      .includes(search.toLowerCase());\n    const matchesCategory = category === \"all\" || item.category === category;\n    return matchesSearch && matchesCategory;\n  });\n\n  // Selected comparison items\n  const comparedItems = data.filter((item) => selected.includes(item.id));\n\n  return (\n    <Card className=\"w-full max-w-2xl mx-auto\">\n      <CardContent className=\"p-3\">\n        <h2 className=\"text-xl font-semibold mb-4\">{title}</h2>\n\n        {/* Filters */}\n        <div className=\"flex items-center gap-3 mb-4\">\n          <Input\n            placeholder=\"Search category...\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n            className=\"max-w-xs\"\n          />\n          <Select value={category} onValueChange={setCategory}>\n            <SelectTrigger className=\"w-[180px]\">\n              <SelectValue placeholder=\"Filter by category\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All</SelectItem>\n              {categories.map((cat) => (\n                <SelectItem key={cat} value={cat}>\n                  {cat}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n          <Button variant=\"outline\" onClick={resetSelection}>\n            Reset\n          </Button>\n        </div>\n\n        {/* Table */}\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>Category</TableHead>\n              <TableHead>Price ($)</TableHead>\n              <TableHead>Rating</TableHead>\n              <TableHead>Stock</TableHead>\n              <TableHead>Select</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {filteredData.map((item) => (\n              <TableRow\n                key={item.id}\n                className={cn(selected.includes(item.id) && \"bg-muted/50\")}\n              >\n                <TableCell className=\"p-2\">{item.category}</TableCell>\n                <TableCell className=\"p-2\">{item.price}</TableCell>\n                <TableCell className=\"p-2\">{item.rating}</TableCell>\n                <TableCell className=\"p-2\">{item.stock}</TableCell>\n                <TableCell className=\"p-2\">\n                  <Button\n                    variant={\n                      selected.includes(item.id) ? \"destructive\" : \"outline\"\n                    }\n                    size=\"sm\"\n                    className={selected.includes(item.id) ? \"text-white\" : \"\"}\n                    onClick={() => toggleSelect(item.id)}\n                  >\n                    {selected.includes(item.id) ? \"Remove\" : \"Compare\"}\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        {/* Comparison view */}\n        {comparedItems.length === 2 && (\n          <div className=\"mt-6 border-t pt-4\">\n            <h3 className=\"text-lg font-medium mb-3\">Comparison Result</h3>\n            <div className=\"grid grid-cols-3 gap-4 text-sm\">\n              <div className=\"font-semibold\">Attribute</div>\n              <div className=\"font-semibold\">{comparedItems[0].category}</div>\n              <div className=\"font-semibold\">{comparedItems[1].category}</div>\n\n              <div>Price ($)</div>\n              <div\n                className={cn(\n                  comparedItems[0].price < comparedItems[1].price &&\n                    \"text-green-600 dark:text-green-400\",\n                )}\n              >\n                {comparedItems[0].price}\n              </div>\n              <div\n                className={cn(\n                  comparedItems[1].price < comparedItems[0].price &&\n                    \"text-green-600 dark:text-green-400\",\n                )}\n              >\n                {comparedItems[1].price}\n              </div>\n\n              <div>Rating</div>\n              <div\n                className={cn(\n                  comparedItems[0].rating > comparedItems[1].rating &&\n                    \"text-green-600 dark:text-green-400\",\n                )}\n              >\n                {comparedItems[0].rating}\n              </div>\n              <div\n                className={cn(\n                  comparedItems[1].rating > comparedItems[0].rating &&\n                    \"text-green-600 dark:text-green-400\",\n                )}\n              >\n                {comparedItems[1].rating}\n              </div>\n\n              <div>Stock</div>\n              <div\n                className={cn(\n                  comparedItems[0].stock > comparedItems[1].stock &&\n                    \"text-green-600 dark:text-green-400\",\n                )}\n              >\n                {comparedItems[0].stock}\n              </div>\n              <div\n                className={cn(\n                  comparedItems[1].stock > comparedItems[0].stock &&\n                    \"text-green-600 dark:text-green-400\",\n                )}\n              >\n                {comparedItems[1].stock}\n              </div>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/comparison-table.tsx"
    }
  ]
}