{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "color-picker-input",
  "type": "registry:ui",
  "title": "Color Picker Input",
  "description": "A color picker component with opacity control and copy functionality.",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/color-picker-input.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { Check, Copy } from \"lucide-react\";\nimport { useCopyToClipboard } from \"@/hooks/use-copy-to-clipboard\";\n\ninterface ColorPickerProps {\n  colors?: string[];\n  initialColor?: string;\n  initialOpacity?: number;\n  onChange?: (color: string, opacity: number) => void;\n}\n\nconst defaultColors = [\n  \"#F87171\",\n  \"#FB923C\",\n  \"#FACC15\",\n  \"#4ADE80\",\n  \"#22D3EE\",\n  \"#3B82F6\",\n  \"#8B5CF6\",\n  \"#EC4899\",\n  \"#A3E635\",\n  \"#06B6D4\",\n  \"#0EA5E9\",\n  \"#6366F1\",\n];\n\nconst toRGBA = (hex: string, opacity: number) => {\n  const alpha = Math.round(opacity * 2.55)\n    .toString(16)\n    .padStart(2, \"0\");\n  return `${hex}${alpha}`;\n};\n\nexport default function ColorPickerInput({\n  colors = defaultColors,\n  initialColor = \"#3B82F6\",\n  initialOpacity = 100,\n  onChange,\n}: ColorPickerProps) {\n  const [color, setColor] = useState(initialColor);\n  const [opacity, setOpacity] = useState(initialOpacity);\n  const { isCopied, copyToClipboard } = useCopyToClipboard();\n\n  const finalColor = toRGBA(color, opacity);\n\n  const handleColorChange = (newColor: string) => {\n    setColor(newColor);\n    onChange?.(newColor, opacity);\n  };\n\n  const handleOpacityChange = (newOpacity: number) => {\n    setOpacity(newOpacity);\n    onChange?.(color, newOpacity);\n  };\n\n  const handleCopy = () => copyToClipboard(finalColor);\n\n  return (\n    <div className=\"w-full max-w-md border bg-white dark:bg-zinc-900 rounded-xl shadow-md p-6 space-y-5\">\n      {/* Title & Preview */}\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-sm font-semibold text-zinc-800 dark:text-zinc-200\">\n          Select a Color\n        </h3>\n        <div\n          className=\"w-6 h-6 rounded-full border border-zinc-300 dark:border-zinc-700\"\n          style={{ backgroundColor: finalColor }}\n        />\n      </div>\n\n      {/* Swatches Grid */}\n      <div className=\"grid grid-cols-6 gap-3\">\n        {colors.map((c) => {\n          const selected = color === c;\n          return (\n            <button\n              key={c}\n              onClick={() => handleColorChange(c)}\n              className=\"w-9 h-9 rounded-full relative ring-offset-2 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition-transform hover:scale-110\"\n              style={{ backgroundColor: c }}\n            >\n              {selected && (\n                <Check className=\"w-4 h-4 text-white absolute inset-0 m-auto drop-shadow\" />\n              )}\n            </button>\n          );\n        })}\n      </div>\n\n      {/* Opacity Control */}\n      <div className=\"space-y-1.5\">\n        <div className=\"flex justify-between text-xs text-zinc-600 dark:text-zinc-400\">\n          <span>Opacity</span>\n          <span>{opacity}%</span>\n        </div>\n        <input\n          type=\"range\"\n          min={0}\n          max={100}\n          value={opacity}\n          onChange={(e) => handleOpacityChange(Number(e.target.value))}\n          className=\"w-full accent-indigo-500\"\n        />\n      </div>\n\n      {/* Color Output & Copy */}\n      <div className=\"flex items-center gap-2\">\n        <input\n          readOnly\n          value={finalColor.toUpperCase()}\n          className=\"w-full px-3 py-1.5 text-sm font-mono rounded-md border border-zinc-200 dark:border-zinc-700 bg-zinc-50 dark:bg-zinc-800\"\n        />\n        <button\n          onClick={handleCopy}\n          className=\"p-2 rounded-md hover:bg-zinc-100 dark:hover:bg-zinc-800\"\n        >\n          {isCopied ? (\n            <Check className=\"w-4 h-4 text-green-500\" />\n          ) : (\n            <Copy className=\"w-4 h-4 text-zinc-500\" />\n          )}\n        </button>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/color-picker-input.tsx"
    }
  ]
}