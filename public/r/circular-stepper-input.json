{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "circular-stepper-input",
  "type": "registry:ui",
  "title": "Circular Stepper Input",
  "description": "A circular input component with increment/decrement functionality.",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/circular-stepper-input.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\n\ninterface CircularStepperInputProps {\n  min?: number;\n  max?: number;\n  step?: number;\n  defaultValue?: number;\n  size?: number; // diameter of the circle in px\n  onChange?: (value: number) => void;\n}\n\nexport default function CircularStepperInput({\n  min = 0,\n  max = 100,\n  step = 1,\n  defaultValue = 50,\n  size = 120,\n  onChange,\n}: CircularStepperInputProps) {\n  const [value, setValue] = useState(defaultValue);\n\n  const percentage = ((value - min) / (max - min)) * 100;\n  const radius = size / 2 - 6; // subtract stroke width\n  const circumference = 2 * Math.PI * radius;\n\n  const incrementValue = () => {\n    setValue((prev) => {\n      const next = Math.min(prev + step, max);\n      onChange?.(next);\n      return next;\n    });\n  };\n\n  const decrementValue = () => {\n    setValue((prev) => {\n      const next = Math.max(prev - step, min);\n      onChange?.(next);\n      return next;\n    });\n  };\n\n  return (\n    <div className={`w-full max-w-[${size}px] mx-auto`}>\n      <div className=\"bg-white dark:bg-zinc-900 border border-zinc-200 dark:border-zinc-800 rounded-xl shadow p-4 flex flex-col items-center gap-4\">\n        {/* Increment Button */}\n        <button\n          onClick={incrementValue}\n          className=\"w-8 h-8 rounded-full bg-zinc-100 dark:bg-zinc-800 hover:bg-zinc-200 dark:hover:bg-zinc-700 text-zinc-800 dark:text-zinc-100 transition\"\n          aria-label=\"Increment\"\n        >\n          +\n        </button>\n\n        {/* Circular Progress */}\n        <div className=\"relative\" style={{ width: size, height: size }}>\n          <svg width={size} height={size} className=\"rotate-[-90deg]\">\n            <circle\n              cx={size / 2}\n              cy={size / 2}\n              r={radius}\n              stroke=\"currentColor\"\n              strokeWidth=\"6\"\n              className=\"text-zinc-200 dark:text-zinc-700\"\n              fill=\"transparent\"\n            />\n            <circle\n              cx={size / 2}\n              cy={size / 2}\n              r={radius}\n              stroke=\"currentColor\"\n              strokeWidth=\"6\"\n              className=\"text-indigo-500\"\n              strokeDasharray={circumference}\n              strokeDashoffset={circumference * (1 - percentage / 100)}\n              fill=\"transparent\"\n              strokeLinecap=\"round\"\n            />\n          </svg>\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <span className=\"text-lg font-semibold text-zinc-800 dark:text-white\">\n              {value}\n            </span>\n          </div>\n        </div>\n\n        {/* Decrement Button */}\n        <button\n          onClick={decrementValue}\n          className=\"w-8 h-8 rounded-full bg-zinc-100 dark:bg-zinc-800 hover:bg-zinc-200 dark:hover:bg-zinc-700 text-zinc-800 dark:text-zinc-100 transition\"\n          aria-label=\"Decrement\"\n        >\n          âˆ’\n        </button>\n\n        {/* Min & Max Labels */}\n        <div className=\"w-full mt-2 flex justify-between text-xs text-zinc-500 dark:text-zinc-400\">\n          <span>{min}</span>\n          <span>{max}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/circular-stepper-input.tsx"
    }
  ]
}