{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "spectrum-hero-section",
  "type": "registry:ui",
  "title": "Spectrum Hero Section",
  "description": "A vibrant hero section with spectrum color effects and dynamic animations",
  "dependencies": [
    "motion",
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "registry/ruixenui/spectrum-hero-section.tsx",
      "content": "\"use client\";\n\nimport { useEffect, useRef } from \"react\";\nimport gsap from \"gsap\";\nimport Image from \"next/image\";\nimport { Button } from \"@/components/ui/button\";\n\ntype SpectrumHeroSectionProps = {\n  title?: string;\n  description?: string;\n  button?: {\n    label: string;\n    href?: string;\n  } | null;\n  image?: {\n    src: string;\n    alt: string;\n  };\n};\n\nexport default function SpectrumHeroSection({\n  title = \"Aura Behind Every Image\",\n  description = \"Drop your photo and let Ruixen unveil the hidden moods, energies, and storylines woven into your presenceâ€”powered by deep neural insight and intuitive design.\",\n  button = { label: \"Upload photo\", href: \"#\" },\n  image = { src: \"/38.jpg\", alt: \"Aura analysis\" },\n}: SpectrumHeroSectionProps) {\n  const headingRef = useRef<HTMLHeadingElement | null>(null);\n  const subtextRef = useRef<HTMLParagraphElement | null>(null);\n  const buttonRef = useRef<HTMLDivElement | null>(null);\n  const imageRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const tl = gsap.timeline({\n      defaults: { ease: \"power3.out\", duration: 1 },\n    });\n\n    if (headingRef.current) {\n      tl.fromTo(\n        headingRef.current,\n        { x: -100, opacity: 0 },\n        { x: 0, opacity: 1 },\n      );\n    }\n\n    if (subtextRef.current) {\n      tl.fromTo(\n        subtextRef.current,\n        { y: 20, opacity: 0 },\n        { y: 0, opacity: 1 },\n        \"-=0.6\",\n      );\n    }\n\n    if (buttonRef.current) {\n      tl.fromTo(\n        buttonRef.current,\n        { y: 20, opacity: 0 },\n        { y: 0, opacity: 1 },\n        \"-=0.5\",\n      );\n    }\n\n    if (imageRef.current) {\n      tl.fromTo(\n        imageRef.current,\n        { scale: 1.1, opacity: 0 },\n        { scale: 1, opacity: 1 },\n        \"-=0.5\",\n      );\n    }\n  }, []);\n\n  return (\n    <section className=\"w-full min-h-screen flex flex-col justify-center items-center px-6 text-center\">\n      {/* Content */}\n      <div className=\"max-w-3xl space-y-4 py-10\">\n        <h1\n          ref={headingRef}\n          className=\"text-4xl md:text-6xl font-bold tracking-tight text-black dark:text-gray-100\"\n        >\n          {title}\n        </h1>\n        <p\n          ref={subtextRef}\n          className=\"text-gray-500 max-w-xl mx-auto text-lg dark:text-gray-400\"\n        >\n          {description}\n        </p>\n\n        {button && (\n          <div ref={buttonRef} className=\"flex justify-center gap-3\">\n            <Button className=\"px-6 py-2 text-base rounded-full\" asChild>\n              <a href={button.href || \"#\"}>{button.label}</a>\n            </Button>\n          </div>\n        )}\n      </div>\n\n      {/* Image with Gradient Overlay */}\n      <div\n        ref={imageRef}\n        className=\"relative w-full max-w-6xl overflow-hidden shadow-2xl\"\n      >\n        <Image\n          src={image.src}\n          alt={image.alt}\n          className=\"w-full object-cover max-h-[400px]\"\n          width={1000}\n          height={1000}\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-r from-red-200 via-pink-100 to-yellow-100 opacity-30 blur-2xl mix-blend-overlay z-10\" />\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/spectrum-hero-section.tsx"
    }
  ]
}