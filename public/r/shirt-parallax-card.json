{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "shirt-parallax-card",
  "type": "registry:ui",
  "title": "Shirt Parallax Card",
  "description": "A product card with 3D parallax effects and floating product image with bounce animation.",
  "dependencies": [
    "framer-motion"
  ],
  "registryDependencies": [
    "card",
    "button"
  ],
  "files": [
    {
      "path": "registry/ruixenui/shirt-parallax-card.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { motion, useMotionValue, useSpring, useTransform } from \"framer-motion\";\nimport { cn } from \"@/lib/utils\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\n\n// CSS bounce animation (can also go into globals.css if preferred)\nconst bounceStyle = `\n@keyframes bounceFloat {\n  0%, 100% { transform: translateY(0); }\n  50% { transform: translateY(-8px); }\n}\n.bounce {\n  animation: bounceFloat 3s ease-in-out infinite;\n}\n`;\n\ninterface ShirtParallaxCardProps {\n  title: string;\n  description: string;\n  price: string;\n  imageUrl?: string;\n  className?: string;\n}\n\nexport function ShirtParallaxCard({\n  title,\n  description,\n  price,\n  imageUrl = \"https://pub-940ccf6255b54fa799a9b01050e6c227.r2.dev/ruixen_shirt_product.png\",\n  className,\n}: ShirtParallaxCardProps) {\n  const x = useMotionValue(0);\n  const y = useMotionValue(0);\n\n  const xSpring = useSpring(x, { stiffness: 300, damping: 30 });\n  const ySpring = useSpring(y, { stiffness: 300, damping: 30 });\n\n  const rotateX = useTransform(ySpring, [-0.5, 0.5], [\"6deg\", \"-6deg\"]);\n  const rotateY = useTransform(xSpring, [-0.5, 0.5], [\"-6deg\", \"6deg\"]);\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const mouseY = e.clientY - rect.top;\n    x.set(mouseX / rect.width - 0.5);\n    y.set(mouseY / rect.height - 0.5);\n  };\n\n  const handleMouseLeave = () => {\n    x.set(0);\n    y.set(0);\n  };\n\n  return (\n    <>\n      {/* Inject bounce CSS */}\n      <style>{bounceStyle}</style>\n\n      <motion.div\n        onMouseMove={handleMouseMove}\n        onMouseLeave={handleMouseLeave}\n        style={{ rotateX, rotateY, transformStyle: \"preserve-3d\" }}\n        whileHover={{\n          scale: 0.97,\n          boxShadow: \"0px 15px 35px rgba(0,0,0,0.25)\",\n        }}\n        transition={{ type: \"spring\", stiffness: 200, damping: 25 }}\n        className={cn(\"relative w-96 cursor-pointer rounded-2xl\", className)}\n      >\n        {/* Card */}\n        <Card className=\"relative z-10 rounded-2xl border bg-card p-4\">\n          <CardHeader className=\"p-0\">\n            <CardTitle className=\"text-xl font-bold\">{title}</CardTitle>\n          </CardHeader>\n          <CardContent className=\"p-0 max-w-[280px]\">\n            <p className=\"text-sm text-muted-foreground\">{description}</p>\n            <p className=\"mt-3 text-lg font-semibold text-primary\">{price}</p>\n            <Button className=\"mt-4 w-full\">Buy Now</Button>\n          </CardContent>\n        </Card>\n\n        {/* Shirt image */}\n        <motion.img\n          src={imageUrl}\n          alt={title}\n          className={cn(\n            \"absolute -top-12 -right-20 h-48 w-auto object-contain pointer-events-none z-20 bounce\",\n          )}\n          whileHover={{\n            scale: 1.15,\n            y: -6,\n            boxShadow: \"0px 25px 50px rgba(0,0,0,0.35)\",\n          }}\n          transition={{ type: \"spring\", stiffness: 250, damping: 20 }}\n        />\n      </motion.div>\n    </>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/shirt-parallax-card.tsx"
    }
  ]
}