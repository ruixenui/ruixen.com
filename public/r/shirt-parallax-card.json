{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "shirt-parallax-card",
  "type": "registry:ui",
  "title": "Shirt Parallax Card",
  "description": "A product card with 3D parallax effects and floating product image with bounce animation.",
  "dependencies": [
    "framer-motion"
  ],
  "registryDependencies": [
    "card",
    "button"
  ],
  "files": [
    {
      "path": "registry/ruixenui/shirt-parallax-card.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { motion, useMotionValue, useSpring, useTransform } from \"framer-motion\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\n// CSS bounce animation (can also go into globals.css if preferred)\r\nconst bounceStyle = `\r\n@keyframes bounceFloat {\r\n  0%, 100% { transform: translateY(0); }\r\n  50% { transform: translateY(-8px); }\r\n}\r\n.bounce {\r\n  animation: bounceFloat 3s ease-in-out infinite;\r\n}\r\n`;\r\n\r\ninterface ShirtParallaxCardProps {\r\n  title: string;\r\n  description: string;\r\n  price: string;\r\n  imageUrl?: string;\r\n  className?: string;\r\n}\r\n\r\nexport function ShirtParallaxCard({\r\n  title,\r\n  description,\r\n  price,\r\n  imageUrl = \"https://pub-940ccf6255b54fa799a9b01050e6c227.r2.dev/ruixen_shirt_product.png\",\r\n  className,\r\n}: ShirtParallaxCardProps) {\r\n  const x = useMotionValue(0);\r\n  const y = useMotionValue(0);\r\n\r\n  const xSpring = useSpring(x, { stiffness: 300, damping: 30 });\r\n  const ySpring = useSpring(y, { stiffness: 300, damping: 30 });\r\n\r\n  const rotateX = useTransform(ySpring, [-0.5, 0.5], [\"6deg\", \"-6deg\"]);\r\n  const rotateY = useTransform(xSpring, [-0.5, 0.5], [\"-6deg\", \"6deg\"]);\r\n\r\n  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const mouseX = e.clientX - rect.left;\r\n    const mouseY = e.clientY - rect.top;\r\n    x.set(mouseX / rect.width - 0.5);\r\n    y.set(mouseY / rect.height - 0.5);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    x.set(0);\r\n    y.set(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Inject bounce CSS */}\r\n      <style>{bounceStyle}</style>\r\n\r\n      <motion.div\r\n        onMouseMove={handleMouseMove}\r\n        onMouseLeave={handleMouseLeave}\r\n        style={{ rotateX, rotateY, transformStyle: \"preserve-3d\" }}\r\n        whileHover={{ scale: 0.97, boxShadow: \"0px 15px 35px rgba(0,0,0,0.25)\" }}\r\n        transition={{ type: \"spring\", stiffness: 200, damping: 25 }}\r\n        className={cn(\"relative w-96 cursor-pointer rounded-2xl\", className)}\r\n      >\r\n        {/* Card */}\r\n        <Card className=\"relative z-10 rounded-2xl border bg-card p-4\">\r\n          <CardHeader className=\"p-0\">\r\n            <CardTitle className=\"text-xl font-bold\">{title}</CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"p-0 max-w-[280px]\">\r\n            <p className=\"text-sm text-muted-foreground\">{description}</p>\r\n            <p className=\"mt-3 text-lg font-semibold text-primary\">{price}</p>\r\n            <Button className=\"mt-4 w-full\">Buy Now</Button>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Shirt image */}\r\n        <motion.img\r\n          src={imageUrl}\r\n          alt={title}\r\n          className={cn(\r\n            \"absolute -top-12 -right-20 h-48 w-auto object-contain pointer-events-none z-20 bounce\"\r\n          )}\r\n          whileHover={{\r\n            scale: 1.15,\r\n            y: -6,\r\n            boxShadow: \"0px 25px 50px rgba(0,0,0,0.35)\",\r\n          }}\r\n          transition={{ type: \"spring\", stiffness: 250, damping: 20 }}\r\n        />\r\n      </motion.div>\r\n    </>\r\n  );\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/shirt-parallax-card.tsx"
    }
  ]
}