{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "split-login-card",
  "type": "registry:ui",
  "title": "Split Login Card",
  "description": "Split-screen login card with branding on one side and form on the other.",
  "dependencies": [],
  "files": [
    {
      "path": "registry/ruixenui/split-login-card.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface InputField {\n  id: string;\n  type: string;\n  placeholder?: string;\n  label?: string;\n}\n\ninterface SplitLoginCardProps {\n  /** Left side title */\n  title?: string;\n  /** Left side description */\n  description?: string;\n  /** Left side image URL */\n  imageSrc?: string;\n  /** Inputs to render on the form */\n  inputs?: InputField[];\n  /** Callback when input values change */\n  onChange?: (values: Record<string, string>) => void;\n  /** Callback on submit */\n  onSubmit?: (values: Record<string, string>) => void;\n  /** Button label */\n  buttonLabel?: string;\n  className?: string;\n}\n\nexport default function SplitLoginCard({\n  title = \"Welcome Back!\",\n  description = \"Sign in to continue to your dashboard and enjoy seamless experience.\",\n  imageSrc = \"https://pub-940ccf6255b54fa799a9b01050e6c227.r2.dev/ruixen-dark.png\",\n  inputs = [\n    {\n      id: \"email\",\n      type: \"email\",\n      placeholder: \"you@example.com\",\n      label: \"Email\",\n    },\n    {\n      id: \"password\",\n      type: \"password\",\n      placeholder: \"********\",\n      label: \"Password\",\n    },\n  ],\n  onChange,\n  onSubmit,\n  buttonLabel = \"Login\",\n  className,\n}: SplitLoginCardProps) {\n  const [values, setValues] = React.useState<Record<string, string>>(\n    Object.fromEntries(inputs.map((i) => [i.id, \"\"])),\n  );\n\n  const handleChange = (id: string, value: string) => {\n    const newValues = { ...values, [id]: value };\n    setValues(newValues);\n    if (onChange) onChange(newValues);\n  };\n\n  const handleSubmit = () => {\n    if (onSubmit) onSubmit(values);\n  };\n\n  return (\n    <div\n      className={cn(\n        \"flex flex-col md:flex-row w-full max-w-4xl mx-auto shadow-lg rounded-lg overflow-hidden bg-white border dark:bg-gray-800\",\n        className,\n      )}\n    >\n      {/* Left Side */}\n      <div className=\"md:w-1/2 bg-[#8371F5] dark:bg-blue-600 text-white flex flex-col items-center justify-center p-8\">\n        <h2 className=\"text-3xl font-bold mb-4\">{title}</h2>\n        <p className=\"mb-6 text-center\">{description}</p>\n        <img src={imageSrc} alt=\"Illustration\" className=\"w-16\" />\n      </div>\n\n      {/* Right Side: Form */}\n      <div className=\"md:w-1/2 p-8 flex flex-col justify-center\">\n        <h3 className=\"text-2xl font-semibold mb-6\">{buttonLabel}</h3>\n\n        <div className=\"flex flex-col gap-4\">\n          {inputs.map((input) => (\n            <div key={input.id}>\n              {input.label && <Label htmlFor={input.id}>{input.label}</Label>}\n              <Input\n                id={input.id}\n                type={input.type}\n                placeholder={input.placeholder}\n                className=\"mt-1\"\n                value={values[input.id]}\n                onChange={(e) => handleChange(input.id, e.target.value)}\n              />\n            </div>\n          ))}\n        </div>\n\n        <Button className=\"mt-6 w-full\" onClick={handleSubmit}>\n          {buttonLabel}\n        </Button>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/split-login-card.tsx"
    }
  ]
}