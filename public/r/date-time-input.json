{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "date-time-input",
  "type": "registry:ui",
  "title": "Date Time Input",
  "description": "A combined date and time picker with calendar popover and time input field.",
  "dependencies": [
    "date-fns",
    "lucide-react"
  ],
  "registryDependencies": [
    "calendar",
    "popover",
    "button",
    "input",
    "label"
  ],
  "files": [
    {
      "path": "registry/ruixenui/date-time-input.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { format } from \"date-fns\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Calendar as CalendarIcon, Clock } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\nexport type DateTimeInputProps = {\n  value?: Date;\n  time?: string;\n  onChange?: (date: Date | undefined, time: string) => void;\n  datePlaceholder?: string;\n  timePlaceholder?: string;\n  dateFormat?: string;\n  className?: string;\n  inputClassName?: string;\n};\n\nexport function DateTimeInput({\n  value,\n  time: initialTime = \"12:00\",\n  onChange,\n  datePlaceholder = \"Pick a date\",\n  timePlaceholder = \"Pick a time\",\n  dateFormat = \"PPP\",\n  className,\n  inputClassName,\n}: DateTimeInputProps) {\n  const [date, setDate] = React.useState<Date | undefined>(value);\n  const [time, setTime] = React.useState(initialTime);\n\n  const handleDateChange = (newDate: Date | undefined) => {\n    setDate(newDate);\n    onChange?.(newDate, time);\n  };\n\n  const handleTimeChange = (newTime: string) => {\n    setTime(newTime);\n    onChange?.(date, newTime);\n  };\n\n  return (\n    <div className={cn(\"flex flex-col gap-4\", className)}>\n      {/* Date Picker */}\n      <div className=\"flex flex-col gap-1.5\">\n        <Label className=\"text-xs font-medium\">Date</Label>\n        <Popover>\n          <PopoverTrigger asChild>\n            <Button\n              variant=\"outline\"\n              className={cn(\n                \"w-[250px] justify-start text-left font-normal\",\n                !date && \"text-muted-foreground\",\n                inputClassName,\n              )}\n            >\n              <CalendarIcon className=\"mr-2 h-4 w-4\" />\n              {date ? format(date, dateFormat) : <span>{datePlaceholder}</span>}\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent className=\"p-0\">\n            <Calendar\n              mode=\"single\"\n              selected={date}\n              onSelect={handleDateChange}\n              initialFocus\n            />\n          </PopoverContent>\n        </Popover>\n      </div>\n\n      {/* Time Picker */}\n      <div className=\"flex flex-col gap-1.5\">\n        <Label htmlFor=\"time\" className=\"text-xs font-medium\">\n          Time\n        </Label>\n        <div className=\"relative w-[250px]\">\n          <Input\n            id=\"time\"\n            type=\"time\"\n            value={time}\n            onChange={(e) => handleTimeChange(e.target.value)}\n            step=\"60\"\n            placeholder={timePlaceholder}\n            className={cn(\"pl-8\", inputClassName)}\n          />\n          <Clock className=\"absolute left-2 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\n        </div>\n      </div>\n\n      {/* Preview */}\n      <div className=\"rounded-md border p-2 text-sm text-muted-foreground\">\n        Selected:{\" \"}\n        {date ? `${format(date, dateFormat)} at ${time}` : \"No date selected\"}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/date-time-input.tsx"
    }
  ]
}