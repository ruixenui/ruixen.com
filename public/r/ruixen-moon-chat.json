{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ruixen-moon-chat",
  "type": "registry:ui",
  "title": "Ruixen Moon Chat",
  "description": "Modern chat interface with message bubbles, typing indicators, and smooth animations.",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/ruixen-moon-chat.tsx",
      "content": "\"use client\";\n\nimport { useState, useRef, useEffect, useCallback } from \"react\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  ImageIcon,\n  FileUp,\n  MonitorIcon,\n  CircleUserRound,\n  ArrowUpIcon,\n  Paperclip,\n  PlusIcon,\n  Code2,\n  Palette,\n  Layers,\n  Rocket,\n} from \"lucide-react\";\n\ninterface AutoResizeProps {\n  minHeight: number;\n  maxHeight?: number;\n}\n\nfunction useAutoResizeTextarea({ minHeight, maxHeight }: AutoResizeProps) {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  const adjustHeight = useCallback(\n    (reset?: boolean) => {\n      const textarea = textareaRef.current;\n      if (!textarea) return;\n\n      if (reset) {\n        textarea.style.height = `${minHeight}px`;\n        return;\n      }\n\n      textarea.style.height = `${minHeight}px`; // reset first\n      const newHeight = Math.max(\n        minHeight,\n        Math.min(textarea.scrollHeight, maxHeight ?? Infinity),\n      );\n      textarea.style.height = `${newHeight}px`;\n    },\n    [minHeight, maxHeight],\n  );\n\n  useEffect(() => {\n    if (textareaRef.current)\n      textareaRef.current.style.height = `${minHeight}px`;\n  }, [minHeight]);\n\n  return { textareaRef, adjustHeight };\n}\n\nexport default function RuixenMoonChat() {\n  const [message, setMessage] = useState(\"\");\n  const { textareaRef, adjustHeight } = useAutoResizeTextarea({\n    minHeight: 48,\n    maxHeight: 150,\n  });\n\n  return (\n    <div\n      className=\"relative w-full min-h-[600px] bg-cover bg-center flex flex-col items-center py-12\"\n      style={{\n        backgroundImage:\n          \"url('https://pub-940ccf6255b54fa799a9b01050e6c227.r2.dev/ruixen_moon_2.png')\",\n      }}\n    >\n      {/* Centered AI Title */}\n      <div className=\"flex-1 w-full flex flex-col items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-4xl font-semibold text-white drop-shadow-sm\">\n            Ruixen AI\n          </h1>\n          <p className=\"mt-2 text-neutral-200\">\n            Build something amazing â€” just start typing below.\n          </p>\n        </div>\n      </div>\n\n      {/* Input Box Section */}\n      <div className=\"w-full max-w-3xl mb-12\">\n        <div className=\"relative bg-black/60 backdrop-blur-md rounded-xl border border-neutral-700\">\n          <Textarea\n            ref={textareaRef}\n            value={message}\n            onChange={(e) => {\n              setMessage(e.target.value);\n              adjustHeight();\n            }}\n            placeholder=\"Type your request...\"\n            className={cn(\n              \"w-full px-4 py-3 resize-none border-none\",\n              \"bg-transparent text-white text-sm\",\n              \"focus-visible:ring-0 focus-visible:ring-offset-0\",\n              \"placeholder:text-neutral-400 min-h-[48px]\",\n            )}\n            style={{ overflow: \"hidden\" }}\n          />\n\n          {/* Footer Buttons */}\n          <div className=\"flex items-center justify-between p-3\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              className=\"text-white hover:bg-neutral-700\"\n            >\n              <Paperclip className=\"w-4 h-4\" />\n            </Button>\n\n            <div className=\"flex items-center gap-2\">\n              <Button\n                disabled\n                className={cn(\n                  \"flex items-center gap-1 px-3 py-2 rounded-lg transition-colors\",\n                  \"bg-neutral-700 text-neutral-400 cursor-not-allowed\",\n                )}\n              >\n                <ArrowUpIcon className=\"w-4 h-4\" />\n                <span className=\"sr-only\">Send</span>\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/* Quick Actions */}\n        <div className=\"flex items-center justify-center flex-wrap gap-3 mt-6\">\n          <QuickAction\n            icon={<Code2 className=\"w-4 h-4\" />}\n            label=\"Generate Code\"\n          />\n          <QuickAction\n            icon={<Rocket className=\"w-4 h-4\" />}\n            label=\"Launch App\"\n          />\n          <QuickAction\n            icon={<Layers className=\"w-4 h-4\" />}\n            label=\"UI Components\"\n          />\n          <QuickAction\n            icon={<Palette className=\"w-4 h-4\" />}\n            label=\"Theme Ideas\"\n          />\n          <QuickAction\n            icon={<CircleUserRound className=\"w-4 h-4\" />}\n            label=\"User Dashboard\"\n          />\n          <QuickAction\n            icon={<MonitorIcon className=\"w-4 h-4\" />}\n            label=\"Landing Page\"\n          />\n          <QuickAction\n            icon={<FileUp className=\"w-4 h-4\" />}\n            label=\"Upload Docs\"\n          />\n          <QuickAction\n            icon={<ImageIcon className=\"w-4 h-4\" />}\n            label=\"Image Assets\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\ninterface QuickActionProps {\n  icon: React.ReactNode;\n  label: string;\n}\n\nfunction QuickAction({ icon, label }: QuickActionProps) {\n  return (\n    <Button\n      variant=\"outline\"\n      className=\"flex items-center gap-2 rounded-full border-neutral-700 bg-black/50 text-neutral-300 hover:text-white hover:bg-neutral-700\"\n    >\n      {icon}\n      <span className=\"text-xs\">{label}</span>\n    </Button>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/ruixen-moon-chat.tsx"
    }
  ]
}