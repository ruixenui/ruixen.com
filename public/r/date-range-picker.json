{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "date-range-picker",
  "type": "registry:ui",
  "title": "Date Range Picker",
  "description": "A date range picker with dual calendar view.",
  "dependencies": [
    "date-fns",
    "lucide-react",
    "react-day-picker"
  ],
  "registryDependencies": [
    "button",
    "calendar",
    "popover"
  ],
  "files": [
    {
      "path": "registry/ruixenui/date-range-picker.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { format } from \"date-fns\";\nimport { Calendar as CalendarIcon } from \"lucide-react\";\nimport { DateRange } from \"react-day-picker\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\n\ninterface DateRangePickerProps {\n  defaultFrom?: Date;\n  defaultTo?: Date;\n  onChange?: (range: DateRange | undefined) => void;\n  disabled?: boolean;\n  minDate?: Date;\n  maxDate?: Date;\n  placeholder?: string;\n  className?: string;\n}\n\nexport default function DateRangePicker({\n  defaultFrom,\n  defaultTo,\n  onChange,\n  disabled = false,\n  minDate,\n  maxDate,\n  placeholder = \"Pick a date range\",\n  className,\n}: DateRangePickerProps) {\n  const [date, setDate] = React.useState<DateRange | undefined>({\n    from: defaultFrom,\n    to: defaultTo,\n  });\n\n  React.useEffect(() => {\n    onChange?.(date);\n  }, [date, onChange]);\n\n  return (\n    <div className={cn(\"grid gap-2\", className)}>\n      <Popover>\n        <PopoverTrigger asChild>\n          <Button\n            id=\"date\"\n            variant=\"outline\"\n            className={cn(\n              \"w-[300px] justify-start text-left font-normal\",\n              !date && \"text-muted-foreground\",\n            )}\n            disabled={disabled}\n          >\n            <CalendarIcon className=\"mr-2 h-4 w-4\" />\n            {date?.from ? (\n              date.to ? (\n                <>\n                  {format(date.from, \"LLL dd, y\")} -{\" \"}\n                  {format(date.to, \"LLL dd, y\")}\n                </>\n              ) : (\n                format(date.from, \"LLL dd, y\")\n              )\n            ) : (\n              <span>{placeholder}</span>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-auto p-0\" align=\"start\">\n          <Calendar\n            initialFocus\n            mode=\"range\"\n            defaultMonth={date?.from}\n            selected={date}\n            onSelect={setDate}\n            numberOfMonths={2}\n            disabled={\n              disabled\n                ? true\n                : (date) => {\n                    if (minDate && date < minDate) return true;\n                    if (maxDate && date > maxDate) return true;\n                    return false;\n                  }\n            }\n          />\n        </PopoverContent>\n      </Popover>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/date-range-picker.tsx"
    }
  ]
}