{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "cloud-watch-form",
  "type": "registry:ui",
  "title": "Cloud Watch Form",
  "description": "Interactive form with animated cloud character that reacts to user input.",
  "files": [
    {
      "path": "registry/ruixenui/cloud-watch-form.tsx",
      "content": "\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\n\nexport default function CloudWatchForm() {\n  const [isTyping, setIsTyping] = useState(false);\n  const [cursor, setCursor] = useState({ x: 0, y: 0 });\n  const [eyePos, setEyePos] = useState({ x: 0, y: 0 });\n  const [blink, setBlink] = useState(false);\n\n  useEffect(() => {\n    const handleMouse = (e: MouseEvent) =>\n      setCursor({ x: e.clientX, y: e.clientY });\n    window.addEventListener(\"mousemove\", handleMouse);\n    return () => window.removeEventListener(\"mousemove\", handleMouse);\n  }, []);\n\n  useEffect(() => {\n    const offsetX = (cursor.x / window.innerWidth - 0.5) * 40; // bigger range\n    const offsetY = (cursor.y / window.innerHeight - 0.5) * 20;\n    setEyePos({ x: offsetX, y: offsetY });\n  }, [cursor]);\n\n  // Blinking every 3 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setBlink(true);\n      setTimeout(() => setBlink(false), 200);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen p-4\">\n      <div className=\"bg-white/30 backdrop-blur-md rounded-xl shadow-xl p-8 flex flex-col items-center gap-6 w-md border\">\n        {/* Cartoon Face */}\n        <div className=\"relative w-70 h-40\">\n          <img\n            src=\"https://pub-940ccf6255b54fa799a9b01050e6c227.r2.dev/cloud.jpg\"\n            alt=\"cartoon\"\n            className=\"w-full h-full\"\n          />\n\n          {[\"left\", \"right\"].map((side, idx) => (\n            <div\n              key={side}\n              className=\"absolute flex justify-center items-end overflow-hidden\"\n              style={{\n                top: 60,\n                left: idx === 0 ? 80 : 150,\n                width: 28,\n                height: isTyping\n                  ? 4 // fully closed when typing password\n                  : blink\n                    ? 6 // temporary blink\n                    : 40, // open eye\n                borderRadius: isTyping || blink ? \"2px\" : \"50% / 60%\",\n                backgroundColor: isTyping ? \"black\" : \"white\", // black line when typing\n                transition: \"all 0.15s ease\",\n              }}\n            >\n              {!isTyping && (\n                <div\n                  className=\"bg-black\"\n                  style={{\n                    width: 16,\n                    height: 16,\n                    borderRadius: \"50%\",\n                    marginBottom: 4, // pupil at bottom\n                    transform: `translate(${eyePos.x}px, 0px)`,\n                    transition: \"all 0.1s ease\",\n                  }}\n                />\n              )}\n            </div>\n          ))}\n        </div>\n\n        {/* Form */}\n        <div className=\"w-full flex flex-col gap-4\">\n          <div className=\"flex flex-col\">\n            <Label>Name</Label>\n            <Input placeholder=\"Your Name\" />\n          </div>\n          <div className=\"flex flex-col\">\n            <Label>Email</Label>\n            <Input type=\"email\" placeholder=\"Your Email\" />\n          </div>\n          <div className=\"flex flex-col\">\n            <Label>Username</Label>\n            <Input placeholder=\"Username\" />\n          </div>\n          <div className=\"flex flex-col\">\n            <Label>Password</Label>\n            <Input\n              type=\"password\"\n              placeholder=\"Password\"\n              onFocus={() => setIsTyping(true)}\n              onBlur={() => setIsTyping(false)}\n            />\n          </div>\n          <Button className=\"mt-2 w-full\">Submit</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/cloud-watch-form.tsx"
    }
  ]
}