{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dock",
  "type": "registry:ui",
  "title": "Dock",
  "description": "Classic dock component with floating animation and glow effects.",
  "dependencies": [
    "framer-motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/dock.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { motion } from \"framer-motion\";\n\ninterface DockProps {\n  className?: string;\n  items: {\n    icon: React.ReactNode;\n    label: string;\n    onClick?: () => void;\n  }[];\n}\n\nexport default function Dock({ items, className }: DockProps) {\n  const [active, setActive] = React.useState<string | null>(null);\n  const [hovered, setHovered] = React.useState<number | null>(null);\n\n  return (\n    <div\n      className={cn(\"flex items-center justify-center w-full py-12\", className)}\n    >\n      <motion.div\n        animate={{ y: [0, -2, 0] }}\n        transition={{ duration: 8, repeat: Infinity, ease: \"easeInOut\" }}\n        className={cn(\n          \"flex items-end gap-4 px-4 py-3 rounded-3xl\",\n          \"border bg-background/70 backdrop-blur-2xl shadow-lg\",\n        )}\n        style={{\n          transform: \"perspective(600px) rotateX(10deg)\", // arc layout illusion\n        }}\n      >\n        <TooltipProvider delayDuration={100}>\n          {items.map((item, i) => {\n            const isActive = active === item.label;\n            const isHovered = hovered === i;\n\n            return (\n              <Tooltip key={item.label}>\n                <TooltipTrigger asChild>\n                  <motion.div\n                    onMouseEnter={() => setHovered(i)}\n                    onMouseLeave={() => setHovered(null)}\n                    animate={{\n                      scale: isHovered ? 1.2 : 1,\n                      rotate: isHovered ? -5 : 0,\n                    }}\n                    transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\n                    className=\"relative flex flex-col items-center\"\n                  >\n                    <Button\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      className={cn(\n                        \"rounded-2xl relative\",\n                        \"transition-colors\",\n                        isHovered && \"shadow-lg shadow-primary/20\",\n                      )}\n                      onClick={() => {\n                        setActive(item.label);\n                        item.onClick?.();\n                      }}\n                    >\n                      {item.icon}\n                      {/* Glowing ring effect */}\n                      {isHovered && (\n                        <motion.span\n                          layoutId=\"glow\"\n                          className=\"absolute inset-0 rounded-2xl border border-primary/40\"\n                          initial={{ opacity: 0 }}\n                          animate={{ opacity: 1 }}\n                          exit={{ opacity: 0 }}\n                        />\n                      )}\n                    </Button>\n\n                    {/* Active indicator */}\n                    {isActive && (\n                      <motion.div\n                        layoutId=\"dot\"\n                        className=\"w-1.5 h-1.5 rounded-full bg-primary mt-1\"\n                      />\n                    )}\n                  </motion.div>\n                </TooltipTrigger>\n                <TooltipContent side=\"top\" className=\"text-xs\">\n                  {item.label}\n                </TooltipContent>\n              </Tooltip>\n            );\n          })}\n        </TooltipProvider>\n      </motion.div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/dock.tsx"
    }
  ]
}