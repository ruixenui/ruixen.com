{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "feature-slide-showcase",
  "type": "registry:ui",
  "title": "Feature Slide Showcase",
  "description": "A tabbed feature showcase component with image previews and detailed descriptions for highlighting product features.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "registry/ruixenui/feature-slide-showcase.tsx",
      "content": "// components/feature-showcase.tsx\r\n\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport Link from \"next/link\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Card } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n  AccordionContent,\r\n} from \"@/components/ui/accordion\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport type TabMedia = {\r\n  value: string; // unique value for Tabs\r\n  label: string; // button label\r\n  src: string;   // image url\r\n  alt?: string;\r\n};\r\n\r\nexport type ShowcaseStep = {\r\n  id: string;\r\n  title: string;\r\n  text: string;\r\n};\r\n\r\nexport type FeatureShowcaseProps = {\r\n  eyebrow?: string;\r\n  title: string;\r\n  description?: string;\r\n  /** small chips under the description */\r\n  stats?: string[];\r\n  /** accordion steps on the left */\r\n  steps?: ShowcaseStep[];\r\n  /** right-side tabs (image per tab) */\r\n  tabs: TabMedia[];\r\n  /** which tab is active initially */\r\n  defaultTab?: string;\r\n  /** fixed panel height in px (also applied as min-height) */\r\n  panelMinHeight?: number;\r\n  className?: string;\r\n};\r\n\r\nexport function FeatureShowcase({\r\n  eyebrow = \"Discover\",\r\n  title,\r\n  description,\r\n  stats = [\"1 reference\", \"30s setup\", \"Shareâ€‘ready\"],\r\n  steps = [\r\n    {\r\n      id: \"step-1\",\r\n      title: \"Drop a reference\",\r\n      text:\r\n        \"Upload a single image. We read it like a brief and extract palette, texture and cues.\",\r\n    },\r\n    {\r\n      id: \"step-2\",\r\n      title: \"Pick the vibe\",\r\n      text:\r\n        \"Switch between mockup, screen, or abstract views and tune the mood instantly.\",\r\n    },\r\n    {\r\n      id: \"step-3\",\r\n      title: \"Export & share\",\r\n      text:\r\n        \"Get a moodboard ready for your team with consistent visuals and notes.\",\r\n    },\r\n  ],\r\n  tabs,\r\n  defaultTab,\r\n  panelMinHeight = 720,\r\n  className,\r\n}: FeatureShowcaseProps) {\r\n  const initial = defaultTab ?? (tabs[0]?.value ?? \"tab-0\");\r\n\r\n  return (\r\n    <section className={cn(\"w-full bg-background text-foreground\", className)}>\r\n      <div className=\"container mx-auto grid max-w-7xl grid-cols-1 gap-10 px-6 py-16 md:grid-cols-12 md:py-20 lg:gap-14\">\r\n        {/* Left column */}\r\n        <div className=\"md:col-span-6\">\r\n          <Badge variant=\"outline\" className=\"mb-6\">\r\n            {eyebrow}\r\n          </Badge>\r\n\r\n          <h2 className=\"text-balance text-4xl font-bold leading-[0.95] sm:text-5xl md:text-6xl\">\r\n            {title}\r\n          </h2>\r\n\r\n          {description ? (\r\n            <p className=\"mt-6 max-w-xl text-muted-foreground\">{description}</p>\r\n          ) : null}\r\n\r\n          {/* Stats chips */}\r\n          {stats.length > 0 && (\r\n            <div className=\"mt-6 flex flex-wrap gap-2\">\r\n              {stats.map((s, i) => (\r\n                <Badge\r\n                  key={i}\r\n                  variant=\"secondary\"\r\n                  className=\"bg-muted text-foreground\"\r\n                >\r\n                  {s}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* Steps (Accordion) */}\r\n          <div className=\"mt-10 max-w-xl\">\r\n            <Accordion type=\"single\" collapsible className=\"w-full\">\r\n              {steps.map((step) => (\r\n                <AccordionItem key={step.id} value={step.id}>\r\n                  <AccordionTrigger className=\"text-left text-base font-medium\">\r\n                    {step.title}\r\n                  </AccordionTrigger>\r\n                  <AccordionContent className=\"text-sm text-muted-foreground\">\r\n                    {step.text}\r\n                  </AccordionContent>\r\n                </AccordionItem>\r\n              ))}\r\n            </Accordion>\r\n\r\n            {/* CTAs */}\r\n            <div className=\"mt-8 flex flex-wrap gap-3\">\r\n              <Button asChild size=\"lg\">\r\n                <Link href=\"#start\">Get started</Link>\r\n              </Button>\r\n              <Button\r\n                asChild\r\n                size=\"lg\"\r\n                variant=\"secondary\"\r\n                className=\"border border-border bg-transparent\"\r\n              >\r\n                <Link href=\"#examples\">Browse examples</Link>\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right column (unchanged) */}\r\n        <div className=\"md:col-span-6\">\r\n          <Card\r\n            className=\"relative overflow-hidden rounded-2xl border border-border bg-card/40 p-0 shadow-sm\"\r\n            style={{ height: panelMinHeight, minHeight: panelMinHeight }}\r\n          >\r\n            <Tabs defaultValue={initial} className=\"relative h-full w-full\">\r\n              {/* Absolute-fill media container */}\r\n              <div className=\"relative h-full w-full\">\r\n                {tabs.map((t, idx) => (\r\n                  <TabsContent\r\n                    key={t.value}\r\n                    value={t.value}\r\n                    className={cn(\r\n                      \"absolute inset-0 m-0 h-full w-full\",\r\n                      \"data-[state=inactive]:hidden\"\r\n                    )}\r\n                  >\r\n                    <img\r\n                      src={t.src}\r\n                      alt={t.alt ?? t.label}\r\n                      className=\"h-full w-full object-cover\"\r\n                      loading={idx === 0 ? \"eager\" : \"lazy\"}\r\n                    />\r\n                  </TabsContent>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Tab controls (pill) */}\r\n              <div className=\"pointer-events-auto absolute inset-x-0 bottom-4 z-10 flex w-full justify-center\">\r\n                <TabsList className=\"flex gap-2 rounded-xl border border-border bg-background/80 p-1 backdrop-blur supports-[backdrop-filter]:bg-background/70\">\r\n                  {tabs.map((t) => (\r\n                    <TabsTrigger\r\n                      key={t.value}\r\n                      value={t.value}\r\n                      className=\"rounded-lg px-4 py-2 data-[state=active]:bg-foreground data-[state=active]:text-background\"\r\n                    >\r\n                      {t.label}\r\n                    </TabsTrigger>\r\n                  ))}\r\n                </TabsList>\r\n              </div>\r\n            </Tabs>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/feature-slide-showcase.tsx"
    }
  ]
}