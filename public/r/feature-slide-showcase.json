{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "feature-slide-showcase",
  "type": "registry:ui",
  "title": "Feature Slide Showcase",
  "description": "A tabbed feature showcase component with image previews and detailed descriptions for highlighting product features.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "registry/ruixenui/feature-slide-showcase.tsx",
      "content": "// components/feature-showcase.tsx\n\"use client\";\n\nimport * as React from \"react\";\nimport Link from \"next/link\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionTrigger,\n  AccordionContent,\n} from \"@/components/ui/accordion\";\nimport { cn } from \"@/lib/utils\";\n\nexport type TabMedia = {\n  value: string; // unique value for Tabs\n  label: string; // button label\n  src: string; // image url\n  alt?: string;\n};\n\nexport type ShowcaseStep = {\n  id: string;\n  title: string;\n  text: string;\n};\n\nexport type FeatureShowcaseProps = {\n  eyebrow?: string;\n  title: string;\n  description?: string;\n  /** small chips under the description */\n  stats?: string[];\n  /** accordion steps on the left */\n  steps?: ShowcaseStep[];\n  /** right-side tabs (image per tab) */\n  tabs: TabMedia[];\n  /** which tab is active initially */\n  defaultTab?: string;\n  /** fixed panel height in px (also applied as min-height) */\n  panelMinHeight?: number;\n  className?: string;\n};\n\nexport function FeatureShowcase({\n  eyebrow = \"Discover\",\n  title,\n  description,\n  stats = [\"1 reference\", \"30s setup\", \"Shareâ€‘ready\"],\n  steps = [\n    {\n      id: \"step-1\",\n      title: \"Drop a reference\",\n      text: \"Upload a single image. We read it like a brief and extract palette, texture and cues.\",\n    },\n    {\n      id: \"step-2\",\n      title: \"Pick the vibe\",\n      text: \"Switch between mockup, screen, or abstract views and tune the mood instantly.\",\n    },\n    {\n      id: \"step-3\",\n      title: \"Export & share\",\n      text: \"Get a moodboard ready for your team with consistent visuals and notes.\",\n    },\n  ],\n  tabs,\n  defaultTab,\n  panelMinHeight = 720,\n  className,\n}: FeatureShowcaseProps) {\n  const initial = defaultTab ?? tabs[0]?.value ?? \"tab-0\";\n\n  return (\n    <section className={cn(\"w-full bg-background text-foreground\", className)}>\n      <div className=\"container mx-auto grid max-w-7xl grid-cols-1 gap-10 px-6 py-16 md:grid-cols-12 md:py-20 lg:gap-14\">\n        {/* Left column */}\n        <div className=\"md:col-span-6\">\n          <Badge variant=\"outline\" className=\"mb-6\">\n            {eyebrow}\n          </Badge>\n\n          <h2 className=\"text-balance text-4xl font-bold leading-[0.95] sm:text-5xl md:text-6xl\">\n            {title}\n          </h2>\n\n          {description ? (\n            <p className=\"mt-6 max-w-xl text-muted-foreground\">{description}</p>\n          ) : null}\n\n          {/* Stats chips */}\n          {stats.length > 0 && (\n            <div className=\"mt-6 flex flex-wrap gap-2\">\n              {stats.map((s, i) => (\n                <Badge\n                  key={i}\n                  variant=\"secondary\"\n                  className=\"bg-muted text-foreground\"\n                >\n                  {s}\n                </Badge>\n              ))}\n            </div>\n          )}\n\n          {/* Steps (Accordion) */}\n          <div className=\"mt-10 max-w-xl\">\n            <Accordion type=\"single\" collapsible className=\"w-full\">\n              {steps.map((step) => (\n                <AccordionItem key={step.id} value={step.id}>\n                  <AccordionTrigger className=\"text-left text-base font-medium\">\n                    {step.title}\n                  </AccordionTrigger>\n                  <AccordionContent className=\"text-sm text-muted-foreground\">\n                    {step.text}\n                  </AccordionContent>\n                </AccordionItem>\n              ))}\n            </Accordion>\n\n            {/* CTAs */}\n            <div className=\"mt-8 flex flex-wrap gap-3\">\n              <Button asChild size=\"lg\">\n                <Link href=\"#start\">Get started</Link>\n              </Button>\n              <Button\n                asChild\n                size=\"lg\"\n                variant=\"secondary\"\n                className=\"border border-border bg-transparent\"\n              >\n                <Link href=\"#examples\">Browse examples</Link>\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/* Right column (unchanged) */}\n        <div className=\"md:col-span-6\">\n          <Card\n            className=\"relative overflow-hidden rounded-2xl border border-border bg-card/40 p-0 shadow-sm\"\n            style={{ height: panelMinHeight, minHeight: panelMinHeight }}\n          >\n            <Tabs defaultValue={initial} className=\"relative h-full w-full\">\n              {/* Absolute-fill media container */}\n              <div className=\"relative h-full w-full\">\n                {tabs.map((t, idx) => (\n                  <TabsContent\n                    key={t.value}\n                    value={t.value}\n                    className={cn(\n                      \"absolute inset-0 m-0 h-full w-full\",\n                      \"data-[state=inactive]:hidden\",\n                    )}\n                  >\n                    <img\n                      src={t.src}\n                      alt={t.alt ?? t.label}\n                      className=\"h-full w-full object-cover\"\n                      loading={idx === 0 ? \"eager\" : \"lazy\"}\n                    />\n                  </TabsContent>\n                ))}\n              </div>\n\n              {/* Tab controls (pill) */}\n              <div className=\"pointer-events-auto absolute inset-x-0 bottom-4 z-10 flex w-full justify-center\">\n                <TabsList className=\"flex gap-2 rounded-xl border border-border bg-background/80 p-1 backdrop-blur supports-[backdrop-filter]:bg-background/70\">\n                  {tabs.map((t) => (\n                    <TabsTrigger\n                      key={t.value}\n                      value={t.value}\n                      className=\"rounded-lg px-4 py-2 data-[state=active]:bg-foreground data-[state=active]:text-background\"\n                    >\n                      {t.label}\n                    </TabsTrigger>\n                  ))}\n                </TabsList>\n              </div>\n            </Tabs>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/feature-slide-showcase.tsx"
    }
  ]
}