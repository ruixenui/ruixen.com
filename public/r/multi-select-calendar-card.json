{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "multi-select-calendar-card",
  "type": "registry:ui",
  "title": "Multi Select Calendar Card",
  "description": "A calendar card that allows selecting multiple dates with badge display and removal.",
  "dependencies": [
    "date-fns"
  ],
  "registryDependencies": [
    "calendar",
    "button",
    "badge",
    "card"
  ],
  "files": [
    {
      "path": "registry/ruixenui/multi-select-calendar-card.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { format } from \"date-fns\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { cn } from \"@/lib/utils\";\n\nexport type MultiSelectCalendarCardProps = {\n  selectedDates?: Date[];\n  onChange?: (dates: Date[]) => void;\n  maxSelectable?: number;\n  label?: string;\n  dateFormat?: string;\n  className?: string;\n  calendarClassName?: string;\n};\n\nexport function MultiSelectCalendarCard({\n  selectedDates = [],\n  onChange,\n  maxSelectable,\n  label = \"Select Multiple Dates\",\n  dateFormat = \"PP\",\n  className,\n  calendarClassName,\n}: MultiSelectCalendarCardProps) {\n  const [dates, setDates] = React.useState<Date[]>(selectedDates);\n\n  const handleSelect = (selected: Date[] | undefined) => {\n    let newDates = selected ?? [];\n    if (maxSelectable) {\n      newDates = newDates.slice(0, maxSelectable);\n    }\n    setDates(newDates);\n    onChange?.(newDates);\n  };\n\n  const handleRemove = (date: Date) => {\n    const newDates = dates.filter(\n      (d) => format(d, \"yyyy-MM-dd\") !== format(date, \"yyyy-MM-dd\"),\n    );\n    setDates(newDates);\n    onChange?.(newDates);\n  };\n\n  return (\n    <Card\n      className={cn(\n        \"w-[380px] shadow-none border-none bg-background\",\n        className,\n      )}\n    >\n      <CardHeader>\n        <CardTitle className=\"text-base\">{label}</CardTitle>\n      </CardHeader>\n      <CardContent className=\"flex flex-col gap-4\">\n        {/* Calendar */}\n        <Calendar\n          mode=\"multiple\"\n          selected={dates}\n          onSelect={handleSelect}\n          className={cn(\"rounded-md border\", calendarClassName)}\n        />\n\n        {/* Selected dates list */}\n        <div className=\"flex flex-wrap gap-2\">\n          {dates.length === 0 && (\n            <p className=\"text-xs text-muted-foreground\">No dates selected</p>\n          )}\n          {dates.map((d) => (\n            <Badge\n              key={d.toISOString()}\n              variant=\"secondary\"\n              className=\"flex items-center gap-2\"\n            >\n              {format(d, dateFormat)}\n              <Button\n                size=\"icon\"\n                variant=\"ghost\"\n                className=\"h-4 w-4 p-0 text-muted-foreground hover:text-destructive\"\n                onClick={() => handleRemove(d)}\n              >\n                âœ•\n              </Button>\n            </Badge>\n          ))}\n        </div>\n      </CardContent>\n      <CardFooter className=\"flex justify-end\">\n        <Button\n          size=\"sm\"\n          onClick={() => console.log(\"Selected Dates:\", dates)}\n          disabled={dates.length === 0}\n        >\n          Confirm\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/multi-select-calendar-card.tsx"
    }
  ]
}