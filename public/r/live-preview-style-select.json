{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "live-preview-style-select",
  "type": "registry:ui",
  "title": "Live Preview Style Select",
  "description": "A select component with live preview functionality that shows a visual representation of the selected style option.",
  "files": [
    {
      "path": "registry/ruixenui/live-preview-style-select.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface StyleOption {\n  value: string;\n  label: string;\n  previewClass?: string;\n  previewStyle?: React.CSSProperties;\n  description?: string;\n}\n\ninterface LivePreviewStyleSelectProps {\n  options: StyleOption[];\n  label?: string;\n  placeholder?: string;\n  onChange?: (value: string) => void;\n  defaultValue?: string;\n  previewHeight?: string | number;\n  previewBgClass?: string;\n  showDescription?: boolean;\n  selectWidth?: string | number; // new prop\n}\n\nexport const LivePreviewStyleSelect: React.FC<LivePreviewStyleSelectProps> = ({\n  options,\n  label,\n  placeholder = \"Select a style...\",\n  onChange,\n  defaultValue,\n  previewHeight = \"160px\",\n  previewBgClass = \"bg-gray-100 dark:bg-gray-800\",\n  showDescription = true,\n  selectWidth = \"250px\",\n}) => {\n  const [selected, setSelected] = React.useState(defaultValue || \"\");\n  const current = options.find((opt) => opt.value === selected);\n\n  return (\n    <div className=\"flex flex-col gap-4 w-full max-w-md\">\n      <Select\n        defaultValue={defaultValue}\n        onValueChange={(val) => {\n          setSelected(val);\n          onChange?.(val);\n        }}\n      >\n        <SelectTrigger\n          className={cn(\"flex items-center justify-between truncate\", \"w-full\")}\n          style={{ width: selectWidth }}\n        >\n          <SelectValue placeholder={placeholder} className=\"truncate\" />\n        </SelectTrigger>\n        <SelectContent style={{ width: selectWidth }}>\n          <SelectGroup>\n            {label && <SelectLabel>{label}</SelectLabel>}\n            {options.map((opt) => (\n              <SelectItem\n                key={opt.value}\n                value={opt.value}\n                className=\"w-full\" // full width for wrapping div\n              >\n                {/* Wrap inside flex-col container */}\n                <div className=\"flex flex-col w-full\">\n                  <span className=\"truncate\">{opt.label}</span>\n                  {showDescription && opt.description && (\n                    <span className=\"text-xs text-muted-foreground truncate\">\n                      {opt.description}\n                    </span>\n                  )}\n                </div>\n              </SelectItem>\n            ))}\n          </SelectGroup>\n        </SelectContent>\n      </Select>\n\n      {/* Preview */}\n      <div\n        className={cn(\n          \"rounded-lg border shadow-inner flex items-center justify-center text-sm font-medium\",\n          previewBgClass,\n          current?.previewClass,\n        )}\n        style={{ height: previewHeight, ...current?.previewStyle }}\n      >\n        {current ? current.label : \"Preview will appear here\"}\n      </div>\n    </div>\n  );\n};\n",
      "type": "registry:ui",
      "target": "components/ruixen/live-preview-style-select.tsx"
    }
  ]
}