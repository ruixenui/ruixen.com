{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "badge-tabs",
  "type": "registry:ui",
  "title": "Badge Tabs",
  "description": "Tab component with animated badges showing counts or notifications.",
  "dependencies": [
    "framer-motion"
  ],
  "files": [
    {
      "path": "registry/ruixenui/badge-tabs.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from \"@/components/ui/tabs\";\nimport { cn } from \"@/lib/utils\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nexport interface BadgeTabItem {\n  value: string;\n  label: string;\n  badge?: number;\n  content?: React.ReactNode;\n}\n\ninterface BadgeTabsProps {\n  items?: BadgeTabItem[];\n  defaultValue?: string;\n  className?: string;\n}\n\nexport default function BadgeTabs({\n  items = [\n    {\n      value: \"messages\",\n      label: \"Messages\",\n      badge: 5,\n      content: \"You have 5 new messages.\",\n    },\n    {\n      value: \"tasks\",\n      label: \"Tasks\",\n      badge: 12,\n      content: \"12 tasks pending review.\",\n    },\n    {\n      value: \"alerts\",\n      label: \"Alerts\",\n      badge: 3,\n      content: \"3 new system alerts.\",\n    },\n  ],\n  defaultValue,\n  className,\n}: BadgeTabsProps) {\n  const [active, setActive] = React.useState(defaultValue || items[0].value);\n\n  return (\n    <div\n      className={cn(\n        \"flex flex-col items-center justify-center w-full\",\n        className,\n      )}\n    >\n      <Tabs\n        value={active}\n        onValueChange={setActive}\n        className=\"w-full max-w-lg\"\n      >\n        {/* Tabs */}\n        <TabsList className=\"relative flex gap-2 bg-background/30 p-2 rounded-xl border\">\n          {items.map((item) => {\n            const isActive = item.value === active;\n            return (\n              <TabsTrigger key={item.value} value={item.value} asChild>\n                <motion.button\n                  className={cn(\n                    \"relative flex-1 flex justify-between items-center px-4 py-2 rounded-lg text-sm font-medium transition-colors\",\n                    isActive ? \"text-white\" : \"text-foreground/80\",\n                  )}\n                  whileHover={{ scale: 1.05 }}\n                >\n                  {/* Active background pill */}\n                  {isActive && (\n                    <motion.div\n                      layoutId=\"active-pill\"\n                      className=\"absolute inset-0 bg-primary/10 rounded-lg z-0\"\n                      initial={false}\n                      transition={{\n                        type: \"spring\",\n                        stiffness: 300,\n                        damping: 25,\n                      }}\n                    />\n                  )}\n\n                  <span className=\"relative z-10\">{item.label}</span>\n\n                  {/* Badge */}\n                  <AnimatePresence mode=\"popLayout\">\n                    {item.badge && item.badge > 0 && (\n                      <motion.span\n                        key={item.badge}\n                        initial={{ scale: 0 }}\n                        animate={{ scale: 1 }}\n                        exit={{ scale: 0 }}\n                        className=\"ml-2 relative z-10 inline-flex items-center justify-center min-w-[20px] h-5 px-2 rounded-full bg-blue-500 text-white text-xs font-bold\"\n                      >\n                        {item.badge}\n                      </motion.span>\n                    )}\n                  </AnimatePresence>\n                </motion.button>\n              </TabsTrigger>\n            );\n          })}\n        </TabsList>\n\n        {/* Tab Content */}\n        <div className=\"mt-4 w-full max-w-lg\">\n          {items.map((item) => (\n            <TabsContent key={item.value} value={item.value}>\n              <div className=\"p-4 bg-card rounded-lg\">{item.content}</div>\n            </TabsContent>\n          ))}\n        </div>\n      </Tabs>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/badge-tabs.tsx"
    }
  ]
}