{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "avatar-notifications",
  "type": "registry:ui",
  "title": "Avatar Notifications",
  "description": "A notification component that displays user avatars with messages and animated status indicators.",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/avatar-notifications.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Bell, X } from \"lucide-react\"\r\nimport {\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n} from \"@/components/ui/popover\"\r\nimport { Avatar, AvatarImage, AvatarFallback } from \"@/components/ui/avatar\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface NotificationItem {\r\n  id: string\r\n  user: string\r\n  avatarUrl?: string\r\n  message: string\r\n  time: string\r\n}\r\n\r\ninterface NotificationsProps {\r\n  items?: NotificationItem[]\r\n}\r\n\r\nconst defaultNotifications: NotificationItem[] = [\r\n  {\r\n    id: \"1\",\r\n    user: \"Alice\",\r\n    avatarUrl: \"https://i.pravatar.cc/40?img=1\",\r\n    message: \"Sent you a message.\",\r\n    time: \"2m ago\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    user: \"Bob\",\r\n    avatarUrl: \"https://i.pravatar.cc/40?img=2\",\r\n    message: \"Commented on your post.\",\r\n    time: \"10m ago\",\r\n  },\r\n]\r\n\r\nexport default function AvatarNotifications({ items = defaultNotifications }: NotificationsProps) {\r\n  const [notifications, setNotifications] = React.useState(items)\r\n\r\n  const clearAll = () => {\r\n    setNotifications([])\r\n  }\r\n\r\n  const hasNotifications = notifications.length > 0\r\n\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger asChild>\r\n        <button className=\"relative inline-flex items-center justify-center rounded-full p-2 hover:bg-muted focus:outline-none border rounded\">\r\n          <Bell className=\"h-5 w-5\" />\r\n          {/* Blinking / static status dot */}\r\n          <span\r\n            className={cn(\r\n              \"absolute -top-0.5 -right-0.5 h-3 w-3 rounded-full border-2 border-background\",\r\n              hasNotifications ? \"bg-green-500 animate-ping\" : \"bg-gray-400\"\r\n            )}\r\n          />\r\n        </button>\r\n      </PopoverTrigger>\r\n      {/* Align popover to the center of the icon */}\r\n      <PopoverContent className=\"w-80 p-0\" side=\"bottom\" align=\"center\">\r\n        <div className=\"max-h-80 overflow-y-auto\">\r\n          <div className=\"flex justify-between items-center px-4 py-2 border-b\">\r\n            <h2 className=\"text-sm font-medium\">Notifications</h2>\r\n            {hasNotifications && (\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"icon\"\r\n                onClick={clearAll}\r\n                className=\"h-6 w-6 rounded-full\"\r\n              >\r\n                <X className=\"h-4 w-4\" />\r\n              </Button>\r\n            )}\r\n          </div>\r\n          {notifications.length === 0 ? (\r\n            <div className=\"p-4 text-sm text-muted-foreground text-center\">\r\n              No messages\r\n            </div>\r\n          ) : (\r\n            <ul className=\"divide-y divide-border\">\r\n              {notifications.map((item) => (\r\n                <li\r\n                  key={item.id}\r\n                  className=\"flex items-center gap-3 p-4 hover:bg-muted/50 transition\"\r\n                >\r\n                  <Avatar className=\"h-8 w-8\">\r\n                    {item.avatarUrl ? (\r\n                      <AvatarImage src={item.avatarUrl} alt={item.user} />\r\n                    ) : (\r\n                      <AvatarFallback>{item.user[0]}</AvatarFallback>\r\n                    )}\r\n                  </Avatar>\r\n                  <div className=\"flex flex-col text-sm\">\r\n                    <span className=\"font-medium\">{item.user}</span>\r\n                    <span className=\"text-muted-foreground text-xs\">\r\n                      {item.message}\r\n                    </span>\r\n                  </div>\r\n                  <span className=\"ml-auto text-xs text-muted-foreground\">\r\n                    {item.time}\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/avatar-notifications.tsx"
    }
  ]
}