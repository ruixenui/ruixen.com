{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "notification-toggle",
  "type": "registry:ui",
  "title": "Notification Toggle",
  "description": "A versatile notification component that toggles between carousel and list view modes.",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/notification-toggle.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport {\r\n  Bell,\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  List,\r\n  PanelsTopLeft,\r\n  Info,\r\n  AlertCircle,\r\n  Calendar,\r\n} from \"lucide-react\"\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Card } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\n\r\ninterface NotificationItem {\r\n  id: string\r\n  icon: React.ReactNode\r\n  title: string\r\n  description: string\r\n  time: string\r\n}\r\n\r\ninterface NotificationsProps {\r\n  items?: NotificationItem[]\r\n  placement?: \"top\" | \"bottom\" | \"left\" | \"right\"\r\n}\r\n\r\nconst defaultNotifications: NotificationItem[] = [\r\n  {\r\n    id: \"1\",\r\n    icon: <Info className=\"h-4 w-4\" />,\r\n    title: \"Welcome\",\r\n    description: \"Thanks for checking out notifications.\",\r\n    time: \"just now\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    icon: <AlertCircle className=\"h-4 w-4\" />,\r\n    title: \"System Update\",\r\n    description: \"A new feature has been rolled out.\",\r\n    time: \"1h ago\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    icon: <Calendar className=\"h-4 w-4\" />,\r\n    title: \"Reminder\",\r\n    description: \"Complete your profile setup.\",\r\n    time: \"3h ago\",\r\n  },\r\n]\r\n\r\nexport default function NotificationsToggle({\r\n  items = defaultNotifications,\r\n  placement = \"bottom\",\r\n}: NotificationsProps) {\r\n  const [index, setIndex] = React.useState(0)\r\n  const [isCarousel, setIsCarousel] = React.useState(true)\r\n\r\n  const next = () => setIndex((prev) => (prev + 1) % items.length)\r\n  const prev = () =>\r\n    setIndex((prev) => (prev - 1 + items.length) % items.length)\r\n\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger asChild>\r\n        <button className=\"relative inline-flex items-center justify-center rounded-full p-2 hover:bg-muted\">\r\n          <Bell className=\"h-5 w-5\" />\r\n          {items.length > 0 && (\r\n            <Badge\r\n              variant=\"default\"\r\n              className=\"absolute -top-1 -right-1 text-xs px-1.5 py-0\"\r\n            >\r\n              {items.length}\r\n            </Badge>\r\n          )}\r\n        </button>\r\n      </PopoverTrigger>\r\n\r\n      <PopoverContent\r\n        side={placement}\r\n        align=\"center\"\r\n        className=\"w-80 p-0\"\r\n      >\r\n        {/* Header with toggle */}\r\n        <div className=\"flex justify-between items-center border-b px-4 py-2\">\r\n          <h2 className=\"text-sm font-medium\">Notifications</h2>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"icon\"\r\n            onClick={() => setIsCarousel((prev) => !prev)}\r\n          >\r\n            {isCarousel ? (\r\n              <List className=\"h-4 w-4\" />\r\n            ) : (\r\n              <PanelsTopLeft className=\"h-4 w-4\" />\r\n            )}\r\n          </Button>\r\n        </div>\r\n\r\n        {items.length === 0 ? (\r\n          <div className=\"p-4 text-sm text-muted-foreground text-center\">\r\n            No notifications\r\n          </div>\r\n        ) : isCarousel ? (\r\n          // Carousel view\r\n          <div className=\"relative flex items-center w-full py-4\">\r\n            {/* Prev button */}\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"icon\"\r\n              className=\"absolute left-0 z-10\"\r\n              onClick={prev}\r\n            >\r\n              <ChevronLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n\r\n            {/* Notification card */}\r\n            <Card className=\"w-full mx-8 p-4 flex flex-col items-start text-left transition-all duration-300 shadow-none border-0\">\r\n              <div className=\"flex items-center gap-2 mb-2 w-full justify-between\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  {items[index].icon}\r\n                  <span className=\"font-medium text-sm\">{items[index].title}</span>\r\n                </div>\r\n                <span className=\"text-xs text-muted-foreground\">\r\n                  {items[index].time}\r\n                </span>\r\n              </div>\r\n              <p className=\"text-sm text-muted-foreground leading-relaxed\">\r\n                {items[index].description}\r\n              </p>\r\n            </Card>\r\n\r\n            {/* Next button */}\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"icon\"\r\n              className=\"absolute right-0 z-10\"\r\n              onClick={next}\r\n            >\r\n              <ChevronRight className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          // Vertical list view\r\n          <div className=\"max-h-80 overflow-y-auto divide-y divide-border\">\r\n            {items.map((item) => (\r\n              <div\r\n                key={item.id}\r\n                className=\"p-4 hover:bg-muted/50 transition\"\r\n              >\r\n                <div className=\"flex justify-between items-center mb-1\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {item.icon}\r\n                    <span className=\"font-medium text-sm\">{item.title}</span>\r\n                  </div>\r\n                  <span className=\"text-xs text-muted-foreground\">\r\n                    {item.time}\r\n                  </span>\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground leading-relaxed\">\r\n                  {item.description}\r\n                </p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/notification-toggle.tsx"
    }
  ]
}