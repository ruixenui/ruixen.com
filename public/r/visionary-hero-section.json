{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "visionary-hero-section",
  "type": "registry:ui",
  "title": "Visionary Hero Section",
  "description": "A visionary hero section with elegant design and smooth animations",
  "dependencies": [
    "motion",
    "@radix-ui/react-slot",
    "gsap"
  ],
  "files": [
    {
      "path": "registry/ruixenui/visionary-hero-section.tsx",
      "content": "\"use client\";\n\nimport React, { useEffect, useRef } from \"react\";\nimport { gsap } from \"gsap\";\nimport { Button } from \"@/components/ui/button\";\nimport Image from \"next/image\";\nimport { cn } from \"@/lib/utils\";\nimport Link from \"next/link\";\nimport { AnimatedGroup } from \"@/components/animated-group\";\n\nexport type VisionaryHeroSectionProps = {\n  title?: string;\n  description?: string;\n  buttons?: {\n    label: string;\n    href?: string;\n    variant?: \"default\" | \"gradient\";\n  }[];\n  images?: { src: string; alt: string; dark?: boolean }[];\n  brands?: { name: string; logo: string }[];\n};\n\nexport default function VisionaryHeroSection({\n  title = \"Ruixen: Design Systems for the Visionary Web\",\n  description = \"Whether you're designing interfaces or building full-scale apps, our tools empower creators to move fast, stay consistent, and ship beautiful products â€” every time.\",\n  buttons = [\n    { label: \"Start Building\", href: \"#\", variant: \"default\" },\n    { label: \"Request a demo\", href: \"#\", variant: \"gradient\" },\n  ],\n  images = [\n    {\n      src: \"https://tailark.com/_next/image?url=%2Fmail2.png&w=3840&q=75\",\n      alt: \"App screen dark\",\n      dark: true,\n    },\n    {\n      src: \"https://tailark.com/_next/image?url=%2Fmail2-light.png&w=3840&q=75\",\n      alt: \"App screen light\",\n      dark: false,\n    },\n  ],\n  brands = [\n    { name: \"loops\", logo: \"https://assets.rapidui.dev/brands/loops.svg\" },\n    { name: \"pwc\", logo: \"https://assets.rapidui.dev/brands/pwc.svg\" },\n    { name: \"resend\", logo: \"https://assets.rapidui.dev/brands/resend.svg\" },\n    { name: \"udio\", logo: \"https://assets.rapidui.dev/brands/udio.svg\" },\n    { name: \"krea\", logo: \"https://assets.rapidui.dev/brands/krea.svg\" },\n    { name: \"gopuff\", logo: \"https://assets.rapidui.dev/brands/gopuff.svg\" },\n  ],\n}: VisionaryHeroSectionProps) {\n  const gradientRef = useRef<HTMLDivElement>(null);\n\n  const transitionVariants = {\n    item: {\n      hidden: { opacity: 0, filter: \"blur(12px)\", y: 12 },\n      visible: {\n        opacity: 1,\n        filter: \"blur(0px)\",\n        y: 0,\n        transition: { type: \"spring\" as const, bounce: 0.3, duration: 1.5 },\n      },\n    },\n  };\n\n  useEffect(() => {\n    if (!gradientRef.current) return;\n    gsap.fromTo(\n      gradientRef.current,\n      { opacity: 0, y: -30 },\n      { opacity: 1, y: 0, duration: 1.6, ease: \"power3.out\" },\n    );\n  }, []);\n\n  return (\n    <div className=\"p-6 overflow-hidden rounded-xl\">\n      <div className=\"relative w-full\">\n        <div\n          ref={gradientRef}\n          className=\"absolute inset-0 -z-10 transition-colors duration-700 dark:bg-black max-h-[90vh] rounded-2xl\"\n          style={{\n            backgroundImage: `\n              linear-gradient(180deg, #ffffff 0%, #FFEDD5 25%, #FFDAB9 50%, #FFB6C1 70%, #E0BBE4 85%, #F3E5F5 100%),\n              radial-gradient(at 20% 30%, #ffffff33 0%, transparent 60%),\n              radial-gradient(at 80% 70%, #f3e5f533 0%, transparent 70%)\n            `,\n            backgroundBlendMode: \"overlay, screen\",\n            backdropFilter: \"blur(40px)\",\n            WebkitBackdropFilter: \"blur(40px)\",\n          }}\n        />\n\n        <div className=\"pt-4 pb-10 sm:pt-6 sm:pb-12 text-center\">\n          <div className=\"relative max-w-2xl mx-auto\">\n            <h1 className=\"text-3xl sm:text-5xl md:text-6xl text-gray-800 dark:text-gray-200 font-bold tracking-tight\">\n              {title}\n            </h1>\n            <p className=\"mt-4 text-lg text-gray-500 dark:text-gray-400\">\n              {description}\n            </p>\n\n            <AnimatedGroup\n              variants={{\n                container: {\n                  visible: {\n                    transition: { staggerChildren: 0.05, delayChildren: 0.75 },\n                  },\n                },\n                ...transitionVariants,\n              }}\n              className=\"mt-12 flex flex-col items-center justify-center gap-2 md:flex-row\"\n            >\n              {buttons.map((btn, idx) => (\n                <div\n                  key={idx}\n                  className={cn(\n                    \"rounded-[14px] border p-0.5\",\n                    btn.variant === \"gradient\"\n                      ? \"bg-gradient-to-r from-cyan-400 via-blue-500 to-purple-500\"\n                      : \"bg-foreground/10\",\n                  )}\n                >\n                  <Button\n                    asChild\n                    size=\"lg\"\n                    className={cn(\n                      \"rounded-xl px-5 text-base\",\n                      btn.variant === \"gradient\"\n                        ? \"bg-white text-black hover:bg-black hover:text-white\"\n                        : \"\",\n                    )}\n                  >\n                    <a href={btn.href || \"#\"}>{btn.label}</a>\n                  </Button>\n                </div>\n              ))}\n            </AnimatedGroup>\n          </div>\n        </div>\n\n        <AnimatedGroup\n          variants={{\n            container: {\n              visible: {\n                transition: { staggerChildren: 0.05, delayChildren: 0.75 },\n              },\n            },\n            ...transitionVariants,\n          }}\n        >\n          <div className=\"relative overflow-hidden px-2\">\n            <div\n              aria-hidden\n              className=\"bg-gradient-to-b from-background to-background absolute inset-0 z-10 from-transparent from-35%\"\n            />\n            <div className=\"inset-shadow-2xs max-h-[40vh] ring-background dark:inset-shadow-white/20 bg-background relative mx-auto max-w-5xl overflow-hidden rounded-t-2xl border border-gray-50 border-b-0 p-4 shadow-lg shadow-zinc-950/15 ring-1\">\n              {images.map((img, idx) => (\n                <Link\n                  key={idx}\n                  href=\"https://ruixen.com?utm_source=21st.dev&utm_medium=hero_section_05&utm_campaign=ruixen\"\n                  target=\"_blank\"\n                >\n                  <Image\n                    className={cn(\n                      \"bg-background aspect-15/8 relative rounded-2xl\",\n                      img.dark\n                        ? \"hidden dark:block\"\n                        : \"z-2 border-border/25 dark:hidden\",\n                    )}\n                    src={img.src}\n                    alt={img.alt}\n                    width={2700}\n                    height={1440}\n                    unoptimized\n                  />\n                </Link>\n              ))}\n            </div>\n          </div>\n        </AnimatedGroup>\n      </div>\n\n      <BrandsGrid brands={brands} />\n    </div>\n  );\n}\n\n// Brands Grid as prop-driven component\nexport const BrandsGrid = React.forwardRef<\n  HTMLDivElement,\n  {\n    brands?: { name: string; logo: string }[];\n  } & React.HTMLAttributes<HTMLDivElement>\n>(({ brands = [], className, ...props }, ref) => {\n  return (\n    <div ref={ref} className={cn(\"py-8\", className)} {...props}>\n      <div className=\"max-w-5xl mx-auto px-4\">\n        <div className=\"max-w-xs mx-auto grid grid-cols-2 items-center md:grid-cols-3 md:max-w-lg lg:grid-cols-6 lg:max-w-3xl\">\n          {brands.map((brand) => (\n            <div\n              key={brand.name}\n              className=\"flex items-center justify-center p-4\"\n            >\n              <div className=\"relative h-[76px] w-full\">\n                <Image\n                  src={brand.logo}\n                  alt={`${brand.name} logo`}\n                  fill\n                  className=\"object-contain\"\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n});\n\nBrandsGrid.displayName = \"BrandsGrid\";\n",
      "type": "registry:ui",
      "target": "components/ruixen/visionary-hero-section.tsx"
    }
  ]
}