{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "compact-accordion-demo",
  "type": "registry:example",
  "title": "Compact Accordion Demo",
  "description": "Example showing a compact accordion component with icons and smooth animations.",
  "registryDependencies": [
    "https://ruixen.com/r/compact-accordion"
  ],
  "files": [
    {
      "path": "registry/example/compact-accordion-demo.tsx",
      "content": "\"use client\";\n\nimport CompactAccordion, {\n  CompactAccordionItem,\n} from \"../ruixenui/compact-accordion\";\nimport { HelpCircle, LayoutList, Settings, Accessibility } from \"lucide-react\";\n\nconst demoItems: CompactAccordionItem[] = [\n  {\n    icon: HelpCircle,\n    value: \"item-1\",\n    question: \"Is this an accordion component?\",\n    answer:\n      \"Yes. This is an accordion component built with Radix UI and styled with Tailwind CSS.\",\n  },\n  {\n    icon: LayoutList,\n    value: \"item-2\",\n    question: \"How do I use this component?\",\n    answer:\n      \"You can use this component to organize content in collapsible sections. It's perfect for FAQs, settings panels, or any content that benefits from progressive disclosure.\",\n  },\n  {\n    icon: Settings,\n    value: \"item-3\",\n    question: \"Can I customize the styling?\",\n    answer:\n      \"Absolutely! This component uses Tailwind CSS for styling, so you can easily customize the appearance by modifying the class names. The component is also built with accessibility in mind.\",\n  },\n  {\n    icon: Accessibility,\n    value: \"item-4\",\n    question: \"Is it accessible?\",\n    answer:\n      \"Yes! This accordion component is built on top of Radix UI's Accordion primitive, which provides full keyboard navigation and proper ARIA attributes for screen readers.\",\n  },\n];\n\nexport default function CompactAccordionDemo() {\n  return <CompactAccordion items={demoItems} />;\n}\n",
      "type": "registry:example",
      "target": "components/compact-accordion-demo.tsx"
    }
  ]
}