{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "notifications-filter",
  "type": "registry:ui",
  "title": "Notifications Filter",
  "description": "A notification component with category filtering to organize notifications by type.",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/notifications-filter.tsx",
      "content": "\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport {\r\n  Bell,\r\n  Info,\r\n  AlertCircle,\r\n  Calendar,\r\n  Filter,\r\n} from \"lucide-react\"\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Button } from \"@/components/ui/button\"\r\n\r\nexport interface NotificationItem {\r\n  id: string\r\n  category: \"updates\" | \"alerts\" | \"reminders\"\r\n  icon: React.ReactNode\r\n  title: string\r\n  description: string\r\n  time: string\r\n}\r\n\r\ninterface NotificationsFilterProps {\r\n  items?: NotificationItem[]\r\n  placement?: \"top\" | \"bottom\" | \"left\" | \"right\"\r\n}\r\n\r\nconst defaultNotifications: NotificationItem[] = [\r\n  {\r\n    id: \"1\",\r\n    category: \"updates\",\r\n    icon: <Info className=\"h-4 w-4\" />,\r\n    title: \"System Update\",\r\n    description: \"A new feature has been deployed.\",\r\n    time: \"just now\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    category: \"alerts\",\r\n    icon: <AlertCircle className=\"h-4 w-4\" />,\r\n    title: \"Security Alert\",\r\n    description: \"Suspicious login detected.\",\r\n    time: \"1h ago\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    category: \"reminders\",\r\n    icon: <Calendar className=\"h-4 w-4\" />,\r\n    title: \"Meeting Reminder\",\r\n    description: \"Project sync at 3 PM.\",\r\n    time: \"2h ago\",\r\n  },\r\n  {\r\n    id: \"4\",\r\n    category: \"updates\",\r\n    icon: <Info className=\"h-4 w-4\" />,\r\n    title: \"Weekly Report\",\r\n    description: \"Your weekly summary is ready.\",\r\n    time: \"1d ago\",\r\n  },\r\n]\r\n\r\nconst categories = [\r\n  { key: \"all\", label: \"All\" },\r\n  { key: \"updates\", label: \"Updates\" },\r\n  { key: \"alerts\", label: \"Alerts\" },\r\n  { key: \"reminders\", label: \"Reminders\" },\r\n]\r\n\r\nexport default function NotificationsFilter({\r\n  items = defaultNotifications,\r\n  placement = \"bottom\",\r\n}: NotificationsFilterProps) {\r\n  const [selected, setSelected] = React.useState(\"all\")\r\n\r\n  const filteredItems =\r\n    selected === \"all\"\r\n      ? items\r\n      : items.filter((item) => item.category === selected)\r\n\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger asChild>\r\n        <button className=\"relative inline-flex items-center justify-center rounded-full p-2 hover:bg-muted\">\r\n          <Bell className=\"h-5 w-5\" />\r\n          {items.length > 0 && (\r\n            <Badge\r\n              variant=\"default\"\r\n              className=\"absolute -top-1 -right-1 text-xs px-1.5 py-0\"\r\n            >\r\n              {items.length}\r\n            </Badge>\r\n          )}\r\n        </button>\r\n      </PopoverTrigger>\r\n\r\n      <PopoverContent\r\n        side={placement}\r\n        align=\"center\"\r\n        className=\"w-80 p-0\"\r\n      >\r\n        {/* Header with filter */}\r\n        <div className=\"flex justify-between items-center border-b px-4 py-2\">\r\n          <h2 className=\"text-sm font-medium flex items-center gap-2\">\r\n            <Filter className=\"h-4 w-4\" /> Notifications\r\n          </h2>\r\n        </div>\r\n\r\n        {/* Category buttons */}\r\n        <div className=\"flex gap-2 px-4 py-2 border-b overflow-x-auto\">\r\n          {categories.map((cat) => (\r\n            <Button\r\n              key={cat.key}\r\n              variant={selected === cat.key ? \"secondary\" : \"ghost\"}\r\n              size=\"sm\"\r\n              onClick={() => setSelected(cat.key)}\r\n            >\r\n              {cat.label}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Notifications list */}\r\n        {filteredItems.length === 0 ? (\r\n          <div className=\"p-4 text-sm text-muted-foreground text-center\">\r\n            No notifications in this category\r\n          </div>\r\n        ) : (\r\n          <div className=\"max-h-80 overflow-y-auto divide-y divide-border\">\r\n            {filteredItems.map((item) => (\r\n              <div\r\n                key={item.id}\r\n                className=\"p-4 hover:bg-muted/50 transition\"\r\n              >\r\n                <div className=\"flex justify-between items-center mb-1\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {item.icon}\r\n                    <span className=\"font-medium text-sm\">{item.title}</span>\r\n                  </div>\r\n                  <span className=\"text-xs text-muted-foreground\">\r\n                    {item.time}\r\n                  </span>\r\n                </div>\r\n                <p className=\"text-xs text-muted-foreground leading-relaxed\">\r\n                  {item.description}\r\n                </p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </PopoverContent>\r\n    </Popover>\r\n  )\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/notifications-filter.tsx"
    }
  ]
}