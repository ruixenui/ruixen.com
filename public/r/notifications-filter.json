{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "notifications-filter",
  "type": "registry:ui",
  "title": "Notifications Filter",
  "description": "A notification component with category filtering to organize notifications by type.",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/notifications-filter.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Bell, Info, AlertCircle, Calendar, Filter } from \"lucide-react\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\n\nexport interface NotificationItem {\n  id: string;\n  category: \"updates\" | \"alerts\" | \"reminders\";\n  icon: React.ReactNode;\n  title: string;\n  description: string;\n  time: string;\n}\n\ninterface NotificationsFilterProps {\n  items?: NotificationItem[];\n  placement?: \"top\" | \"bottom\" | \"left\" | \"right\";\n}\n\nconst defaultNotifications: NotificationItem[] = [\n  {\n    id: \"1\",\n    category: \"updates\",\n    icon: <Info className=\"h-4 w-4\" />,\n    title: \"System Update\",\n    description: \"A new feature has been deployed.\",\n    time: \"just now\",\n  },\n  {\n    id: \"2\",\n    category: \"alerts\",\n    icon: <AlertCircle className=\"h-4 w-4\" />,\n    title: \"Security Alert\",\n    description: \"Suspicious login detected.\",\n    time: \"1h ago\",\n  },\n  {\n    id: \"3\",\n    category: \"reminders\",\n    icon: <Calendar className=\"h-4 w-4\" />,\n    title: \"Meeting Reminder\",\n    description: \"Project sync at 3 PM.\",\n    time: \"2h ago\",\n  },\n  {\n    id: \"4\",\n    category: \"updates\",\n    icon: <Info className=\"h-4 w-4\" />,\n    title: \"Weekly Report\",\n    description: \"Your weekly summary is ready.\",\n    time: \"1d ago\",\n  },\n];\n\nconst categories = [\n  { key: \"all\", label: \"All\" },\n  { key: \"updates\", label: \"Updates\" },\n  { key: \"alerts\", label: \"Alerts\" },\n  { key: \"reminders\", label: \"Reminders\" },\n];\n\nexport default function NotificationsFilter({\n  items = defaultNotifications,\n  placement = \"bottom\",\n}: NotificationsFilterProps) {\n  const [selected, setSelected] = React.useState(\"all\");\n\n  const filteredItems =\n    selected === \"all\"\n      ? items\n      : items.filter((item) => item.category === selected);\n\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <button className=\"relative inline-flex items-center justify-center rounded-full p-2 hover:bg-muted\">\n          <Bell className=\"h-5 w-5\" />\n          {items.length > 0 && (\n            <Badge\n              variant=\"default\"\n              className=\"absolute -top-1 -right-1 text-xs px-1.5 py-0\"\n            >\n              {items.length}\n            </Badge>\n          )}\n        </button>\n      </PopoverTrigger>\n\n      <PopoverContent side={placement} align=\"center\" className=\"w-80 p-0\">\n        {/* Header with filter */}\n        <div className=\"flex justify-between items-center border-b px-4 py-2\">\n          <h2 className=\"text-sm font-medium flex items-center gap-2\">\n            <Filter className=\"h-4 w-4\" /> Notifications\n          </h2>\n        </div>\n\n        {/* Category buttons */}\n        <div className=\"flex gap-2 px-4 py-2 border-b overflow-x-auto\">\n          {categories.map((cat) => (\n            <Button\n              key={cat.key}\n              variant={selected === cat.key ? \"secondary\" : \"ghost\"}\n              size=\"sm\"\n              onClick={() => setSelected(cat.key)}\n            >\n              {cat.label}\n            </Button>\n          ))}\n        </div>\n\n        {/* Notifications list */}\n        {filteredItems.length === 0 ? (\n          <div className=\"p-4 text-sm text-muted-foreground text-center\">\n            No notifications in this category\n          </div>\n        ) : (\n          <div className=\"max-h-80 overflow-y-auto divide-y divide-border\">\n            {filteredItems.map((item) => (\n              <div key={item.id} className=\"p-4 hover:bg-muted/50 transition\">\n                <div className=\"flex justify-between items-center mb-1\">\n                  <div className=\"flex items-center gap-2\">\n                    {item.icon}\n                    <span className=\"font-medium text-sm\">{item.title}</span>\n                  </div>\n                  <span className=\"text-xs text-muted-foreground\">\n                    {item.time}\n                  </span>\n                </div>\n                <p className=\"text-xs text-muted-foreground leading-relaxed\">\n                  {item.description}\n                </p>\n              </div>\n            ))}\n          </div>\n        )}\n      </PopoverContent>\n    </Popover>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/notifications-filter.tsx"
    }
  ]
}