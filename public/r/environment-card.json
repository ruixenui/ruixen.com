{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "environment-card",
  "type": "registry:ui",
  "title": "Environment Card",
  "description": "A smart home environment control card with device management.",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/environment-card.tsx",
      "content": "import { Sun, Moon, Thermometer, Wind, Power, Settings2 } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface Device {\n  id: string;\n  name: string;\n  status: \"on\" | \"off\";\n  value?: number;\n  unit?: string;\n  icon: React.ReactNode;\n}\n\ninterface Scene {\n  id: string;\n  name: string;\n  icon: React.ReactNode;\n  isActive: boolean;\n}\n\ninterface EnvironmentCardProps {\n  roomName?: string;\n  temperature?: number;\n  devices?: Device[];\n  scenes?: Scene[];\n}\n\nexport default function EnvironmentCard({\n  roomName = \"Living Room\",\n  temperature = 22.5,\n  devices = [\n    {\n      id: \"1\",\n      name: \"Main Light\",\n      status: \"on\",\n      value: 80,\n      unit: \"%\",\n      icon: <Sun className=\"w-4 h-4\" />,\n    },\n    {\n      id: \"2\",\n      name: \"AC\",\n      status: \"off\",\n      value: 22,\n      unit: \"°C\",\n      icon: <Wind className=\"w-4 h-4\" />,\n    },\n  ],\n  scenes = [\n    {\n      id: \"1\",\n      name: \"Day\",\n      icon: <Sun className=\"w-4 h-4\" />,\n      isActive: false,\n    },\n    {\n      id: \"2\",\n      name: \"Night\",\n      icon: <Moon className=\"w-4 h-4\" />,\n      isActive: true,\n    },\n  ],\n}: EnvironmentCardProps) {\n  return (\n    <div className=\"w-full max-w-sm mx-auto\">\n      <div\n        className={cn(\n          \"relative overflow-hidden\",\n          \"bg-white dark:bg-zinc-900\",\n          \"rounded-3xl\",\n          \"transition-all duration-300\",\n          \"hover:shadow-xl hover:shadow-zinc-200/20 dark:hover:shadow-zinc-900/20\",\n          \"border border-zinc-200 dark:border-zinc-800\",\n        )}\n      >\n        {/* Header */}\n        <div className=\"p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-zinc-900 dark:text-zinc-100\">\n                {roomName}\n              </h3>\n              <div className=\"flex items-center gap-1.5 mt-1\">\n                <Thermometer className=\"w-4 h-4 text-amber-500\" />\n                <span className=\"text-sm text-zinc-500 dark:text-zinc-400\">\n                  {temperature}°C\n                </span>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              className={cn(\n                \"p-2.5 rounded-xl\",\n                \"bg-zinc-100 dark:bg-zinc-800\",\n                \"hover:bg-zinc-200 dark:hover:bg-zinc-700\",\n                \"transition-colors duration-200\",\n              )}\n            >\n              <Settings2 className=\"w-5 h-5 text-zinc-500 dark:text-zinc-400\" />\n            </button>\n          </div>\n\n          {/* Devices */}\n          <div className=\"grid grid-cols-2 gap-4 mb-6\">\n            {devices.map((device) => (\n              <div\n                key={device.id}\n                className={cn(\n                  \"p-4 rounded-2xl\",\n                  \"bg-zinc-50 dark:bg-zinc-800/50\",\n                  \"border border-zinc-200 dark:border-zinc-700\",\n                  \"group\",\n                  \"transition-all duration-200\",\n                  device.status === \"on\" && \"bg-blue-50/50 dark:bg-blue-900/20\",\n                  device.status === \"on\" &&\n                    \"border-blue-200 dark:border-blue-800\",\n                )}\n              >\n                <div className=\"flex items-start justify-between mb-3\">\n                  <div className=\"space-y-1\">\n                    <div\n                      className={cn(\n                        \"p-2 rounded-lg w-fit\",\n                        \"bg-white dark:bg-zinc-800\",\n                        \"border border-zinc-200 dark:border-zinc-700\",\n                        device.status === \"on\" && \"text-blue-500\",\n                      )}\n                    >\n                      {device.icon}\n                    </div>\n                    <h4 className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100\">\n                      {device.name}\n                    </h4>\n                  </div>\n                  <button\n                    type=\"button\"\n                    className={cn(\n                      \"relative w-11 h-6 rounded-full\",\n                      \"transition-colors duration-200\",\n                      device.status === \"on\"\n                        ? \"bg-blue-500\"\n                        : \"bg-zinc-200 dark:bg-zinc-700\",\n                    )}\n                  >\n                    <span\n                      className={cn(\n                        \"absolute w-5 h-5 rounded-full\",\n                        \"bg-white\",\n                        \"shadow-xs\",\n                        \"transition-transform duration-200\",\n                        \"top-0.5 left-0.5\",\n                        device.status === \"on\" && \"translate-x-5\",\n                      )}\n                    />\n                  </button>\n                </div>\n                {device.value && (\n                  <div className=\"flex items-center justify-between text-sm\">\n                    <span className=\"text-zinc-500 dark:text-zinc-400\">\n                      {device.value}\n                      {device.unit}\n                    </span>\n                    <Power\n                      className={cn(\n                        \"w-4 h-4\",\n                        device.status === \"on\"\n                          ? \"text-blue-500\"\n                          : \"text-zinc-400\",\n                      )}\n                    />\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"space-y-3\">\n            <h4 className=\"text-sm font-medium text-zinc-900 dark:text-zinc-100\">\n              Scenes\n            </h4>\n            <div className=\"grid grid-cols-2 gap-3\">\n              {scenes.map((scene) => (\n                <button\n                  type=\"button\"\n                  key={scene.id}\n                  className={cn(\n                    \"flex items-center gap-2.5\",\n                    \"p-3 rounded-xl\",\n                    \"transition-all duration-200\",\n                    scene.isActive\n                      ? \"bg-blue-50 dark:bg-blue-900/20 text-blue-500\"\n                      : \"bg-zinc-50 dark:bg-zinc-800 text-zinc-500 dark:text-zinc-400\",\n                    \"hover:bg-blue-50 dark:hover:bg-blue-900/20\",\n                    \"hover:text-blue-500\",\n                  )}\n                >\n                  {scene.icon}\n                  <span className=\"text-sm font-medium\">{scene.name}</span>\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/environment-card.tsx"
    }
  ]
}