{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "social-auth-card",
  "type": "registry:ui",
  "title": "Social Auth Card",
  "description": "Authentication card with social login buttons and traditional form.",
  "dependencies": [],
  "files": [
    {
      "path": "registry/ruixenui/social-auth-card.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface SocialProvider {\n  id: string;\n  label: string;\n  icon: React.ReactNode;\n  colorClass?: string; // background color tailwind\n  textColorClass?: string; // text color\n  onClick?: () => void;\n}\n\nexport interface FormInput {\n  id: string;\n  type: string;\n  label: string;\n  placeholder?: string;\n}\n\ninterface SocialAuthCardProps {\n  socialProviders?: SocialProvider[];\n  formInputs?: FormInput[];\n  buttonLabel?: string;\n  className?: string;\n  onChange?: (values: Record<string, string>) => void;\n  onSubmit?: (values: Record<string, string>) => void;\n}\n\nexport default function SocialAuthCard({\n  socialProviders = [],\n  formInputs = [\n    {\n      id: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      placeholder: \"you@example.com\",\n    },\n    {\n      id: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      placeholder: \"********\",\n    },\n  ],\n  buttonLabel = \"Login\",\n  className,\n  onChange,\n  onSubmit,\n}: SocialAuthCardProps) {\n  const [values, setValues] = React.useState<Record<string, string>>(\n    formInputs.reduce((acc, input) => ({ ...acc, [input.id]: \"\" }), {}),\n  );\n\n  const handleInputChange = (id: string, value: string) => {\n    const newValues = { ...values, [id]: value };\n    setValues(newValues);\n    onChange?.(newValues);\n  };\n\n  const handleSubmit = () => {\n    onSubmit?.(values);\n  };\n\n  return (\n    <div\n      className={cn(\n        \"w-full max-w-md mx-auto bg-white dark:bg-gray-800 border rounded-lg shadow-md overflow-hidden p-6 flex flex-col gap-6\",\n        className,\n      )}\n    >\n      {/* Social Login Buttons */}\n      {socialProviders.length > 0 && (\n        <div className=\"flex flex-col gap-4\">\n          {socialProviders.map((provider) => (\n            <Button\n              key={provider.id}\n              className={cn(\n                \"w-full flex items-center justify-center gap-2\",\n                provider.colorClass ?? \"bg-gray-800\",\n                provider.textColorClass ?? \"text-white\",\n                \"hover:brightness-90\",\n              )}\n              onClick={provider.onClick}\n            >\n              {provider.icon} {provider.label}\n            </Button>\n          ))}\n        </div>\n      )}\n\n      {/* Divider */}\n      {socialProviders.length > 0 && formInputs.length > 0 && (\n        <div className=\"flex items-center gap-2 text-gray-400 dark:text-gray-300 text-sm\">\n          <span className=\"flex-1 border-t border-gray-300 dark:border-gray-600\"></span>\n          <span>or</span>\n          <span className=\"flex-1 border-t border-gray-300 dark:border-gray-600\"></span>\n        </div>\n      )}\n\n      {/* Traditional Login Form */}\n      {formInputs.length > 0 && (\n        <div className=\"flex flex-col gap-4\">\n          {formInputs.map((input) => (\n            <div key={input.id}>\n              <Label htmlFor={input.id}>{input.label}</Label>\n              <Input\n                id={input.id}\n                type={input.type}\n                placeholder={input.placeholder}\n                className=\"mt-1\"\n                value={values[input.id]}\n                onChange={(e) => handleInputChange(input.id, e.target.value)}\n              />\n            </div>\n          ))}\n          <Button className=\"w-full mt-2\" onClick={handleSubmit}>\n            {buttonLabel}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/social-auth-card.tsx"
    }
  ]
}