{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "order-tracking-parallax-card",
  "type": "registry:ui",
  "title": "Order Tracking Parallax Card",
  "description": "A 3D parallax card for order tracking with delivery status and progress indicator.",
  "dependencies": [
    "framer-motion"
  ],
  "files": [
    {
      "path": "registry/ruixenui/order-tracking-parallax-card.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { motion, useMotionValue, useSpring, useTransform } from \"framer-motion\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\ninterface OrderTrackingParallaxCardProps {\r\n  orderId: string;\r\n  product: string;\r\n  status: \"Processing\" | \"Shipped\" | \"Out for Delivery\" | \"Delivered\";\r\n  eta: string;\r\n  imageUrl?: string;\r\n  className?: string;\r\n}\r\n\r\nexport const OrderTrackingParallaxCard = React.forwardRef<\r\n  HTMLDivElement,\r\n  OrderTrackingParallaxCardProps\r\n>(\r\n  (\r\n    {\r\n      orderId,\r\n      product,\r\n      status,\r\n      eta,\r\n      imageUrl = \"https://pub-940ccf6255b54fa799a9b01050e6c227.r2.dev/ruixen_truck.png\",\r\n      className,\r\n    },\r\n    ref\r\n  ) => {\r\n    // Motion values\r\n    const x = useMotionValue(0);\r\n    const y = useMotionValue(0);\r\n\r\n    const xSpring = useSpring(x, { stiffness: 300, damping: 30 });\r\n    const ySpring = useSpring(y, { stiffness: 300, damping: 30 });\r\n\r\n    const rotateX = useTransform(ySpring, [-0.5, 0.5], [\"15deg\", \"-15deg\"]);\r\n    const rotateY = useTransform(xSpring, [-0.5, 0.5], [\"-15deg\", \"15deg\"]);\r\n\r\n    const translateZImg = useTransform(ySpring, [-0.5, 0.5], [-40, 40]);\r\n    const translateZContent = useTransform(ySpring, [-0.5, 0.5], [25, -25]);\r\n    const translateZProgress = useTransform(ySpring, [-0.5, 0.5], [35, -35]);\r\n\r\n    const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\r\n      const rect = e.currentTarget.getBoundingClientRect();\r\n      const mouseX = e.clientX - rect.left;\r\n      const mouseY = e.clientY - rect.top;\r\n      const xPct = mouseX / rect.width - 0.5;\r\n      const yPct = mouseY / rect.height - 0.5;\r\n      x.set(xPct);\r\n      y.set(yPct);\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n      x.set(0);\r\n      y.set(0);\r\n    };\r\n\r\n    // Progress steps\r\n    const steps = [\"Processing\", \"Shipped\", \"Out for Delivery\", \"Delivered\"];\r\n    const activeStep = steps.indexOf(status);\r\n\r\n    return (\r\n      <motion.div\r\n        ref={ref}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseLeave={handleMouseLeave}\r\n        style={{ rotateX, rotateY, transformStyle: \"preserve-3d\" }}\r\n        className={cn(\r\n          \"relative h-[420px] w-80 rounded-2xl\",\r\n          className\r\n        )}\r\n      >\r\n        <div\r\n          style={{ transform: \"translateZ(40px)\", transformStyle: \"preserve-3d\" }}\r\n          className=\"absolute inset-4 flex flex-col justify-between rounded-xl bg-card hover:shadow-xl p-5 border cursor-pointer\"\r\n        >\r\n          {/* Truck Image */}\r\n          <motion.div\r\n            style={{ transform: \"translateZ(60px)\", translateY: translateZImg }}\r\n            className=\"relative flex justify-center\"\r\n          >\r\n            <img\r\n              src={imageUrl}\r\n              alt=\"Delivery truck\"\r\n              className=\"pointer-events-none h-28 object-contain\"\r\n            />\r\n          </motion.div>\r\n\r\n          {/* Order Info */}\r\n          <motion.div\r\n            style={{ transform: \"translateZ(30px)\", translateY: translateZContent }}\r\n            className=\"mt-3 text-center\"\r\n          >\r\n            <h2 className=\"text-lg font-bold text-card-foreground\">\r\n              Order #{orderId}\r\n            </h2>\r\n            <p className=\"text-sm text-muted-foreground\">{product}</p>\r\n            <span\r\n              className={cn(\r\n                \"mt-2 inline-block rounded-full px-3 py-1 text-xs font-medium\",\r\n                status === \"Delivered\"\r\n                  ? \"bg-green-100 text-green-700\"\r\n                  : status === \"Out for Delivery\"\r\n                  ? \"bg-blue-100 text-blue-700\"\r\n                  : status === \"Shipped\"\r\n                  ? \"bg-yellow-100 text-yellow-700\"\r\n                  : \"bg-gray-100 text-gray-700\"\r\n              )}\r\n            >\r\n              {status}\r\n            </span>\r\n            <p className=\"mt-2 text-xs text-muted-foreground\">\r\n              ETA: {eta}\r\n            </p>\r\n          </motion.div>\r\n\r\n          {/* Progress Tracker */}\r\n          <motion.div\r\n            style={{ transform: \"translateZ(45px)\", translateY: translateZProgress }}\r\n            className=\"mt-4\"\r\n          >\r\n            <div className=\"flex justify-between text-[10px] font-medium text-muted-foreground\">\r\n              {steps.map((step, i) => (\r\n                <span\r\n                  key={step}\r\n                  className={cn(\r\n                    \"w-full text-center\",\r\n                    i === activeStep ? \"text-primary font-semibold\" : \"\"\r\n                  )}\r\n                >\r\n                  {step}\r\n                </span>\r\n              ))}\r\n            </div>\r\n            <div className=\"mt-1 flex w-full justify-between\">\r\n              {steps.map((_, i) => (\r\n                <div\r\n                  key={i}\r\n                  className={cn(\r\n                    \"h-1 w-full mx-0.5 rounded-full\",\r\n                    i <= activeStep ? \"bg-primary\" : \"bg-muted\"\r\n                  )}\r\n                ></div>\r\n              ))}\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      </motion.div>\r\n    );\r\n  }\r\n);\r\n\r\nOrderTrackingParallaxCard.displayName = \"OrderTrackingParallaxCard\";\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/order-tracking-parallax-card.tsx"
    }
  ]
}