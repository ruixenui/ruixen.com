{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "credit-card-dialog",
  "type": "registry:ui",
  "title": "Credit Card Dialog",
  "description": "A credit card activation dialog with animated card display and form input.",
  "dependencies": [
    "lucide-react",
    "framer-motion"
  ],
  "registryDependencies": [
    "button",
    "dialog",
    "input"
  ],
  "files": [
    {
      "path": "registry/ruixenui/credit-card-dialog.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Loader2 } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\n\ninterface CreditCardDialogProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onActivate: (code: string) => Promise<void>;\n  backgroundImage?: string;\n}\n\nexport function CreditCardDialog({\n  open,\n  onOpenChange,\n  onActivate,\n  backgroundImage = \"https://pub-940ccf6255b54fa799a9b01050e6c227.r2.dev/ruixen_gradient.jpeg\",\n}: CreditCardDialogProps) {\n  const [code, setCode] = React.useState(\"\");\n  const [isProcessing, setIsProcessing] = React.useState(false);\n\n  const handleActivateClick = async () => {\n    if (!code) return;\n    setIsProcessing(true);\n    try {\n      await onActivate(code);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (!open) {\n      setCode(\"\");\n      setIsProcessing(false);\n    }\n  }, [open]);\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[450px] p-0\">\n        {/* Credit Card */}\n        <div className=\"flex items-center justify-center pt-8\">\n          <motion.div\n            initial={{ y: -20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            transition={{ duration: 0.5, ease: \"easeOut\" }}\n            className={cn(\n              \"relative h-48 w-80 rounded-2xl p-6 shadow-2xl text-white flex flex-col justify-between bg-cover bg-center\",\n            )}\n            style={{ backgroundImage: `url(${backgroundImage})` }}\n          >\n            {/* Overlay for readability */}\n            <div className=\"absolute inset-0 bg-black/40 rounded-2xl\" />\n\n            {/* Card content */}\n            <div className=\"relative z-10 flex justify-between items-start\">\n              <div className=\"h-8 w-12 bg-yellow-400 rounded-sm\" /> {/* chip */}\n              <p className=\"text-sm font-medium tracking-wider\">VIRTUAL CARD</p>\n            </div>\n\n            <div className=\"relative z-10\">\n              <p className=\"text-lg tracking-widest font-semibold\">\n                **** **** **** 1234\n              </p>\n              <div className=\"flex justify-between text-sm mt-2\">\n                <span>RUIXEN UI</span>\n                <span>12/28</span>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n\n        {/* Dialog Header */}\n        <DialogHeader className=\"p-6 pb-2\">\n          <DialogTitle className=\"text-xl\">\n            Activate Your Virtual Card\n          </DialogTitle>\n          <DialogDescription>\n            Enter the activation code to enable your digital card for use.\n          </DialogDescription>\n        </DialogHeader>\n\n        {/* Input */}\n        <div className=\"grid gap-4 px-6\">\n          <Input\n            id=\"activation-code\"\n            placeholder=\"enter activation code\"\n            value={code}\n            onChange={(e) => setCode(e.target.value)}\n            disabled={isProcessing}\n            className=\"h-10 text-base\"\n          />\n        </div>\n\n        {/* Footer */}\n        <DialogFooter className=\"p-6 pt-4 bg-muted/50 rounded-b-lg\">\n          <Button\n            variant=\"outline\"\n            onClick={() => onOpenChange(false)}\n            disabled={isProcessing}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleActivateClick}\n            disabled={!code || isProcessing}\n          >\n            {isProcessing && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n            {isProcessing ? \"Activating...\" : \"Activate\"}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/credit-card-dialog.tsx"
    }
  ]
}