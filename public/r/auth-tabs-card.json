{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "auth-tabs-card",
  "type": "registry:ui",
  "title": "Auth Tabs Card",
  "description": "Tabbed authentication card with sign-in/sign-up forms and social login options.",
  "dependencies": [
    "react-icons"
  ],
  "files": [
    {
      "path": "registry/ruixenui/auth-tabs-card.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { IconType } from \"react-icons\";\n\nexport interface SocialButton {\n  id: string;\n  label: string;\n  icon: IconType;\n  onClick: () => void;\n  variant?: \"default\" | \"outline\";\n}\n\nexport interface Field {\n  id: string;\n  label: string;\n  type: string;\n  placeholder?: string;\n}\n\nexport interface AuthTabsCardProps {\n  signInFields?: Field[];\n  signUpFields?: Field[];\n  socialButtons?: SocialButton[];\n  onSignIn?: (data: Record<string, string>) => void;\n  onSignUp?: (data: Record<string, string>) => void;\n  className?: string;\n}\n\nexport default function AuthTabsCard({\n  signInFields = [\n    {\n      id: \"email\",\n      label: \"Email\",\n      type: \"email\",\n      placeholder: \"you@example.com\",\n    },\n    {\n      id: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      placeholder: \"********\",\n    },\n  ],\n  signUpFields = [\n    { id: \"name\", label: \"Name\", type: \"text\", placeholder: \"Your name\" },\n    {\n      id: \"email\",\n      label: \"Email\",\n      type: \"email\",\n      placeholder: \"you@example.com\",\n    },\n    {\n      id: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      placeholder: \"********\",\n    },\n  ],\n  socialButtons = [],\n  onSignIn,\n  onSignUp,\n  className = \"\",\n}: AuthTabsCardProps) {\n  const [activeTab, setActiveTab] = React.useState<\"sign-in\" | \"sign-up\">(\n    \"sign-in\",\n  );\n\n  const [signInValues, setSignInValues] = React.useState<\n    Record<string, string>\n  >(signInFields.reduce((acc, f) => ({ ...acc, [f.id]: \"\" }), {}));\n\n  const [signUpValues, setSignUpValues] = React.useState<\n    Record<string, string>\n  >(signUpFields.reduce((acc, f) => ({ ...acc, [f.id]: \"\" }), {}));\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement>,\n    setState: React.Dispatch<React.SetStateAction<Record<string, string>>>,\n  ) => {\n    const { id, value } = e.target;\n    setState((prev) => ({ ...prev, [id]: value }));\n  };\n\n  return (\n    <div className={`flex items-center justify-center ${className}`}>\n      <div className=\"w-full max-w-md bg-white dark:bg-gray-800 rounded-2xl shadow-2xl p-8\">\n        <Tabs\n          value={activeTab}\n          onValueChange={(v) => setActiveTab(v as any)}\n          className=\"w-full\"\n        >\n          {/* Tab Triggers */}\n          <TabsList className=\"mb-6 w-full grid grid-cols-2\">\n            <TabsTrigger value=\"sign-in\">Sign In</TabsTrigger>\n            <TabsTrigger value=\"sign-up\">Sign Up</TabsTrigger>\n          </TabsList>\n\n          {/* Sign In Tab */}\n          <TabsContent value=\"sign-in\">\n            <div className=\"flex flex-col gap-4\">\n              {socialButtons.length > 0 && (\n                <div className=\"flex flex-col gap-3\">\n                  {socialButtons.map((btn) => (\n                    <Button\n                      key={btn.id}\n                      variant={btn.variant || \"outline\"}\n                      className=\"flex items-center justify-center gap-2\"\n                      onClick={btn.onClick}\n                    >\n                      <btn.icon /> {btn.label}\n                    </Button>\n                  ))}\n                  <div className=\"flex items-center justify-center my-2 text-gray-400 dark:text-gray-300\">\n                    or\n                  </div>\n                </div>\n              )}\n\n              {signInFields.map((field) => (\n                <div key={field.id}>\n                  <Label htmlFor={field.id}>{field.label}</Label>\n                  <Input\n                    id={field.id}\n                    type={field.type}\n                    placeholder={field.placeholder}\n                    value={signInValues[field.id]}\n                    onChange={(e) => handleChange(e, setSignInValues)}\n                    className=\"mt-1\"\n                  />\n                </div>\n              ))}\n\n              <Button\n                className=\"mt-4 w-full\"\n                onClick={() => onSignIn?.(signInValues)}\n              >\n                Sign In\n              </Button>\n\n              <p className=\"text-center text-sm text-gray-500 dark:text-gray-300 mt-2\">\n                Donâ€™t have an account?{\" \"}\n                <span\n                  className=\"font-medium text-blue-500 cursor-pointer hover:underline\"\n                  onClick={() => setActiveTab(\"sign-up\")}\n                >\n                  Sign Up\n                </span>\n              </p>\n            </div>\n          </TabsContent>\n\n          {/* Sign Up Tab */}\n          <TabsContent value=\"sign-up\">\n            <div className=\"flex flex-col gap-4\">\n              {signUpFields.map((field) => (\n                <div key={field.id}>\n                  <Label htmlFor={field.id}>{field.label}</Label>\n                  <Input\n                    id={field.id}\n                    type={field.type}\n                    placeholder={field.placeholder}\n                    value={signUpValues[field.id]}\n                    onChange={(e) => handleChange(e, setSignUpValues)}\n                    className=\"mt-1\"\n                  />\n                </div>\n              ))}\n\n              <Button\n                className=\"mt-4 w-full\"\n                onClick={() => onSignUp?.(signUpValues)}\n              >\n                Sign Up\n              </Button>\n\n              <p className=\"text-center text-sm text-gray-500 dark:text-gray-300 mt-2\">\n                Already have an account?{\" \"}\n                <span\n                  className=\"font-medium text-blue-500 cursor-pointer hover:underline\"\n                  onClick={() => setActiveTab(\"sign-in\")}\n                >\n                  Sign In\n                </span>\n              </p>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/auth-tabs-card.tsx"
    }
  ]
}