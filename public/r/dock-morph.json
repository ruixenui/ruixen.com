{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dock-morph",
  "type": "registry:ui",
  "title": "Dock Morph",
  "description": "Morphing dock with glassmorphism bubbles and flexible positioning.",
  "dependencies": [
    "framer-motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/dock-morph.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { Home, Search, Bell, User, Settings } from \"lucide-react\";\n\ninterface DockMorphProps {\n  className?: string;\n  items?: {\n    icon: React.ReactNode;\n    label: string;\n    onClick?: () => void;\n  }[];\n  position?: \"bottom\" | \"top\" | \"left\";\n}\n\nexport default function DockMorph({\n  items,\n  className,\n  position = \"bottom\",\n}: DockMorphProps) {\n  const [hovered, setHovered] = React.useState<number | null>(null);\n\n  const dockItems =\n    items && items.length > 0\n      ? items\n      : [\n          {\n            icon: <Home className=\"h-6 w-6\" />,\n            label: \"Home\",\n            onClick: undefined,\n          },\n          {\n            icon: <Search className=\"h-6 w-6\" />,\n            label: \"Search\",\n            onClick: undefined,\n          },\n          {\n            icon: <Bell className=\"h-6 w-6\" />,\n            label: \"Notifications\",\n            onClick: undefined,\n          },\n          {\n            icon: <User className=\"h-6 w-6\" />,\n            label: \"Profile\",\n            onClick: undefined,\n          },\n          {\n            icon: <Settings className=\"h-6 w-6\" />,\n            label: \"Settings\",\n            onClick: undefined,\n          },\n        ];\n\n  // Position classes\n  const positionClasses = {\n    bottom: \"fixed bottom-6 left-1/2 -translate-x-1/2\",\n    top: \"fixed top-6 left-1/2 -translate-x-1/2\",\n    left: \"fixed left-6 top-1/2 -translate-y-1/2 flex-col\",\n  };\n\n  return (\n    <div\n      className={cn(\n        \"z-50 flex items-center justify-center\",\n        positionClasses[position],\n        className,\n      )}\n    >\n      <TooltipProvider delayDuration={100}>\n        <div\n          className={cn(\n            \"relative flex items-center gap-6 p-3 rounded-3xl\",\n            position === \"left\" ? \"flex-col gap-4 px-4 py-8\" : \"flex-row\",\n            \"bg-background/30 backdrop-blur-xl shadow-lg border\",\n            \"dark:border-white/10 border-black/10\",\n          )}\n        >\n          {dockItems.map((item, i) => (\n            <Tooltip key={item.label}>\n              <TooltipTrigger asChild>\n                <div\n                  className=\"relative flex items-center justify-center\"\n                  onMouseEnter={() => setHovered(i)}\n                  onMouseLeave={() => setHovered(null)}\n                >\n                  {/* Morphic glass bubble */}\n                  <AnimatePresence>\n                    {hovered === i && (\n                      <motion.div\n                        initial={{ scale: 0.6, opacity: 0 }}\n                        animate={{ scale: 1.4, opacity: 1 }}\n                        exit={{ scale: 0.6, opacity: 0 }}\n                        transition={{\n                          type: \"spring\",\n                          stiffness: 200,\n                          damping: 20,\n                        }}\n                        className={cn(\n                          \"absolute inset-0 rounded-full -z-10\",\n                          \"bg-gradient-to-tr from-primary/40 via-primary/20 to-transparent\",\n                          \"backdrop-blur-2xl\",\n                          \"shadow-md dark:shadow-primary/20\",\n                        )}\n                      />\n                    )}\n                  </AnimatePresence>\n\n                  {/* Icon button */}\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"relative z-10 rounded-full hover:scale-110 transition-transform\"\n                    onClick={item.onClick}\n                  >\n                    {item.icon}\n                  </Button>\n                </div>\n              </TooltipTrigger>\n              <TooltipContent\n                side={position === \"left\" ? \"right\" : \"top\"}\n                className=\"text-xs\"\n              >\n                {item.label}\n              </TooltipContent>\n            </Tooltip>\n          ))}\n        </div>\n      </TooltipProvider>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/dock-morph.tsx"
    }
  ]
}