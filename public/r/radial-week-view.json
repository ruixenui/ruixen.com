{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "radial-week-view",
  "type": "registry:ui",
  "title": "Radial Week View",
  "description": "Circular week calendar with radial hour markers and event positioning.",
  "dependencies": [
    "date-fns",
    "lucide-react",
    "uuid"
  ],
  "registryDependencies": [
    "card",
    "popover",
    "button",
    "input"
  ],
  "files": [
    {
      "path": "registry/ruixenui/radial-week-view.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n} from \"@/components/ui/popover\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Trash2 } from \"lucide-react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  format,\n  addHours,\n  startOfWeek,\n  eachDayOfInterval,\n  setHours,\n} from \"date-fns\";\n\nexport type CalendarEvent = {\n  id: string;\n  title: string;\n  date: string; // ISO string\n  hour: number;\n};\n\ninterface RadialWeekViewProps {\n  events: CalendarEvent[];\n  onAddEvent: (event: CalendarEvent) => void;\n  onRemoveEvent?: (id: string) => void;\n}\n\nexport function RadialWeekView({\n  events,\n  onAddEvent,\n  onRemoveEvent,\n}: RadialWeekViewProps) {\n  const [selectedDate, setSelectedDate] = React.useState<Date>(new Date());\n  const [newTitle, setNewTitle] = React.useState(\"\");\n  const [newHour, setNewHour] = React.useState<number>(0);\n\n  const startWeek = startOfWeek(selectedDate, { weekStartsOn: 0 }); // Sunday\n  const weekDays = eachDayOfInterval({\n    start: startWeek,\n    end: addHours(startWeek, 24 * 6),\n  });\n\n  const handleAddEvent = () => {\n    if (!newTitle.trim()) return;\n    const eventDate = setHours(selectedDate, newHour);\n    onAddEvent({\n      id: uuidv4(),\n      title: newTitle.trim(),\n      date: eventDate.toISOString(),\n      hour: newHour,\n    });\n    setNewTitle(\"\");\n  };\n\n  const eventsForDay = (date: Date) =>\n    events.filter(\n      (e) =>\n        format(new Date(e.date), \"yyyy-MM-dd\") === format(date, \"yyyy-MM-dd\"),\n    );\n\n  return (\n    <div className=\"space-y-6 flex flex-col items-center\">\n      <div className=\"relative w-[400px] h-[400px] rounded-full border border-gray-300 dark:border-gray-600\">\n        {/* Radial hours */}\n        {[...Array(24)].map((_, hour) => {\n          const angle = (hour / 24) * 360;\n          return (\n            <div\n              key={hour}\n              className=\"absolute w-1 h-3 bg-gray-400 dark:bg-gray-500 top-1/2 left-1/2 origin-bottom\"\n              style={{\n                transform: `rotate(${angle}deg) translateY(-50%)`,\n              }}\n            />\n          );\n        })}\n\n        {/* Events */}\n        {weekDays.map((day) => {\n          const dayEvents = eventsForDay(day);\n          return dayEvents.map((event) => {\n            const angle = (event.hour / 24) * 360;\n            return (\n              <Popover key={event.id}>\n                <PopoverTrigger asChild>\n                  <div\n                    className=\"absolute w-6 h-6 bg-blue-400 dark:bg-blue-600 rounded-full top-1/2 left-1/2 cursor-pointer\"\n                    style={{\n                      transform: `rotate(${angle}deg) translate(150px) rotate(-${angle}deg)`,\n                    }}\n                  />\n                </PopoverTrigger>\n                <PopoverContent className=\"w-48\">\n                  <Card>\n                    <CardContent className=\"flex justify-between items-center p-2 text-sm\">\n                      <span>{event.title}</span>\n                      {onRemoveEvent && (\n                        <Button\n                          variant=\"ghost\"\n                          size=\"icon\"\n                          className=\"h-4 w-4\"\n                          onClick={() => onRemoveEvent(event.id)}\n                        >\n                          <Trash2 className=\"h-3 w-3 text-red-500\" />\n                        </Button>\n                      )}\n                    </CardContent>\n                  </Card>\n                </PopoverContent>\n              </Popover>\n            );\n          });\n        })}\n      </div>\n\n      {/* Add Event */}\n      <div className=\"flex gap-2 items-center\">\n        <Input\n          placeholder=\"Event title\"\n          value={newTitle}\n          onChange={(e) => setNewTitle(e.target.value)}\n        />\n        <Input\n          type=\"number\"\n          min={0}\n          max={23} // restrict hour input to 0-23\n          placeholder=\"Hour (0-23)\"\n          value={newHour}\n          onChange={(e) => {\n            let val = Number(e.target.value);\n            if (val < 0) val = 0;\n            if (val > 23) val = 23;\n            setNewHour(val);\n          }}\n        />\n        <Button onClick={handleAddEvent}>Add Event</Button>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/radial-week-view.tsx"
    }
  ]
}