{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "minimisable-table",
  "type": "registry:ui",
  "title": "Minimisable Table",
  "description": "A table with collapsible columns that can be minimized to icons.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "table",
    "button",
    "dropdown-menu"
  ],
  "files": [
    {
      "path": "registry/ruixenui/minimisable-table.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Check,\n  Mail,\n  MapPin,\n  User,\n  DollarSign,\n  ShieldCheck,\n} from \"lucide-react\";\n\nexport type ColumnKey = string;\n\nexport type ColumnConfig<T> = {\n  key: keyof T;\n  label: string;\n  icon: React.ReactNode;\n  align?: string;\n};\n\nexport type MinimisableTableProps<T> = {\n  data?: T[];\n  columns?: ColumnConfig<T>[];\n  defaultMinimized?: ColumnKey[];\n};\n\nconst defaultData = [\n  {\n    id: \"1\",\n    name: \"Arjun Mehta\",\n    email: \"arjun.mehta@company.com\",\n    location: \"Bangalore, IN\",\n    status: \"Active\",\n    balance: \"$1,250.00\",\n  },\n  {\n    id: \"2\",\n    name: \"Hannah Park\",\n    email: \"hannah.park@company.com\",\n    location: \"Seoul, KR\",\n    status: \"Active\",\n    balance: \"$600.00\",\n  },\n  {\n    id: \"3\",\n    name: \"Oliver Scott\",\n    email: \"oliver.scott@company.com\",\n    location: \"Manchester, UK\",\n    status: \"Inactive\",\n    balance: \"$650.00\",\n  },\n];\n\nconst defaultColumns: ColumnConfig<(typeof defaultData)[0]>[] = [\n  { key: \"name\", label: \"Name\", icon: <User className=\"h-4 w-4\" /> },\n  { key: \"email\", label: \"Email\", icon: <Mail className=\"h-4 w-4\" /> },\n  { key: \"location\", label: \"Location\", icon: <MapPin className=\"h-4 w-4\" /> },\n  { key: \"status\", label: \"Status\", icon: <ShieldCheck className=\"h-4 w-4\" /> },\n  {\n    key: \"balance\",\n    label: \"Balance\",\n    icon: <DollarSign className=\"h-4 w-4\" />,\n    align: \"text-right\",\n  },\n];\n\nexport default function MinimisableTable<T extends { id: string }>({\n  data = defaultData as unknown as T[],\n  columns = defaultColumns as unknown as ColumnConfig<T>[],\n  defaultMinimized = [],\n}: MinimisableTableProps<T>) {\n  const [minimized, setMinimized] =\n    React.useState<ColumnKey[]>(defaultMinimized);\n\n  const toggleMinimise = (col: ColumnKey) => {\n    setMinimized((prev) =>\n      prev.includes(col) ? prev.filter((c) => c !== col) : [...prev, col],\n    );\n  };\n\n  return (\n    <div className=\"w-full space-y-4 px-4 max-w-xl\">\n      {/* Manage Columns Dropdown */}\n      <div className=\"flex justify-end\">\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"outline\" size=\"sm\">\n              Manage Columns\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            {columns.map((col) => (\n              <DropdownMenuItem\n                key={String(col.key)}\n                onClick={() => toggleMinimise(String(col.key))}\n                className=\"flex justify-between\"\n              >\n                <span>\n                  {minimized.includes(String(col.key))\n                    ? `Expand ${col.label}`\n                    : `Minimise ${col.label}`}\n                </span>\n                {minimized.includes(String(col.key)) && (\n                  <Check className=\"h-4 w-4 text-primary\" />\n                )}\n              </DropdownMenuItem>\n            ))}\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n\n      {/* Table */}\n      <Table>\n        <TableHeader>\n          <TableRow>\n            {columns.map((col) => (\n              <TableHead\n                key={String(col.key)}\n                className={`${col.align ?? \"\"} ${\n                  minimized.includes(String(col.key)) ? \"w-12 text-center\" : \"\"\n                }`}\n              >\n                {minimized.includes(String(col.key)) ? col.icon : col.label}\n              </TableHead>\n            ))}\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {data.map((row) => (\n            <TableRow key={row.id}>\n              {columns.map((col) => (\n                <TableCell\n                  key={String(col.key)}\n                  className={`${col.align ?? \"\"} ${\n                    minimized.includes(String(col.key))\n                      ? \"w-12 text-center\"\n                      : \"\"\n                  }`}\n                >\n                  {minimized.includes(String(col.key))\n                    ? col.icon\n                    : (row as any)[col.key]}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/minimisable-table.tsx"
    }
  ]
}