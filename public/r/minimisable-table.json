{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "minimisable-table",
  "type": "registry:ui",
  "title": "Minimisable Table",
  "description": "A table with collapsible columns that can be minimized to icons.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "table",
    "button",
    "dropdown-menu"
  ],
  "files": [
    {
      "path": "registry/ruixenui/minimisable-table.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\";\r\nimport {\r\n  Check,\r\n  Mail,\r\n  MapPin,\r\n  User,\r\n  DollarSign,\r\n  ShieldCheck,\r\n} from \"lucide-react\";\r\n\r\nexport type ColumnKey = string;\r\n\r\nexport type ColumnConfig<T> = {\r\n  key: keyof T;\r\n  label: string;\r\n  icon: React.ReactNode;\r\n  align?: string;\r\n};\r\n\r\nexport type MinimisableTableProps<T> = {\r\n  data?: T[];\r\n  columns?: ColumnConfig<T>[];\r\n  defaultMinimized?: ColumnKey[];\r\n};\r\n\r\nconst defaultData = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Arjun Mehta\",\r\n    email: \"arjun.mehta@company.com\",\r\n    location: \"Bangalore, IN\",\r\n    status: \"Active\",\r\n    balance: \"$1,250.00\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"Hannah Park\",\r\n    email: \"hannah.park@company.com\",\r\n    location: \"Seoul, KR\",\r\n    status: \"Active\",\r\n    balance: \"$600.00\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"Oliver Scott\",\r\n    email: \"oliver.scott@company.com\",\r\n    location: \"Manchester, UK\",\r\n    status: \"Inactive\",\r\n    balance: \"$650.00\",\r\n  },\r\n];\r\n\r\nconst defaultColumns: ColumnConfig<(typeof defaultData)[0]>[] = [\r\n  { key: \"name\", label: \"Name\", icon: <User className=\"h-4 w-4\" /> },\r\n  { key: \"email\", label: \"Email\", icon: <Mail className=\"h-4 w-4\" /> },\r\n  { key: \"location\", label: \"Location\", icon: <MapPin className=\"h-4 w-4\" /> },\r\n  { key: \"status\", label: \"Status\", icon: <ShieldCheck className=\"h-4 w-4\" /> },\r\n  {\r\n    key: \"balance\",\r\n    label: \"Balance\",\r\n    icon: <DollarSign className=\"h-4 w-4\" />,\r\n    align: \"text-right\",\r\n  },\r\n];\r\n\r\nexport default function MinimisableTable<T extends { id: string }>({\r\n  data = defaultData as unknown as T[],\r\n  columns = defaultColumns as unknown as ColumnConfig<T>[],\r\n  defaultMinimized = [],\r\n}: MinimisableTableProps<T>) {\r\n  const [minimized, setMinimized] =\r\n    React.useState<ColumnKey[]>(defaultMinimized);\r\n\r\n  const toggleMinimise = (col: ColumnKey) => {\r\n    setMinimized((prev) =>\r\n      prev.includes(col) ? prev.filter((c) => c !== col) : [...prev, col]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full space-y-4 px-4 max-w-xl\">\r\n      {/* Manage Columns Dropdown */}\r\n      <div className=\"flex justify-end\">\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <Button variant=\"outline\" size=\"sm\">\r\n              Manage Columns\r\n            </Button>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent align=\"end\">\r\n            {columns.map((col) => (\r\n              <DropdownMenuItem\r\n                key={String(col.key)}\r\n                onClick={() => toggleMinimise(String(col.key))}\r\n                className=\"flex justify-between\"\r\n              >\r\n                <span>\r\n                  {minimized.includes(String(col.key))\r\n                    ? `Expand ${col.label}`\r\n                    : `Minimise ${col.label}`}\r\n                </span>\r\n                {minimized.includes(String(col.key)) && (\r\n                  <Check className=\"h-4 w-4 text-primary\" />\r\n                )}\r\n              </DropdownMenuItem>\r\n            ))}\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n      </div>\r\n\r\n      {/* Table */}\r\n      <Table>\r\n        <TableHeader>\r\n          <TableRow>\r\n            {columns.map((col) => (\r\n              <TableHead\r\n                key={String(col.key)}\r\n                className={`${col.align ?? \"\"} ${\r\n                  minimized.includes(String(col.key)) ? \"w-12 text-center\" : \"\"\r\n                }`}\r\n              >\r\n                {minimized.includes(String(col.key)) ? col.icon : col.label}\r\n              </TableHead>\r\n            ))}\r\n          </TableRow>\r\n        </TableHeader>\r\n        <TableBody>\r\n          {data.map((row) => (\r\n            <TableRow key={row.id}>\r\n              {columns.map((col) => (\r\n                <TableCell\r\n                  key={String(col.key)}\r\n                  className={`${col.align ?? \"\"} ${\r\n                    minimized.includes(String(col.key))\r\n                      ? \"w-12 text-center\"\r\n                      : \"\"\r\n                  }`}\r\n                >\r\n                  {minimized.includes(String(col.key))\r\n                    ? col.icon\r\n                    : (row as any)[col.key]}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/minimisable-table.tsx"
    }
  ]
}