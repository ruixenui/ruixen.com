{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tilted-dock",
  "type": "registry:ui",
  "title": "Tilted Dock",
  "description": "3D tilted dock with perspective effects and parallax mouse tracking.",
  "dependencies": [
    "framer-motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/tilted-dock.tsx",
      "content": "\"use client\";\nimport { motion } from \"framer-motion\";\nimport { Home, Search, Bell, User, Settings } from \"lucide-react\";\nimport React, { useState, useEffect } from \"react\";\n\n// ----------------------------\n// Type definitions\n// ----------------------------\nexport interface DockItem {\n  id: number;\n  icon: React.ReactNode;\n  label: string;\n}\n\nexport interface TiltedDockProps {\n  /** Dock items to display */\n  items?: DockItem[];\n  /** Overall tilt of the dock container */\n  tilt?: {\n    baseX?: number; // default: 18 degrees tilt forward\n    maxY?: number; // default: 10 degrees left-right tilt\n  };\n  /** Scale factor for hovered item */\n  hoverScale?: number;\n}\n\n// ----------------------------\n// Default dock items\n// ----------------------------\nconst defaultItems: DockItem[] = [\n  { id: 1, icon: <Home size={28} />, label: \"Home\" },\n  { id: 2, icon: <Search size={28} />, label: \"Search\" },\n  { id: 3, icon: <Bell size={28} />, label: \"Alerts\" },\n  { id: 4, icon: <User size={28} />, label: \"Profile\" },\n  { id: 5, icon: <Settings size={28} />, label: \"Settings\" },\n];\n\n// ----------------------------\n// Component\n// ----------------------------\nconst TiltedDock: React.FC<TiltedDockProps> = ({\n  items = defaultItems,\n  tilt = { baseX: 18, maxY: 10 },\n  hoverScale = 1.4,\n}) => {\n  const [hovered, setHovered] = useState<number | null>(null);\n  const [mouse, setMouse] = useState({ x: 0, y: 0 });\n\n  // Track mouse movement for parallax effect\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      setMouse({\n        x: e.clientX / window.innerWidth - 0.5,\n        y: e.clientY / window.innerHeight - 0.5,\n      });\n    };\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    return () => window.removeEventListener(\"mousemove\", handleMouseMove);\n  }, []);\n\n  return (\n    <div className=\"fixed bottom-10 left-1/2 -translate-x-1/2 z-50\">\n      <motion.div\n        className=\"flex gap-10 px-12 py-6 rounded-3xl \n                   backdrop-blur-2xl bg-white/30 dark:bg-black/30 \n                   border border-white/20 dark:border-white/10 \n                   shadow-[0_15px_40px_rgba(0,0,0,0.35)]\"\n        style={{ transformStyle: \"preserve-3d\" }}\n        animate={{\n          rotateX: tilt.baseX,\n          rotateY: mouse.x * (tilt.maxY ?? 10),\n        }}\n        transition={{ type: \"spring\", stiffness: 80, damping: 20 }}\n      >\n        {items.map((item) => (\n          <motion.div\n            key={item.id}\n            className=\"relative flex flex-col items-center justify-center\"\n            onHoverStart={() => setHovered(item.id)}\n            onHoverEnd={() => setHovered(null)}\n            animate={{\n              scale: hovered === item.id ? hoverScale : 1,\n              z: hovered === item.id ? 120 : hovered ? -20 : 0,\n              opacity: hovered && hovered !== item.id ? 0.5 : 1,\n            }}\n            transition={{ type: \"spring\", stiffness: 200, damping: 18 }}\n            style={{ transformStyle: \"preserve-3d\" }}\n          >\n            {/* Icon */}\n            <motion.div\n              animate={{\n                rotateX: hovered === item.id ? -10 : 0,\n                rotateY: hovered === item.id ? 10 : 0,\n              }}\n              transition={{ type: \"spring\", stiffness: 150, damping: 15 }}\n              className=\"text-gray-900 dark:text-gray-100\"\n            >\n              {item.icon}\n            </motion.div>\n\n            {/* Label */}\n            <motion.span\n              className=\"absolute -bottom-8 text-xs font-medium \n                         text-gray-800 dark:text-gray-200\"\n              animate={{\n                opacity: hovered === item.id ? 1 : 0,\n                y: hovered === item.id ? 0 : 5,\n              }}\n              transition={{ duration: 0.3 }}\n            >\n              {item.label}\n            </motion.span>\n          </motion.div>\n        ))}\n      </motion.div>\n    </div>\n  );\n};\n\nexport default TiltedDock;\n",
      "type": "registry:ui",
      "target": "components/ruixen/tilted-dock.tsx"
    }
  ]
}