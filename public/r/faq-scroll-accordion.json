{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "faq-scroll-accordion",
  "type": "registry:ui",
  "title": "FAQ Scroll Accordion",
  "description": "A scroll-triggered FAQ accordion component with smooth GSAP animations and auto-expanding items.",
  "dependencies": [
    "framer-motion",
    "@radix-ui/react-accordion",
    "lucide-react",
    "gsap",
    "@gsap/react"
  ],
  "files": [
    {
      "path": "registry/ruixenui/faq-scroll-accordion.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { motion } from \"framer-motion\";\nimport * as Accordion from \"@radix-ui/react-accordion\";\nimport { Minus, Plus } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { useGSAP } from \"@gsap/react\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport Link from \"next/link\";\n\ninterface FAQItem {\n  id: number;\n  question: string;\n  answer: string;\n  icon?: string;\n  iconPosition?: \"left\" | \"right\";\n}\n\ninterface FAQScrollAccordionProps {\n  data?: FAQItem[];\n  className?: string;\n  questionClassName?: string;\n  answerClassName?: string;\n}\n\nconst defaultData: FAQItem[] = [\n  {\n    id: 1,\n    question: \"What is Ruixen UI?\",\n    answer:\n      \"Ruixen UI is a sleek and modern UI component library built with React and Tailwind CSS, designed to help developers create beautiful, responsive, and accessible web applications faster.\",\n  },\n  {\n    id: 2,\n    question: \"How do I install Ruixen UI?\",\n    answer:\n      \"You can install Ruixen UI via your terminal using npm or yarn: `npm install ruixenui` or `yarn add ruixenui`.\",\n  },\n  {\n    id: 3,\n    question: \"Is Ruixen UI open-source?\",\n    answer:\n      \"Yes, Ruixen UI is completely open-source and available under the MIT license. Youâ€™re free to use it in both personal and commercial projects.\",\n  },\n  {\n    id: 4,\n    question: \"Where can I find the documentation?\",\n    answer:\n      \"You can find full documentation, usage examples, and component APIs at our official site: docs.ruixenui.com.\",\n  },\n  {\n    id: 5,\n    question: \"Can I contribute to Ruixen UI?\",\n    answer:\n      \"Definitely! Ruixen UI thrives on community support. Visit our GitHub repository to explore contribution guidelines, report issues, or submit pull requests.\",\n  },\n];\n\nexport default function FAQScrollAccordion({\n  data = defaultData,\n  className,\n  questionClassName,\n  answerClassName,\n}: FAQScrollAccordionProps) {\n  const [openItem, setOpenItem] = React.useState<string | null>(null);\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const accordionRefs = React.useRef<Map<string, HTMLDivElement>>(new Map());\n  const contentRefs = React.useRef<Map<string, HTMLDivElement>>(new Map());\n\n  // Register GSAP plugins\n  React.useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      gsap.registerPlugin(ScrollTrigger);\n    }\n  }, []);\n\n  // Set up GSAP animations\n  useGSAP(() => {\n    if (!containerRef.current || data.length === 0) return;\n\n    ScrollTrigger.getAll().forEach((trigger) => trigger.kill());\n\n    const tl = gsap.timeline({\n      scrollTrigger: {\n        trigger: containerRef.current,\n        start: \"top top\",\n        end: `+=${data.length * 200}`,\n        scrub: 0.3,\n        pin: true,\n        markers: false,\n      },\n    });\n\n    data.forEach((item, index) => {\n      const contentRef = contentRefs.current.get(item.id.toString());\n      if (contentRef) {\n        tl.add(() => {\n          setOpenItem(item.id.toString());\n        }, index * 2);\n      }\n    });\n\n    return () => {\n      ScrollTrigger.getAll().forEach((trigger) => trigger.kill());\n    };\n  }, [data]);\n\n  const handleAccordionChange = (value: string) => {\n    setOpenItem(value === openItem ? null : value);\n  };\n\n  return (\n    <div\n      ref={containerRef}\n      className={cn(\"max-w-4xl mx-auto text-center py-16 h-[300vh]\", className)}\n    >\n      <h2 className=\"text-3xl font-bold mb-2\">\n        <Link\n          href=\"https://github.com/ruixenui/ruixen-ui-free-components\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"hover:text-blue-400 transition-colors\"\n        >\n          Frequently Asked Questions\n        </Link>\n      </h2>\n      <p className=\"text-gray-600 dark:text-gray-200 mb-6\">\n        Find answers to common questions about our graphic assets, components,\n        and licensing.\n      </p>\n\n      <Accordion.Root\n        type=\"single\"\n        collapsible\n        value={openItem || \"\"}\n        onValueChange={handleAccordionChange}\n      >\n        {data.map((item) => (\n          <Accordion.Item\n            value={item.id.toString()}\n            key={item.id}\n            className=\"mb-6\"\n          >\n            <div\n              ref={(el) => {\n                if (el) accordionRefs.current.set(item.id.toString(), el);\n              }}\n              data-id={item.id.toString()}\n              className=\"relative\"\n            >\n              <Accordion.Header>\n                <Accordion.Trigger className=\"flex w-full items-center justify-start gap-x-4\">\n                  <div\n                    className={cn(\n                      \"relative flex items-center space-x-2 rounded-xl p-2 transition-colors\",\n                      openItem === item.id.toString()\n                        ? \"bg-primary/20 text-primary\"\n                        : \"bg-muted hover:bg-primary/10\",\n                      questionClassName,\n                    )}\n                  >\n                    {item.icon && (\n                      <span\n                        className={cn(\n                          \"absolute bottom-6\",\n                          item.iconPosition === \"right\" ? \"right-0\" : \"left-0\",\n                        )}\n                        style={{\n                          transform:\n                            item.iconPosition === \"right\"\n                              ? \"rotate(7deg)\"\n                              : \"rotate(-4deg)\",\n                        }}\n                      >\n                        {item.icon}\n                      </span>\n                    )}\n                    <span className=\"font-medium\">{item.question}</span>\n                  </div>\n\n                  <span\n                    className={cn(\n                      \"text-gray-600 dark:text-gray-200\",\n                      openItem === item.id.toString() && \"text-primary\",\n                    )}\n                  >\n                    {openItem === item.id.toString() ? (\n                      <Minus className=\"h-5 w-5\" />\n                    ) : (\n                      <Plus className=\"h-5 w-5\" />\n                    )}\n                  </span>\n                </Accordion.Trigger>\n              </Accordion.Header>\n              <Accordion.Content asChild forceMount>\n                <motion.div\n                  ref={(el) => {\n                    if (el) contentRefs.current.set(item.id.toString(), el);\n                  }}\n                  initial=\"collapsed\"\n                  animate={\n                    openItem === item.id.toString() ? \"open\" : \"collapsed\"\n                  }\n                  variants={{\n                    open: { opacity: 1, height: \"auto\" },\n                    collapsed: { opacity: 0, height: 0 },\n                  }}\n                  transition={{ duration: 0.4 }}\n                  className=\"overflow-hidden\"\n                >\n                  <div className=\"flex justify-end ml-7 mt-4 md:ml-16\">\n                    <div\n                      className={cn(\n                        \"relative max-w-md rounded-2xl px-4 py-2 text-white text-lg !bg-blue-400 dark:!bg-blue-400\",\n                        answerClassName,\n                      )}\n                    >\n                      {item.answer}\n                    </div>\n                  </div>\n                </motion.div>\n              </Accordion.Content>\n            </div>\n          </Accordion.Item>\n        ))}\n      </Accordion.Root>\n    </div>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/faq-scroll-accordion.tsx"
    }
  ]
}