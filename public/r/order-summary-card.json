{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "order-summary-card",
  "type": "registry:ui",
  "title": "Order Summary Card",
  "description": "An order summary card component for e-commerce checkout flows.",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "card"
  ],
  "files": [
    {
      "path": "registry/ruixenui/order-summary-card.tsx",
      "content": "\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { cn } from \"@/lib/utils\";\nimport { Sparkles } from \"lucide-react\";\n\ninterface OrderSummaryCardProps {\n  items?: {\n    label: string;\n    count: number;\n    cost: number;\n  }[];\n  deliveryFee?: number;\n  serviceCharge?: number;\n  coupon?: {\n    label: string;\n    value: number;\n  };\n  onPlaceOrder?: () => void;\n  currency?: string;\n}\n\nconst mockItems = [\n  {\n    label: \"AI Pro Membership\",\n    count: 1,\n    cost: 79.99,\n  },\n];\n\nexport default function OrderSummaryCard({\n  items = mockItems,\n  deliveryFee = 0,\n  serviceCharge = 4.99,\n  coupon = { label: \"NEWUSER\", value: 10 },\n  currency = \"USD\",\n  onPlaceOrder,\n}: OrderSummaryCardProps) {\n  const total = items.reduce((sum, item) => sum + item.count * item.cost, 0);\n  const netAmount = total + serviceCharge + deliveryFee - (coupon?.value ?? 0);\n\n  const formatCurrency = (amount: number) =>\n    new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency,\n    }).format(amount);\n\n  return (\n    <Card\n      className={cn(\n        \"max-w-md w-full p-0 border relative overflow-hidden\",\n        \"bg-white/30 dark:bg-zinc-800/30 backdrop-blur-md\",\n        \"shadow-xl rounded-2xl\",\n      )}\n    >\n      <div className=\"absolute inset-0 bg-gradient-to-br from-white/30 to-zinc-100/10 dark:from-zinc-900/30 dark:to-zinc-800/10 pointer-events-none rounded-2xl z-0\" />\n\n      <CardHeader className=\"relative z-10\">\n        <CardTitle className=\"flex items-center gap-2 text-xl font-bold text-zinc-800 dark:text-zinc-100\">\n          <Sparkles className=\"w-5 h-5 text-yellow-500\" />\n          Order Summary\n        </CardTitle>\n        <p className=\"text-sm text-zinc-600 dark:text-zinc-400\">\n          A clear view of your purchase\n        </p>\n      </CardHeader>\n\n      <CardContent className=\"space-y-6 relative z-10 text-zinc-800 dark:text-zinc-100\">\n        {/* Item List */}\n        <div className=\"space-y-4\">\n          {items.map((item, index) => (\n            <div\n              key={index}\n              className=\"flex justify-between items-center text-sm\"\n            >\n              <div>\n                <p className=\"font-medium\">{item.label}</p>\n                <p className=\"text-zinc-500 dark:text-zinc-400 text-xs\">\n                  {item.count} Ã— {formatCurrency(item.cost)}\n                </p>\n              </div>\n              <p className=\"font-semibold\">\n                {formatCurrency(item.count * item.cost)}\n              </p>\n            </div>\n          ))}\n        </div>\n\n        {/* Charges Breakdown */}\n        <div className=\"space-y-2 text-sm border-t border-zinc-300/30 dark:border-white/20 pt-4\">\n          <div className=\"flex justify-between\">\n            <span>Service</span>\n            <span>{formatCurrency(serviceCharge)}</span>\n          </div>\n          {deliveryFee > 0 && (\n            <div className=\"flex justify-between\">\n              <span>Delivery</span>\n              <span>{formatCurrency(deliveryFee)}</span>\n            </div>\n          )}\n          {coupon && (\n            <div className=\"flex justify-between text-green-600 dark:text-green-400 font-semibold\">\n              <span>Coupon ({coupon.label})</span>\n              <span>-{formatCurrency(coupon.value)}</span>\n            </div>\n          )}\n        </div>\n\n        {/* Total */}\n        <div className=\"flex justify-between text-base font-semibold border-t border-zinc-300/30 dark:border-white/20 pt-4\">\n          <span>Total</span>\n          <span>{formatCurrency(netAmount)}</span>\n        </div>\n\n        {/* Action Button */}\n        <Button\n          onClick={onPlaceOrder}\n          className=\"w-full bg-zinc-900 text-white hover:bg-zinc-800 dark:bg-white dark:text-black dark:hover:bg-white/90 transition-all\"\n        >\n          Checkout\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n",
      "type": "registry:ui",
      "target": "components/ruixen/order-summary-card.tsx"
    }
  ]
}