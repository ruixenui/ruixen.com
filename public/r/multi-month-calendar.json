{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "multi-month-calendar",
  "type": "registry:ui",
  "title": "Multi Month Calendar",
  "description": "A calendar component that displays multiple months with year/month dropdowns and range selection support.",
  "dependencies": [
    "react-day-picker",
    "date-fns",
    "lucide-react"
  ],
  "registryDependencies": [
    "select"
  ],
  "files": [
    {
      "path": "registry/ruixenui/multi-month-calendar.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { DayPicker, DateRange, CustomComponents } from \"react-day-picker\";\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\n\r\ntype MultiMonthCalendarBaseProps = {\r\n  numberOfMonths?: number;\r\n  showOutsideDays?: boolean;\r\n  className?: string;\r\n};\r\n\r\ntype MultiMonthCalendarSingleProps = MultiMonthCalendarBaseProps & {\r\n  mode: \"single\";\r\n  selected?: Date | undefined;\r\n  onSelect?: (date: Date | undefined) => void;\r\n};\r\n\r\ntype MultiMonthCalendarRangeProps = MultiMonthCalendarBaseProps & {\r\n  mode: \"range\";\r\n  selected?: DateRange | undefined;\r\n  onSelect?: (date: DateRange | undefined) => void;\r\n};\r\n\r\nexport type MultiMonthCalendarProps =\r\n  | MultiMonthCalendarSingleProps\r\n  | MultiMonthCalendarRangeProps;\r\n\r\nfunction MultiMonthCalendar({\r\n  numberOfMonths = 2,\r\n  mode = \"single\",\r\n  selected,\r\n  onSelect,\r\n  showOutsideDays = true,\r\n  className,\r\n}: MultiMonthCalendarProps) {\r\n  const today = new Date();\r\n  const currentYear = today.getFullYear();\r\n  const currentMonth = today.getMonth();\r\n\r\n  // âœ… Default select = today\r\n  const defaultSelected =\r\n    selected ?? (mode === \"range\" ? { from: today, to: today } : today);\r\n\r\n  const defaultComponents: Partial<CustomComponents> = {\r\n    IconLeft: () => <ChevronLeft className=\"h-4 w-4\" />,\r\n    IconRight: () => <ChevronRight className=\"h-4 w-4\" />,\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-4\">\r\n      {/* Year / Month dropdowns */}\r\n      <div className=\"flex justify-center gap-2\">\r\n        <Select defaultValue={String(currentYear)}>\r\n          <SelectTrigger className=\"w-[120px]\">\r\n            <SelectValue />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            {Array.from({ length: 5 }).map((_, idx) => {\r\n              const year = currentYear - 2 + idx;\r\n              return (\r\n                <SelectItem key={year} value={String(year)}>\r\n                  {year}\r\n                </SelectItem>\r\n              );\r\n            })}\r\n          </SelectContent>\r\n        </Select>\r\n        <Select defaultValue={String(currentMonth)}>\r\n          <SelectTrigger className=\"w-[120px]\">\r\n            <SelectValue />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            {Array.from({ length: 12 }).map((_, idx) => (\r\n              <SelectItem key={idx} value={String(idx)}>\r\n                {new Date(0, idx).toLocaleString(\"default\", { month: \"long\" })}\r\n              </SelectItem>\r\n            ))}\r\n          </SelectContent>\r\n        </Select>\r\n      </div>\r\n\r\n      {/* Calendar */}\r\n      <DayPicker\r\n        mode={mode as any}\r\n        numberOfMonths={numberOfMonths}\r\n        selected={defaultSelected as any}\r\n        onSelect={onSelect as any}\r\n        showOutsideDays={showOutsideDays}\r\n        className={cn(\r\n          \"rounded-lg border border-border bg-background p-2 w-fit\",\r\n          className\r\n        )}\r\n        components={defaultComponents}\r\n        classNames={{\r\n          root: \"p-2\",\r\n          months: \"flex flex-col sm:flex-row gap-6\",\r\n          month: \"flex flex-col gap-2\",\r\n          caption_label: \"text-sm font-medium text-center mb-2\",\r\n          nav: \"flex justify-between mb-2\",\r\n          nav_button:\r\n            \"hover:bg-black/10 dark:hover:bg-white/10 rounded-md p-1 transition\",\r\n          table: \"w-full border-separate border-spacing-0\",\r\n          head_row: \"text-xs font-medium text-muted-foreground/80\",\r\n          head_cell: \"text-xs font-medium text-muted-foreground/80\",\r\n          day: \"group size-9 px-0 text-sm\",\r\n          button:\r\n            \"relative flex size-9 items-center justify-center rounded-md text-sm hover:bg-black/10 focus:outline-none focus-visible:ring-1 focus-visible:ring-black\",\r\n          day_selected: \"bg-black text-white dark:bg-white dark:text-black rounded-md\",\r\n          day_range_start: \"rounded-l-md bg-black text-white\",\r\n          day_range_end: \"rounded-r-md bg-black text-white\",\r\n          day_range_middle: \"bg-gray-200 text-black dark:bg-neutral-700 dark:text-white\",\r\n          day_today:\r\n            \"after:absolute after:bottom-1 after:left-1/2 after:-translate-x-1/2 after:w-1.5 after:h-1.5 after:rounded-full after:bg-black dark:after:bg-white\",\r\n          day_disabled: \"text-muted-foreground/30 line-through pointer-events-none\",\r\n          day_outside: \"text-muted-foreground/30\",\r\n        }}\r\n      />\r\n\r\n      {/* Credits */}\r\n      <p className=\"text-xs text-muted-foreground text-center mt-2\">\r\n        Powered by{\" \"}\r\n        <a\r\n          href=\"https://www.ruixen.com/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"underline hover:text-foreground\"\r\n        >\r\n          ruixen.com\r\n        </a>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nMultiMonthCalendar.displayName = \"MultiMonthCalendar\";\r\n\r\nexport { MultiMonthCalendar };\r\n",
      "type": "registry:ui",
      "target": "components/ruixen/multi-month-calendar.tsx"
    }
  ]
}