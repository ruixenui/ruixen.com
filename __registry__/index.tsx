/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react";

export const Index: Record<string, any> = {
  index: {
    name: "index",
    description: "",
    type: "registry:style",
    registryDependencies: ["utils"],
    files: [],
    component: null,
    meta: undefined,
  },
  "staggered-faq-section": {
    name: "staggered-faq-section",
    description:
      "A responsive FAQ component with animated text reveals and customizable content.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/staggered-faq-section.tsx",
        type: "registry:ui",
        target: "components/ruixen/staggered-faq-section.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/staggered-faq-section.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "animated-theme-toggler": {
    name: "animated-theme-toggler",
    description: "A component for theme changing animation.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/animated-theme-toggler.tsx",
        type: "registry:ui",
        target: "components/ruixen/animated-theme-toggler.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/animated-theme-toggler.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-highlights": {
    name: "feature-highlights",
    description:
      "A responsive feature highlights component with expandable accordion sections and images.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/feature-highlights.tsx",
        type: "registry:ui",
        target: "components/ruixen/feature-highlights.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/feature-highlights.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "faq-scroll-accordion": {
    name: "faq-scroll-accordion",
    description:
      "A scroll-triggered FAQ accordion component with smooth GSAP animations and auto-expanding items.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/faq-scroll-accordion.tsx",
        type: "registry:ui",
        target: "components/ruixen/faq-scroll-accordion.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/faq-scroll-accordion.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "faq-auto-accordion": {
    name: "faq-auto-accordion",
    description:
      "A scroll-triggered FAQ accordion component with smooth GSAP animations and auto-expanding items.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/faq-auto-accordion.tsx",
        type: "registry:ui",
        target: "components/ruixen/faq-auto-accordion.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/faq-auto-accordion.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "compact-accordion": {
    name: "compact-accordion",
    description:
      "A clean and minimal accordion component with icons and smooth animations for organizing content in collapsible sections.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/compact-accordion.tsx",
        type: "registry:ui",
        target: "components/ruixen/compact-accordion.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/compact-accordion.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "aurora-hero-section": {
    name: "aurora-hero-section",
    description:
      "A beautiful hero section with aurora-style background effects and animated elements",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/aurora-hero-section.tsx",
        type: "registry:ui",
        target: "components/ruixen/aurora-hero-section.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/aurora-hero-section.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "card-carousel-hero": {
    name: "card-carousel-hero",
    description:
      "An interactive hero section featuring a card carousel with smooth animations",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/card-carousel-hero.tsx",
        type: "registry:ui",
        target: "components/ruixen/card-carousel-hero.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/card-carousel-hero.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "gradient-hero-showcase": {
    name: "gradient-hero-showcase",
    description:
      "A modern hero section with animated gradient background and smooth transitions",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/gradient-hero-showcase.tsx",
        type: "registry:ui",
        target: "components/ruixen/gradient-hero-showcase.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/gradient-hero-showcase.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "spectrum-hero-section": {
    name: "spectrum-hero-section",
    description:
      "A vibrant hero section with spectrum color effects and dynamic animations",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/spectrum-hero-section.tsx",
        type: "registry:ui",
        target: "components/ruixen/spectrum-hero-section.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/spectrum-hero-section.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "video-hero-showcase": {
    name: "video-hero-showcase",
    description:
      "A dynamic hero section featuring video backgrounds and interactive elements",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/video-hero-showcase.tsx",
        type: "registry:ui",
        target: "components/ruixen/video-hero-showcase.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/video-hero-showcase.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "visionary-hero-section": {
    name: "visionary-hero-section",
    description:
      "A visionary hero section with elegant design and smooth animations",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/visionary-hero-section.tsx",
        type: "registry:ui",
        target: "components/ruixen/visionary-hero-section.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/visionary-hero-section.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "featured-highlights": {
    name: "featured-highlights",
    description:
      "Interactive feature showcase with image preview and hover effects",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/featured-highlights.tsx",
        type: "registry:ui",
        target: "components/ruixen/featured-highlights.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/featured-highlights.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-grid-section": {
    name: "feature-grid-section",
    description: "Grid layout showcasing features with icons and descriptions",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/feature-grid-section.tsx",
        type: "registry:ui",
        target: "components/ruixen/feature-grid-section.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/feature-grid-section.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-tabs-showcase": {
    name: "feature-tabs-showcase",
    description:
      "Interactive tabs with animated background and feature showcase",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/feature-tabs-showcase.tsx",
        type: "registry:ui",
        target: "components/ruixen/feature-tabs-showcase.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/feature-tabs-showcase.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "composite-feature-showcase": {
    name: "composite-feature-showcase",
    description: "Complex dashboard layout with map, charts, and feature cards",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/composite-feature-showcase.tsx",
        type: "registry:ui",
        target: "components/ruixen/composite-feature-showcase.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/composite-feature-showcase.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "integration-and-stats-section": {
    name: "integration-and-stats-section",
    description:
      "Integration showcase with testimonials, stats, and card stack",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/integration-and-stats-section.tsx",
        type: "registry:ui",
        target: "components/ruixen/integration-and-stats-section.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/integration-and-stats-section.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "tech-orbit-showcase": {
    name: "tech-orbit-showcase",
    description:
      "Animated orbital showcase with rotating tech icons and call-to-action",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/tech-orbit-showcase.tsx",
        type: "registry:ui",
        target: "components/ruixen/tech-orbit-showcase.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/tech-orbit-showcase.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "partner-integrations-grid": {
    name: "partner-integrations-grid",
    description: "Grid showcase of partner integrations with octagonal design",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/partner-integrations-grid.tsx",
        type: "registry:ui",
        target: "components/ruixen/partner-integrations-grid.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/partner-integrations-grid.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "analytics-dashboard-stats": {
    name: "analytics-dashboard-stats",
    description:
      "Analytics dashboard with statistics and area chart visualization",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/analytics-dashboard-stats.tsx",
        type: "registry:ui",
        target: "components/ruixen/analytics-dashboard-stats.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/analytics-dashboard-stats.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "ruixen-dashboard-stats": {
    name: "ruixen-dashboard-stats",
    description:
      "Dashboard stats with animated counter and chart visualization",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/ruixen-dashboard-stats.tsx",
        type: "registry:ui",
        target: "components/ruixen/ruixen-dashboard-stats.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/ruixen-dashboard-stats.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-carousel": {
    name: "feature-carousel",
    description:
      "Interactive carousel showcasing dashboard features with auto-rotation",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/feature-carousel.tsx",
        type: "registry:ui",
        target: "components/ruixen/feature-carousel.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/feature-carousel.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "crm-insights-panel": {
    name: "crm-insights-panel",
    description: "CRM dashboard with video preview and feature showcase grid",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/crm-insights-panel.tsx",
        type: "registry:ui",
        target: "components/ruixen/crm-insights-panel.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/crm-insights-panel.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "multi-orbit-semi-circle": {
    name: "multi-orbit-semi-circle",
    description: "Multi-layered semi-circular orbit animation with tech icons",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/multi-orbit-semi-circle.tsx",
        type: "registry:ui",
        target: "components/ruixen/multi-orbit-semi-circle.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/multi-orbit-semi-circle.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "rotating-gradient-right": {
    name: "rotating-gradient-right",
    description: "Rotating conic gradient animation with centered card content",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/rotating-gradient-right.tsx",
        type: "registry:ui",
        target: "components/ruixen/rotating-gradient-right.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/rotating-gradient-right.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "automated-tasks-panel": {
    name: "automated-tasks-panel",
    description: "Animated task panel with scrolling automation features",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/automated-tasks-panel.tsx",
        type: "registry:ui",
        target: "components/ruixen/automated-tasks-panel.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/automated-tasks-panel.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "case-studies": {
    name: "case-studies",
    description:
      "Customer case studies with metrics, testimonials, and success stories",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/case-studies.tsx",
        type: "registry:ui",
        target: "components/ruixen/case-studies.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/case-studies.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "trusted-clients-showcase": {
    name: "trusted-clients-showcase",
    description: "Showcase trusted clients with logos in a clean grid layout",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/trusted-clients-showcase.tsx",
        type: "registry:ui",
        target: "components/ruixen/trusted-clients-showcase.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/trusted-clients-showcase.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "client-carousel-showcase": {
    name: "client-carousel-showcase",
    description:
      "Interactive carousel showcasing client logos with navigation controls",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/client-carousel-showcase.tsx",
        type: "registry:ui",
        target: "components/ruixen/client-carousel-showcase.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/client-carousel-showcase.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "auto-scrolling-client-carousel": {
    name: "auto-scrolling-client-carousel",
    description:
      "Automatically scrolling carousel showcasing client logos with infinite loop",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/auto-scrolling-client-carousel.tsx",
        type: "registry:ui",
        target: "components/ruixen/auto-scrolling-client-carousel.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/auto-scrolling-client-carousel.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-pro": {
    name: "footer-pro",
    description:
      "A professional footer component with logo, description, contact info, social links, and organized column sections.",
    type: "registry:ui",
    registryDependencies: ["button", "card"],
    files: [
      {
        path: "registry/ruixenui/footer-pro.tsx",
        type: "registry:ui",
        target: "components/ruixen/footer-pro.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/footer-pro.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "corporate-footer": {
    name: "corporate-footer",
    description:
      "A corporate-style footer with comprehensive navigation and company information.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/corporate-footer.tsx",
        type: "registry:ui",
        target: "components/ruixen/corporate-footer.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/corporate-footer.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-extended": {
    name: "footer-extended",
    description:
      "An extended footer layout with multiple sections and comprehensive information.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/footer-extended.tsx",
        type: "registry:ui",
        target: "components/ruixen/footer-extended.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/footer-extended.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-enterprise": {
    name: "footer-enterprise",
    description:
      "An enterprise-grade footer with advanced features and comprehensive navigation.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/footer-enterprise.tsx",
        type: "registry:ui",
        target: "components/ruixen/footer-enterprise.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/footer-enterprise.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-mega": {
    name: "footer-mega",
    description:
      "A mega footer with extensive navigation and multiple content sections.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/footer-mega.tsx",
        type: "registry:ui",
        target: "components/ruixen/footer-mega.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/footer-mega.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "hover-gradient-navbar": {
    name: "hover-gradient-navbar",
    description:
      "A navigation bar with gradient hover effects and smooth transitions.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/hover-gradient-navbar.tsx",
        type: "registry:ui",
        target: "components/ruixen/hover-gradient-navbar.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/hover-gradient-navbar.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "floating-navbar": {
    name: "floating-navbar",
    description:
      "A floating navigation bar that appears on scroll with smooth animations.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/floating-navbar.tsx",
        type: "registry:ui",
        target: "components/ruixen/floating-navbar.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/floating-navbar.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "luma-bar": {
    name: "luma-bar",
    description:
      "A sleek navigation bar with Luma-inspired design and interactions.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/luma-bar.tsx",
        type: "registry:ui",
        target: "components/ruixen/luma-bar.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/luma-bar.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "promote-header": {
    name: "promote-header",
    description:
      "A promotional header component for announcements and marketing messages.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/promote-header.tsx",
        type: "registry:ui",
        target: "components/ruixen/promote-header.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/promote-header.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-plans": {
    name: "pricing-plans",
    description:
      "A comprehensive pricing plans component with multiple tiers and features.",
    type: "registry:ui",
    registryDependencies: ["button", "card"],
    files: [
      {
        path: "registry/ruixenui/pricing-plans.tsx",
        type: "registry:ui",
        target: "components/ruixen/pricing-plans.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/pricing-plans.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-comparison": {
    name: "pricing-comparison",
    description:
      "A detailed pricing comparison table with features and plan differences.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/pricing-comparison.tsx",
        type: "registry:ui",
        target: "components/ruixen/pricing-comparison.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/pricing-comparison.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "subscription-plans": {
    name: "subscription-plans",
    description:
      "A subscription-focused pricing component with billing options and features.",
    type: "registry:ui",
    registryDependencies: ["button", "card"],
    files: [
      {
        path: "registry/ruixenui/subscription-plans.tsx",
        type: "registry:ui",
        target: "components/ruixen/subscription-plans.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/subscription-plans.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-flow": {
    name: "pricing-flow",
    description:
      "An interactive pricing flow with billing toggles and plan selection.",
    type: "registry:ui",
    registryDependencies: ["button", "card"],
    files: [
      {
        path: "registry/ruixenui/pricing-flow.tsx",
        type: "registry:ui",
        target: "components/ruixen/pricing-flow.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/pricing-flow.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-with-user-scaling": {
    name: "pricing-with-user-scaling",
    description:
      "A pricing component with user-based scaling and dynamic pricing calculations.",
    type: "registry:ui",
    registryDependencies: ["button", "card", "slider"],
    files: [
      {
        path: "registry/ruixenui/pricing-with-user-scaling.tsx",
        type: "registry:ui",
        target: "components/ruixen/pricing-with-user-scaling.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/pricing-with-user-scaling.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "testimonial-tabs": {
    name: "testimonial-tabs",
    description:
      "An interactive testimonial component with tabbed navigation and smooth transitions.",
    type: "registry:ui",
    registryDependencies: ["tabs"],
    files: [
      {
        path: "registry/ruixenui/testimonial-tabs.tsx",
        type: "registry:ui",
        target: "components/ruixen/testimonial-tabs.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/testimonial-tabs.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "slide-to-delete-button": {
    name: "slide-to-delete-button",
    description:
      "A draggable button that requires sliding to confirm deletion action.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/slide-to-delete-button.tsx",
        type: "registry:ui",
        target: "components/ruixen/slide-to-delete-button.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/slide-to-delete-button.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "glow-link-button": {
    name: "glow-link-button",
    description:
      "A button with a subtle glow effect and animated arrow on hover.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/glow-link-button.tsx",
        type: "registry:ui",
        target: "components/ruixen/glow-link-button.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/glow-link-button.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "theme-cycle-button": {
    name: "theme-cycle-button",
    description:
      "A button that cycles through different theme modes with smooth transitions.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/theme-cycle-button.tsx",
        type: "registry:ui",
        target: "components/ruixen/theme-cycle-button.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/theme-cycle-button.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "morphing-github-button": {
    name: "morphing-github-button",
    description:
      "A GitHub button that morphs between different states with animations.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/morphing-github-button.tsx",
        type: "registry:ui",
        target: "components/ruixen/morphing-github-button.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/morphing-github-button.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "circular-stepper-input": {
    name: "circular-stepper-input",
    description:
      "A circular input component with increment/decrement functionality.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/circular-stepper-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/circular-stepper-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/circular-stepper-input.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "password-strength-input": {
    name: "password-strength-input",
    description:
      "A password input with real-time strength validation and visual feedback.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/password-strength-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/password-strength-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/password-strength-input.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "otp-input": {
    name: "otp-input",
    description:
      "A one-time password input component with individual digit fields.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/otp-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/otp-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/otp-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "color-picker-input": {
    name: "color-picker-input",
    description:
      "A color picker component with opacity control and copy functionality.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/color-picker-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/color-picker-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/color-picker-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "gravatar-email-input": {
    name: "gravatar-email-input",
    description: "An email input that displays Gravatar avatar preview.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/gravatar-email-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/gravatar-email-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/gravatar-email-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "correct-number-input": {
    name: "correct-number-input",
    description: "A number input with validation and correction features.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/correct-number-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/correct-number-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/correct-number-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "better-time-picker": {
    name: "better-time-picker",
    description: "An enhanced time picker with improved user experience.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/better-time-picker.tsx",
        type: "registry:ui",
        target: "components/ruixen/better-time-picker.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/better-time-picker.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "inline-copy-input": {
    name: "inline-copy-input",
    description: "An input field with inline copy-to-clipboard functionality.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/inline-copy-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/inline-copy-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/inline-copy-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "clean-tag-input": {
    name: "clean-tag-input",
    description:
      "A clean and minimal tag input component for adding multiple values.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/clean-tag-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/clean-tag-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/clean-tag-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "search-with-category": {
    name: "search-with-category",
    description:
      "A search input component with category filtering functionality.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/search-with-category.tsx",
        type: "registry:ui",
        target: "components/ruixen/search-with-category.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/search-with-category.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "advanced-context-menu": {
    name: "advanced-context-menu",
    description:
      "An advanced context menu component with nested items and keyboard navigation.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/advanced-context-menu.tsx",
        type: "registry:ui",
        target: "components/ruixen/advanced-context-menu.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/advanced-context-menu.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "nested-dashboard-menu": {
    name: "nested-dashboard-menu",
    description: "A nested navigation menu component for dashboard layouts.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/nested-dashboard-menu.tsx",
        type: "registry:ui",
        target: "components/ruixen/nested-dashboard-menu.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/nested-dashboard-menu.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "drawer-inner-content": {
    name: "drawer-inner-content",
    description: "A drawer component with customizable inner content layout.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/drawer-inner-content.tsx",
        type: "registry:ui",
        target: "components/ruixen/drawer-inner-content.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/drawer-inner-content.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "centered-feedback-drawer": {
    name: "centered-feedback-drawer",
    description:
      "A centered drawer component designed for feedback collection.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/centered-feedback-drawer.tsx",
        type: "registry:ui",
        target: "components/ruixen/centered-feedback-drawer.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/centered-feedback-drawer.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "bottom-drawers": {
    name: "bottom-drawers",
    description:
      "A bottom drawer component that slides up from the bottom of the screen.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/bottom-drawers.tsx",
        type: "registry:ui",
        target: "components/ruixen/bottom-drawers.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/bottom-drawers.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "social-card": {
    name: "social-card",
    description:
      "A social media style card component with engagement features.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/social-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/social-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/social-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "portfolio-card": {
    name: "portfolio-card",
    description:
      "A professional portfolio card component showcasing skills and profile.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/portfolio-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/portfolio-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/portfolio-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "team-project-card": {
    name: "team-project-card",
    description:
      "A collaborative project card showing team members and milestones.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/team-project-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/team-project-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/team-project-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "collab-chat-card": {
    name: "collab-chat-card",
    description:
      "A collaborative chat interface card with participant filtering.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/collab-chat-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/collab-chat-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/collab-chat-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "goal-tracker-card": {
    name: "goal-tracker-card",
    description:
      "An activity and goal tracking card with progress visualization.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/goal-tracker-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/goal-tracker-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/goal-tracker-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "environment-card": {
    name: "environment-card",
    description:
      "A smart home environment control card with device management.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/environment-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/environment-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/environment-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "schedule-card": {
    name: "schedule-card",
    description:
      "A schedule card component displaying daily events and meetings.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/schedule-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/schedule-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/schedule-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "showcase-card": {
    name: "showcase-card",
    description:
      "A showcase card component for displaying projects and portfolios.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/showcase-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/showcase-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/showcase-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "order-summary-card": {
    name: "order-summary-card",
    description:
      "An order summary card component for e-commerce checkout flows.",
    type: "registry:ui",
    registryDependencies: ["button", "card"],
    files: [
      {
        path: "registry/ruixenui/order-summary-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/order-summary-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/order-summary-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "doctor-profile-card": {
    name: "doctor-profile-card",
    description: "A doctor profile card component for healthcare applications.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/doctor-profile-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/doctor-profile-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/doctor-profile-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "gradient-blob-card": {
    name: "gradient-blob-card",
    description: "An animated gradient blob card with glassmorphism effects.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/gradient-blob-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/gradient-blob-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/gradient-blob-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "idea-generator-card": {
    name: "idea-generator-card",
    description:
      "An AI-powered idea generator card with input and action buttons.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/idea-generator-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/idea-generator-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/idea-generator-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "input-with-select": {
    name: "input-with-select",
    description:
      "A modern input field with an integrated select dropdown for currency or unit selection.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/input-with-select.tsx",
        type: "registry:ui",
        target: "components/ruixen/input-with-select.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/input-with-select.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "range-slider-input": {
    name: "range-slider-input",
    description:
      "A dual-range slider with numeric inputs and increment/decrement controls.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/range-slider-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/range-slider-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/range-slider-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "url-input": {
    name: "url-input",
    description:
      "A smart URL input field that automatically displays website favicons.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/url-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/url-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/url-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "floating-input": {
    name: "floating-input",
    description:
      "A modern input field with floating label animation and icon support.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/floating-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/floating-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/floating-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "time-with-icon": {
    name: "time-with-icon",
    description:
      "A time input field with dynamic icons that change based on the selected time.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/time-with-icon.tsx",
        type: "registry:ui",
        target: "components/ruixen/time-with-icon.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/time-with-icon.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "otp-field": {
    name: "otp-field",
    description:
      "A customizable OTP (One-Time Password) input field with auto-focus and paste support.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/otp-field.tsx",
        type: "registry:ui",
        target: "components/ruixen/otp-field.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/otp-field.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "modern-card-input": {
    name: "modern-card-input",
    description:
      "A sophisticated credit card input with real-time validation and card type detection.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/modern-card-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/modern-card-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/modern-card-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "password-field": {
    name: "password-field",
    description:
      "An advanced password input with strength meter, validation checklist, and password generation.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/password-field.tsx",
        type: "registry:ui",
        target: "components/ruixen/password-field.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/password-field.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "smart-assist-input": {
    name: "smart-assist-input",
    description:
      "An intelligent input field with history tracking, validation, and quick actions.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/smart-assist-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/smart-assist-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/smart-assist-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "action-hub-input": {
    name: "action-hub-input",
    description:
      "A versatile input field with customizable action buttons and status indicators.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/action-hub-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/action-hub-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/action-hub-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "smart-notify-button": {
    name: "smart-notify-button",
    description:
      "A button component that triggers customizable toast notifications with actions and different types.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/smart-notify-button.tsx",
        type: "registry:ui",
        target: "components/ruixen/smart-notify-button.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/smart-notify-button.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notification-badge": {
    name: "notification-badge",
    description:
      "A notification badge component with animated count display and different notification types.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/notification-badge.tsx",
        type: "registry:ui",
        target: "components/ruixen/notification-badge.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/notification-badge.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notifications-popover": {
    name: "notifications-popover",
    description:
      "A dropdown menu component for displaying notifications with different types and read states.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/notifications-popover.tsx",
        type: "registry:ui",
        target: "components/ruixen/notifications-popover.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/notifications-popover.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  notification: {
    name: "notification",
    description:
      "A clean notification popover component with title, description, and timestamp display.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/notification.tsx",
        type: "registry:ui",
        target: "components/ruixen/notification.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/notification.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notification-alt": {
    name: "notification-alt",
    description:
      "An enhanced notification component with info tooltips, clickable links, and different notification types.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/notification-alt.tsx",
        type: "registry:ui",
        target: "components/ruixen/notification-alt.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/notification-alt.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notifications-with-actions": {
    name: "notifications-with-actions",
    description:
      "Interactive notification component with swipe-to-reveal actions like archive and delete.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/notifications-with-actions.tsx",
        type: "registry:ui",
        target: "components/ruixen/notifications-with-actions.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/notifications-with-actions.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notifications-carousel": {
    name: "notifications-carousel",
    description:
      "A carousel-style notification component that displays one notification at a time with navigation controls.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/notifications-carousel.tsx",
        type: "registry:ui",
        target: "components/ruixen/notifications-carousel.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/notifications-carousel.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notification-toggle": {
    name: "notification-toggle",
    description:
      "A versatile notification component that toggles between carousel and list view modes.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/notification-toggle.tsx",
        type: "registry:ui",
        target: "components/ruixen/notification-toggle.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/notification-toggle.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notifications-filter": {
    name: "notifications-filter",
    description:
      "A notification component with category filtering to organize notifications by type.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/notifications-filter.tsx",
        type: "registry:ui",
        target: "components/ruixen/notifications-filter.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/notifications-filter.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "avatar-notifications": {
    name: "avatar-notifications",
    description:
      "A notification component that displays user avatars with messages and animated status indicators.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/avatar-notifications.tsx",
        type: "registry:ui",
        target: "components/ruixen/avatar-notifications.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/avatar-notifications.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "sign-in-form": {
    name: "sign-in-form",
    description:
      "A professional sign-in form with email/password fields and social login options.",
    type: "registry:ui",
    registryDependencies: ["button", "input", "label", "checkbox", "card"],
    files: [
      {
        path: "registry/ruixenui/sign-in-form.tsx",
        type: "registry:ui",
        target: "components/ruixen/sign-in-form.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/sign-in-form.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "create-account-form": {
    name: "create-account-form",
    description:
      "A modern account creation form with validation and terms acceptance.",
    type: "registry:ui",
    registryDependencies: ["button", "input", "label", "card"],
    files: [
      {
        path: "registry/ruixenui/create-account-form.tsx",
        type: "registry:ui",
        target: "components/ruixen/create-account-form.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/create-account-form.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "newsletter-form": {
    name: "newsletter-form",
    description: "A simple newsletter subscription form with success state.",
    type: "registry:ui",
    registryDependencies: ["button", "input", "label", "card"],
    files: [
      {
        path: "registry/ruixenui/newsletter-form.tsx",
        type: "registry:ui",
        target: "components/ruixen/newsletter-form.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/newsletter-form.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "sign-in-card": {
    name: "sign-in-card",
    description:
      "A Microsoft-inspired sign-in card with clean design and branding.",
    type: "registry:ui",
    registryDependencies: ["button", "input", "card"],
    files: [
      {
        path: "registry/ruixenui/sign-in-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/sign-in-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/sign-in-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "job-card": {
    name: "job-card",
    description:
      "A professional job listing card with company info and action buttons.",
    type: "registry:ui",
    registryDependencies: ["button", "card", "avatar"],
    files: [
      {
        path: "registry/ruixenui/job-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/job-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/job-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "cookie-notice": {
    name: "cookie-notice",
    description:
      "A GDPR-compliant cookie consent notice with customizable preferences.",
    type: "registry:ui",
    registryDependencies: ["button", "card"],
    files: [
      {
        path: "registry/ruixenui/cookie-notice.tsx",
        type: "registry:ui",
        target: "components/ruixen/cookie-notice.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/cookie-notice.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "file-tree-manager": {
    name: "file-tree-manager",
    description:
      "A comprehensive file tree component with CRUD operations and management features.",
    type: "registry:ui",
    registryDependencies: ["button", "input", "card", "tooltip"],
    files: [
      {
        path: "registry/ruixenui/file-tree-manager.tsx",
        type: "registry:ui",
        target: "components/ruixen/file-tree-manager.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/file-tree-manager.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "motion-file-tree": {
    name: "motion-file-tree",
    description:
      "An animated file tree component with smooth expand/collapse transitions.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/motion-file-tree.tsx",
        type: "registry:ui",
        target: "components/ruixen/motion-file-tree.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/motion-file-tree.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "magic-tree": {
    name: "magic-tree",
    description:
      "A magical file tree with sparkle effects and interactive animations.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/magic-tree.tsx",
        type: "registry:ui",
        target: "components/ruixen/magic-tree.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/magic-tree.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "tree-node-tooltip": {
    name: "tree-node-tooltip",
    description: "A file tree component with tooltip support for each node.",
    type: "registry:ui",
    registryDependencies: ["tooltip"],
    files: [
      {
        path: "registry/ruixenui/tree-node-tooltip.tsx",
        type: "registry:ui",
        target: "components/ruixen/tree-node-tooltip.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/tree-node-tooltip.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "sortable-table": {
    name: "sortable-table",
    description:
      "A sortable and filterable data table with search functionality.",
    type: "registry:ui",
    registryDependencies: ["table", "input", "button", "badge"],
    files: [
      {
        path: "registry/ruixenui/sortable-table.tsx",
        type: "registry:ui",
        target: "components/ruixen/sortable-table.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/sortable-table.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "table-edit": {
    name: "table-edit",
    description:
      "An editable table component with inline editing and dropdown menus.",
    type: "registry:ui",
    registryDependencies: [
      "table",
      "checkbox",
      "badge",
      "button",
      "dropdown-menu",
      "input",
      "select",
    ],
    files: [
      {
        path: "registry/ruixenui/table-edit.tsx",
        type: "registry:ui",
        target: "components/ruixen/table-edit.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/table-edit.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "table-with-dialog": {
    name: "table-with-dialog",
    description: "A data table with row details shown in a dialog modal.",
    type: "registry:ui",
    registryDependencies: ["table", "checkbox", "button", "dialog", "badge"],
    files: [
      {
        path: "registry/ruixenui/table-with-dialog.tsx",
        type: "registry:ui",
        target: "components/ruixen/table-with-dialog.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/table-with-dialog.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "fixed-header-footer-table": {
    name: "fixed-header-footer-table",
    description: "A table with fixed header and footer, and scrollable body.",
    type: "registry:ui",
    registryDependencies: ["table"],
    files: [
      {
        path: "registry/ruixenui/fixed-header-footer-table.tsx",
        type: "registry:ui",
        target: "components/ruixen/fixed-header-footer-table.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/fixed-header-footer-table.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "date-time-picker": {
    name: "date-time-picker",
    description: "A date and time picker with calendar and time selection.",
    type: "registry:ui",
    registryDependencies: ["popover", "button", "calendar", "select"],
    files: [
      {
        path: "registry/ruixenui/date-time-picker.tsx",
        type: "registry:ui",
        target: "components/ruixen/date-time-picker.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/date-time-picker.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "date-range-picker": {
    name: "date-range-picker",
    description: "A date range picker with dual calendar view.",
    type: "registry:ui",
    registryDependencies: ["button", "calendar", "popover"],
    files: [
      {
        path: "registry/ruixenui/date-range-picker.tsx",
        type: "registry:ui",
        target: "components/ruixen/date-range-picker.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/date-range-picker.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "monthly-heatmap-calendar": {
    name: "monthly-heatmap-calendar",
    description: "A monthly calendar with event heatmap visualization.",
    type: "registry:ui",
    registryDependencies: [
      "card",
      "button",
      "popover",
      "input",
      "select",
      "badge",
    ],
    files: [
      {
        path: "registry/ruixenui/monthly-heatmap-calendar.tsx",
        type: "registry:ui",
        target: "components/ruixen/monthly-heatmap-calendar.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/monthly-heatmap-calendar.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "event-scheduler": {
    name: "event-scheduler",
    description:
      "A full-featured event scheduler with event creation and management.",
    type: "registry:ui",
    registryDependencies: [
      "button",
      "calendar",
      "popover",
      "select",
      "input",
      "card",
    ],
    files: [
      {
        path: "registry/ruixenui/event-scheduler.tsx",
        type: "registry:ui",
        target: "components/ruixen/event-scheduler.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/event-scheduler.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  scheduler: {
    name: "scheduler",
    description: "A simple event scheduler with calendar integration.",
    type: "registry:ui",
    registryDependencies: [
      "button",
      "popover",
      "calendar",
      "card",
      "label",
      "select",
    ],
    files: [
      {
        path: "registry/ruixenui/scheduler.tsx",
        type: "registry:ui",
        target: "components/ruixen/scheduler.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/scheduler.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "daily-timeline-scheduler": {
    name: "daily-timeline-scheduler",
    description: "A timeline-based daily scheduler with time slot management.",
    type: "registry:ui",
    registryDependencies: ["card", "button", "popover", "input", "select"],
    files: [
      {
        path: "registry/ruixenui/daily-timeline-scheduler.tsx",
        type: "registry:ui",
        target: "components/ruixen/daily-timeline-scheduler.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/daily-timeline-scheduler.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "image-cropper": {
    name: "image-cropper",
    description: "An image cropping tool with zoom and aspect ratio controls.",
    type: "registry:ui",
    registryDependencies: ["button", "select", "slider", "card", "input"],
    files: [
      {
        path: "registry/ruixenui/image-cropper.tsx",
        type: "registry:ui",
        target: "components/ruixen/image-cropper.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/image-cropper.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "advanced-image-uploader": {
    name: "advanced-image-uploader",
    description: "A drag-and-drop image uploader with cropping functionality.",
    type: "registry:ui",
    registryDependencies: ["card", "button"],
    files: [
      {
        path: "registry/ruixenui/advanced-image-uploader.tsx",
        type: "registry:ui",
        target: "components/ruixen/advanced-image-uploader.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/advanced-image-uploader.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "reorderable-table": {
    name: "reorderable-table",
    description:
      "A feature-rich table with column reordering, visibility toggle, and search functionality.",
    type: "registry:ui",
    registryDependencies: ["table", "button", "checkbox", "popover", "input"],
    files: [
      {
        path: "registry/ruixenui/reorderable-table.tsx",
        type: "registry:ui",
        target: "components/ruixen/reorderable-table.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/reorderable-table.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "comparison-table": {
    name: "comparison-table",
    description:
      "A comparison table with filtering, search, and side-by-side item comparison.",
    type: "registry:ui",
    registryDependencies: ["table", "card", "button", "input", "select"],
    files: [
      {
        path: "registry/ruixenui/comparison-table.tsx",
        type: "registry:ui",
        target: "components/ruixen/comparison-table.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/comparison-table.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "flexi-filter-table": {
    name: "flexi-filter-table",
    description:
      "A flexible table with multiple filter options including date range, balance, and location.",
    type: "registry:ui",
    registryDependencies: [
      "table",
      "checkbox",
      "button",
      "input",
      "badge",
      "dropdown-menu",
      "calendar",
      "popover",
    ],
    files: [
      {
        path: "registry/ruixenui/flexi-filter-table.tsx",
        type: "registry:ui",
        target: "components/ruixen/flexi-filter-table.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/flexi-filter-table.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "table-dialog": {
    name: "table-dialog",
    description:
      "An editable table with dialog-based editing and row selection.",
    type: "registry:ui",
    registryDependencies: [
      "table",
      "checkbox",
      "badge",
      "button",
      "dropdown-menu",
      "dialog",
      "input",
      "select",
    ],
    files: [
      {
        path: "registry/ruixenui/table-dialog.tsx",
        type: "registry:ui",
        target: "components/ruixen/table-dialog.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/table-dialog.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "minimisable-table": {
    name: "minimisable-table",
    description:
      "A table with collapsible columns that can be minimized to icons.",
    type: "registry:ui",
    registryDependencies: ["table", "button", "dropdown-menu"],
    files: [
      {
        path: "registry/ruixenui/minimisable-table.tsx",
        type: "registry:ui",
        target: "components/ruixen/minimisable-table.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/minimisable-table.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "inline-analytics-table": {
    name: "inline-analytics-table",
    description:
      "A table with inline analytics including progress bars and trend indicators.",
    type: "registry:ui",
    registryDependencies: ["table", "progress"],
    files: [
      {
        path: "registry/ruixenui/inline-analytics-table.tsx",
        type: "registry:ui",
        target: "components/ruixen/inline-analytics-table.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/inline-analytics-table.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "column-collaboration-table": {
    name: "column-collaboration-table",
    description:
      "A collaborative table with column-level comments and annotations.",
    type: "registry:ui",
    registryDependencies: [
      "table",
      "button",
      "popover",
      "input",
      "scroll-area",
    ],
    files: [
      {
        path: "registry/ruixenui/column-collaboration-table.tsx",
        type: "registry:ui",
        target: "components/ruixen/column-collaboration-table.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/column-collaboration-table.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "video-player-pro": {
    name: "video-player-pro",
    description:
      "A professional video player with custom controls, playback speed, and fullscreen support.",
    type: "registry:ui",
    registryDependencies: ["button", "popover", "slider"],
    files: [
      {
        path: "registry/ruixenui/video-player-pro.tsx",
        type: "registry:ui",
        target: "components/ruixen/video-player-pro.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/video-player-pro.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "hover-play-card": {
    name: "hover-play-card",
    description:
      "A video card that plays on hover with manual play/pause controls.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/hover-play-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/hover-play-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/hover-play-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "wave-background": {
    name: "wave-background",
    description:
      "A flowing wave background with WebGL shaders and theme support.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/wave-background.tsx",
        type: "registry:ui",
        target: "components/ruixen/wave-background.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/wave-background.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "aurora-flow": {
    name: "aurora-flow",
    description:
      "A beautiful aurora-style background with flowing gradients and noise effects.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/aurora-flow.tsx",
        type: "registry:ui",
        target: "components/ruixen/aurora-flow.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/aurora-flow.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "aurora-waves": {
    name: "aurora-waves",
    description:
      "Aurora-style waves with customizable speed, glow, and theme support.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/aurora-waves.tsx",
        type: "registry:ui",
        target: "components/ruixen/aurora-waves.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/aurora-waves.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "falling-symbols-background": {
    name: "falling-symbols-background",
    description:
      "A Matrix-style falling symbols background with customizable characters and effects.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/falling-symbols-background.tsx",
        type: "registry:ui",
        target: "components/ruixen/falling-symbols-background.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/falling-symbols-background.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "spotlight-background": {
    name: "spotlight-background",
    description: "A mouse-following spotlight effect with smooth animations.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/spotlight-background.tsx",
        type: "registry:ui",
        target: "components/ruixen/spotlight-background.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/spotlight-background.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "ripple-distortion": {
    name: "ripple-distortion",
    description:
      "An interactive image distortion effect with mouse-driven ripples using Three.js.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/ripple-distortion.tsx",
        type: "registry:ui",
        target: "components/ruixen/ripple-distortion.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/ripple-distortion.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "particle-field": {
    name: "particle-field",
    description:
      "An interactive particle field with mouse attraction and connection lines.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/particle-field.tsx",
        type: "registry:ui",
        target: "components/ruixen/particle-field.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/particle-field.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "rain-background": {
    name: "rain-background",
    description: "A neon rain effect with animated streaks and glow orbs.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/rain-background.tsx",
        type: "registry:ui",
        target: "components/ruixen/rain-background.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/rain-background.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "dual-tone-rain-background": {
    name: "dual-tone-rain-background",
    description:
      "A sophisticated rain effect with dual-tone teal-cyan colors and grid overlay.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/dual-tone-rain-background.tsx",
        type: "registry:ui",
        target: "components/ruixen/dual-tone-rain-background.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/dual-tone-rain-background.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "staggered-faq-section-demo": {
    name: "staggered-faq-section-demo",
    description:
      "Example showing a responsive FAQ component with animated text reveals.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/staggered-faq-section"],
    files: [
      {
        path: "registry/example/staggered-faq-section-demo.tsx",
        type: "registry:example",
        target: "components/staggered-faq-section-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/staggered-faq-section-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-highlights-demo": {
    name: "feature-highlights-demo",
    description:
      "Example showing a responsive FAQ component with animated text reveals.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/feature-highlights"],
    files: [
      {
        path: "registry/example/feature-highlights-demo.tsx",
        type: "registry:example",
        target: "components/feature-highlights-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/feature-highlights-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "faq-scroll-accordion-demo": {
    name: "faq-scroll-accordion-demo",
    description:
      "Example showing a scroll-triggered FAQ accordion component with smooth GSAP animations and auto-expanding items.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/faq-scroll-accordion"],
    files: [
      {
        path: "registry/example/faq-scroll-accordion-demo.tsx",
        type: "registry:example",
        target: "components/faq-scroll-accordion-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/faq-scroll-accordion-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "faq-auto-accordion-demo": {
    name: "faq-auto-accordion-demo",
    description:
      "Example showing a scroll-triggered FAQ accordion component with smooth GSAP animations and auto-expanding items.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/faq-auto-accordion"],
    files: [
      {
        path: "registry/example/faq-auto-accordion-demo.tsx",
        type: "registry:example",
        target: "components/faq-auto-accordion-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/faq-auto-accordion-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "compact-accordion-demo": {
    name: "compact-accordion-demo",
    description:
      "Example showing a compact accordion component with icons and smooth animations.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/compact-accordion"],
    files: [
      {
        path: "registry/example/compact-accordion-demo.tsx",
        type: "registry:example",
        target: "components/compact-accordion-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/compact-accordion-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "animated-theme-toggler-demo": {
    name: "animated-theme-toggler-demo",
    description: "Example showing animation while changing the theme.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/animated-theme-toggler"],
    files: [
      {
        path: "registry/example/animated-theme-toggler-demo.tsx",
        type: "registry:example",
        target: "components/animated-theme-toggler-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/animated-theme-toggler-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "aurora-hero-section-demo": {
    name: "aurora-hero-section-demo",
    description:
      "Example showing a beautiful hero section with aurora-style background effects",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/aurora-hero-section"],
    files: [
      {
        path: "registry/example/aurora-hero-section-demo.tsx",
        type: "registry:example",
        target: "components/aurora-hero-section-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/aurora-hero-section-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "card-carousel-hero-demo": {
    name: "card-carousel-hero-demo",
    description:
      "Example showing an interactive hero section with card carousel",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/card-carousel-hero"],
    files: [
      {
        path: "registry/example/card-carousel-hero-demo.tsx",
        type: "registry:example",
        target: "components/card-carousel-hero-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/card-carousel-hero-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "gradient-hero-showcase-demo": {
    name: "gradient-hero-showcase-demo",
    description:
      "Example showing a modern hero section with animated gradient background",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/gradient-hero-showcase"],
    files: [
      {
        path: "registry/example/gradient-hero-showcase-demo.tsx",
        type: "registry:example",
        target: "components/gradient-hero-showcase-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/gradient-hero-showcase-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "spectrum-hero-section-demo": {
    name: "spectrum-hero-section-demo",
    description:
      "Example showing a vibrant hero section with spectrum color effects",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/spectrum-hero-section"],
    files: [
      {
        path: "registry/example/spectrum-hero-section-demo.tsx",
        type: "registry:example",
        target: "components/spectrum-hero-section-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/spectrum-hero-section-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "video-hero-showcase-demo": {
    name: "video-hero-showcase-demo",
    description:
      "Example showing a dynamic hero section with video backgrounds",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/video-hero-showcase"],
    files: [
      {
        path: "registry/example/video-hero-showcase-demo.tsx",
        type: "registry:example",
        target: "components/video-hero-showcase-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/video-hero-showcase-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "visionary-hero-section-demo": {
    name: "visionary-hero-section-demo",
    description: "Example showing a visionary hero section with elegant design",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/visionary-hero-section"],
    files: [
      {
        path: "registry/example/visionary-hero-section-demo.tsx",
        type: "registry:example",
        target: "components/visionary-hero-section-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/visionary-hero-section-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "featured-highlights-demo": {
    name: "featured-highlights-demo",
    description: "Example of interactive feature showcase with image preview",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/featured-highlights"],
    files: [
      {
        path: "registry/example/featured-highlights-demo.tsx",
        type: "registry:example",
        target: "components/featured-highlights-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/featured-highlights-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-grid-section-demo": {
    name: "feature-grid-section-demo",
    description: "Example of grid layout showcasing features with icons",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/feature-grid-section"],
    files: [
      {
        path: "registry/example/feature-grid-section-demo.tsx",
        type: "registry:example",
        target: "components/feature-grid-section-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/feature-grid-section-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-tabs-showcase-demo": {
    name: "feature-tabs-showcase-demo",
    description: "Example of interactive tabs with animated background",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/feature-tabs-showcase"],
    files: [
      {
        path: "registry/example/feature-tabs-showcase-demo.tsx",
        type: "registry:example",
        target: "components/feature-tabs-showcase-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/feature-tabs-showcase-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "composite-feature-showcase-demo": {
    name: "composite-feature-showcase-demo",
    description: "Example of complex dashboard layout with map and charts",
    type: "registry:example",
    registryDependencies: [
      "https://www.ruixen.com/r/composite-feature-showcase",
    ],
    files: [
      {
        path: "registry/example/composite-feature-showcase-demo.tsx",
        type: "registry:example",
        target: "components/composite-feature-showcase-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/composite-feature-showcase-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "integration-and-stats-section-demo": {
    name: "integration-and-stats-section-demo",
    description: "Example of integration showcase with testimonials and stats",
    type: "registry:example",
    registryDependencies: [
      "https://www.ruixen.com/r/integration-and-stats-section",
    ],
    files: [
      {
        path: "registry/example/integration-and-stats-section-demo.tsx",
        type: "registry:example",
        target: "components/integration-and-stats-section-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/integration-and-stats-section-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "tech-orbit-showcase-demo": {
    name: "tech-orbit-showcase-demo",
    description:
      "Example of animated orbital showcase with rotating tech icons",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/tech-orbit-showcase"],
    files: [
      {
        path: "registry/example/tech-orbit-showcase-demo.tsx",
        type: "registry:example",
        target: "components/tech-orbit-showcase-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/tech-orbit-showcase-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "partner-integrations-grid-demo": {
    name: "partner-integrations-grid-demo",
    description: "Example of grid showcase with partner integrations",
    type: "registry:example",
    registryDependencies: [
      "https://www.ruixen.com/r/partner-integrations-grid",
    ],
    files: [
      {
        path: "registry/example/partner-integrations-grid-demo.tsx",
        type: "registry:example",
        target: "components/partner-integrations-grid-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/partner-integrations-grid-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "analytics-dashboard-stats-demo": {
    name: "analytics-dashboard-stats-demo",
    description: "Example of analytics dashboard with statistics and charts",
    type: "registry:example",
    registryDependencies: [
      "https://www.ruixen.com/r/analytics-dashboard-stats",
    ],
    files: [
      {
        path: "registry/example/analytics-dashboard-stats-demo.tsx",
        type: "registry:example",
        target: "components/analytics-dashboard-stats-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/analytics-dashboard-stats-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "ruixen-dashboard-stats-demo": {
    name: "ruixen-dashboard-stats-demo",
    description: "Example of dashboard stats with animated counter and chart",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/ruixen-dashboard-stats"],
    files: [
      {
        path: "registry/example/ruixen-dashboard-stats-demo.tsx",
        type: "registry:example",
        target: "components/ruixen-dashboard-stats-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/ruixen-dashboard-stats-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-carousel-demo": {
    name: "feature-carousel-demo",
    description:
      "Example of interactive carousel showcasing dashboard features",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/feature-carousel"],
    files: [
      {
        path: "registry/example/feature-carousel-demo.tsx",
        type: "registry:example",
        target: "components/feature-carousel-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/feature-carousel-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "crm-insights-panel-demo": {
    name: "crm-insights-panel-demo",
    description: "Example of CRM dashboard with video preview and feature grid",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/crm-insights-panel"],
    files: [
      {
        path: "registry/example/crm-insights-panel-demo.tsx",
        type: "registry:example",
        target: "components/crm-insights-panel-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/crm-insights-panel-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "multi-orbit-semi-circle-demo": {
    name: "multi-orbit-semi-circle-demo",
    description: "Example of multi-layered semi-circular orbit animation",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/multi-orbit-semi-circle"],
    files: [
      {
        path: "registry/example/multi-orbit-semi-circle-demo.tsx",
        type: "registry:example",
        target: "components/multi-orbit-semi-circle-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/multi-orbit-semi-circle-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "rotating-gradient-right-demo": {
    name: "rotating-gradient-right-demo",
    description:
      "Example of rotating conic gradient animation with centered card",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/rotating-gradient-right"],
    files: [
      {
        path: "registry/example/rotating-gradient-right-demo.tsx",
        type: "registry:example",
        target: "components/rotating-gradient-right-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/rotating-gradient-right-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "automated-tasks-panel-demo": {
    name: "automated-tasks-panel-demo",
    description:
      "Example of animated task panel with scrolling automation features",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/automated-tasks-panel"],
    files: [
      {
        path: "registry/example/automated-tasks-panel-demo.tsx",
        type: "registry:example",
        target: "components/automated-tasks-panel-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/automated-tasks-panel-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "case-studies-demo": {
    name: "case-studies-demo",
    description:
      "Example of customer case studies with metrics and testimonials",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/case-studies"],
    files: [
      {
        path: "registry/example/case-studies-demo.tsx",
        type: "registry:example",
        target: "components/case-studies-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/case-studies-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "trusted-clients-showcase-demo": {
    name: "trusted-clients-showcase-demo",
    description:
      "Example of trusted clients showcase with logos in grid layout",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/trusted-clients-showcase"],
    files: [
      {
        path: "registry/example/trusted-clients-showcase-demo.tsx",
        type: "registry:example",
        target: "components/trusted-clients-showcase-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/trusted-clients-showcase-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "client-carousel-showcase-demo": {
    name: "client-carousel-showcase-demo",
    description: "Example of interactive carousel showcasing client logos",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/client-carousel-showcase"],
    files: [
      {
        path: "registry/example/client-carousel-showcase-demo.tsx",
        type: "registry:example",
        target: "components/client-carousel-showcase-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/client-carousel-showcase-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "auto-scrolling-client-carousel-demo": {
    name: "auto-scrolling-client-carousel-demo",
    description:
      "Example of automatically scrolling carousel with client logos",
    type: "registry:example",
    registryDependencies: [
      "https://www.ruixen.com/r/auto-scrolling-client-carousel",
    ],
    files: [
      {
        path: "registry/example/auto-scrolling-client-carousel-demo.tsx",
        type: "registry:example",
        target: "components/auto-scrolling-client-carousel-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/auto-scrolling-client-carousel-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-pro-demo": {
    name: "footer-pro-demo",
    description: "Example of a professional footer with comprehensive sections",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/footer-pro"],
    files: [
      {
        path: "registry/example/footer-pro-demo.tsx",
        type: "registry:example",
        target: "components/footer-pro-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/footer-pro-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "corporate-footer-demo": {
    name: "corporate-footer-demo",
    description: "Example of a corporate-style footer component",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/corporate-footer"],
    files: [
      {
        path: "registry/example/corporate-footer-demo.tsx",
        type: "registry:example",
        target: "components/corporate-footer-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/corporate-footer-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-extended-demo": {
    name: "footer-extended-demo",
    description: "Example of an extended footer with multiple sections",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/footer-extended"],
    files: [
      {
        path: "registry/example/footer-extended-demo.tsx",
        type: "registry:example",
        target: "components/footer-extended-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/footer-extended-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-enterprise-demo": {
    name: "footer-enterprise-demo",
    description: "Example of an enterprise-grade footer component",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/footer-enterprise"],
    files: [
      {
        path: "registry/example/footer-enterprise-demo.tsx",
        type: "registry:example",
        target: "components/footer-enterprise-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/footer-enterprise-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-mega-demo": {
    name: "footer-mega-demo",
    description: "Example of a mega footer with extensive navigation",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/footer-mega"],
    files: [
      {
        path: "registry/example/footer-mega-demo.tsx",
        type: "registry:example",
        target: "components/footer-mega-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/footer-mega-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "hover-gradient-navbar-demo": {
    name: "hover-gradient-navbar-demo",
    description: "Example of a navigation bar with gradient hover effects",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/hover-gradient-navbar"],
    files: [
      {
        path: "registry/example/hover-gradient-navbar-demo.tsx",
        type: "registry:example",
        target: "components/hover-gradient-navbar-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/hover-gradient-navbar-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "floating-navbar-demo": {
    name: "floating-navbar-demo",
    description: "Example of a floating navigation bar with scroll animations",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/floating-navbar"],
    files: [
      {
        path: "registry/example/floating-navbar-demo.tsx",
        type: "registry:example",
        target: "components/floating-navbar-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/floating-navbar-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "luma-bar-demo": {
    name: "luma-bar-demo",
    description: "Example of a Luma-inspired navigation bar",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/luma-bar"],
    files: [
      {
        path: "registry/example/luma-bar-demo.tsx",
        type: "registry:example",
        target: "components/luma-bar-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/luma-bar-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "promote-header-demo": {
    name: "promote-header-demo",
    description: "Example of a promotional header component",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/promote-header"],
    files: [
      {
        path: "registry/example/promote-header-demo.tsx",
        type: "registry:example",
        target: "components/promote-header-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/promote-header-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-plans-demo": {
    name: "pricing-plans-demo",
    description: "Example of comprehensive pricing plans with multiple tiers",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/pricing-plans"],
    files: [
      {
        path: "registry/example/pricing-plans-demo.tsx",
        type: "registry:example",
        target: "components/pricing-plans-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/pricing-plans-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-comparison-demo": {
    name: "pricing-comparison-demo",
    description: "Example of a detailed pricing comparison table",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/pricing-comparison"],
    files: [
      {
        path: "registry/example/pricing-comparison-demo.tsx",
        type: "registry:example",
        target: "components/pricing-comparison-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/pricing-comparison-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "subscription-plans-demo": {
    name: "subscription-plans-demo",
    description: "Example of subscription-focused pricing component",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/subscription-plans"],
    files: [
      {
        path: "registry/example/subscription-plans-demo.tsx",
        type: "registry:example",
        target: "components/subscription-plans-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/subscription-plans-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-flow-demo": {
    name: "pricing-flow-demo",
    description: "Example of interactive pricing flow with billing toggles",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/pricing-flow"],
    files: [
      {
        path: "registry/example/pricing-flow-demo.tsx",
        type: "registry:example",
        target: "components/pricing-flow-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/pricing-flow-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-with-user-scaling-demo": {
    name: "pricing-with-user-scaling-demo",
    description: "Example of pricing component with user-based scaling",
    type: "registry:example",
    registryDependencies: [
      "https://www.ruixen.com/r/pricing-with-user-scaling",
    ],
    files: [
      {
        path: "registry/example/pricing-with-user-scaling-demo.tsx",
        type: "registry:example",
        target: "components/pricing-with-user-scaling-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/pricing-with-user-scaling-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "testimonial-tabs-demo": {
    name: "testimonial-tabs-demo",
    description: "Example of interactive testimonial component with tabs",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/testimonial-tabs"],
    files: [
      {
        path: "registry/example/testimonial-tabs-demo.tsx",
        type: "registry:example",
        target: "components/testimonial-tabs-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/testimonial-tabs-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "slide-to-delete-button-demo": {
    name: "slide-to-delete-button-demo",
    description:
      "Example showing a draggable button that requires sliding to confirm deletion action.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/slide-to-delete-button"],
    files: [
      {
        path: "registry/example/slide-to-delete-button-demo.tsx",
        type: "registry:example",
        target: "components/slide-to-delete-button-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/slide-to-delete-button-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "glow-link-button-demo": {
    name: "glow-link-button-demo",
    description:
      "Example showing a button with a subtle glow effect and animated arrow on hover.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/glow-link-button"],
    files: [
      {
        path: "registry/example/glow-link-button-demo.tsx",
        type: "registry:example",
        target: "components/glow-link-button-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/glow-link-button-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "theme-cycle-button-demo": {
    name: "theme-cycle-button-demo",
    description:
      "Example showing a button that cycles through different theme modes with smooth transitions.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/theme-cycle-button"],
    files: [
      {
        path: "registry/example/theme-cycle-button-demo.tsx",
        type: "registry:example",
        target: "components/theme-cycle-button-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/theme-cycle-button-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "morphing-github-button-demo": {
    name: "morphing-github-button-demo",
    description:
      "Example showing a GitHub button that morphs between different states with animations.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/morphing-github-button"],
    files: [
      {
        path: "registry/example/morphing-github-button-demo.tsx",
        type: "registry:example",
        target: "components/morphing-github-button-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/morphing-github-button-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "circular-stepper-input-demo": {
    name: "circular-stepper-input-demo",
    description:
      "Example showing a circular input component with increment/decrement functionality.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/circular-stepper-input"],
    files: [
      {
        path: "registry/example/circular-stepper-input-demo.tsx",
        type: "registry:example",
        target: "components/circular-stepper-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/circular-stepper-input-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "password-strength-input-demo": {
    name: "password-strength-input-demo",
    description:
      "Example showing a password input with real-time strength validation and visual feedback.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/password-strength-input"],
    files: [
      {
        path: "registry/example/password-strength-input-demo.tsx",
        type: "registry:example",
        target: "components/password-strength-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/password-strength-input-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "otp-input-demo": {
    name: "otp-input-demo",
    description:
      "Example showing a one-time password input component with individual digit fields.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/otp-input"],
    files: [
      {
        path: "registry/example/otp-input-demo.tsx",
        type: "registry:example",
        target: "components/otp-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/otp-input-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "color-picker-input-demo": {
    name: "color-picker-input-demo",
    description:
      "Example showing a color picker component with opacity control and copy functionality.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/color-picker-input"],
    files: [
      {
        path: "registry/example/color-picker-input-demo.tsx",
        type: "registry:example",
        target: "components/color-picker-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/color-picker-input-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "gravatar-email-input-demo": {
    name: "gravatar-email-input-demo",
    description:
      "Example showing an email input that displays Gravatar avatar preview.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/gravatar-email-input"],
    files: [
      {
        path: "registry/example/gravatar-email-input-demo.tsx",
        type: "registry:example",
        target: "components/gravatar-email-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/gravatar-email-input-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "correct-number-input-demo": {
    name: "correct-number-input-demo",
    description:
      "Example showing a number input with validation and correction features.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/correct-number-input"],
    files: [
      {
        path: "registry/example/correct-number-input-demo.tsx",
        type: "registry:example",
        target: "components/correct-number-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/correct-number-input-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "better-time-picker-demo": {
    name: "better-time-picker-demo",
    description:
      "Example showing an enhanced time picker with improved user experience.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/better-time-picker"],
    files: [
      {
        path: "registry/example/better-time-picker-demo.tsx",
        type: "registry:example",
        target: "components/better-time-picker-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/better-time-picker-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "inline-copy-input-demo": {
    name: "inline-copy-input-demo",
    description:
      "Example showing an input field with inline copy-to-clipboard functionality.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/inline-copy-input"],
    files: [
      {
        path: "registry/example/inline-copy-input-demo.tsx",
        type: "registry:example",
        target: "components/inline-copy-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/inline-copy-input-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "clean-tag-input-demo": {
    name: "clean-tag-input-demo",
    description:
      "Example showing a clean and minimal tag input component for adding multiple values.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/clean-tag-input"],
    files: [
      {
        path: "registry/example/clean-tag-input-demo.tsx",
        type: "registry:example",
        target: "components/clean-tag-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/clean-tag-input-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "search-with-category-demo": {
    name: "search-with-category-demo",
    description:
      "Example showing a search input component with category filtering functionality.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/search-with-category"],
    files: [
      {
        path: "registry/example/search-with-category-demo.tsx",
        type: "registry:example",
        target: "components/search-with-category-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/search-with-category-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "advanced-context-menu-demo": {
    name: "advanced-context-menu-demo",
    description:
      "Example showing an advanced context menu component with nested items and keyboard navigation.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/advanced-context-menu"],
    files: [
      {
        path: "registry/example/advanced-context-menu-demo.tsx",
        type: "registry:example",
        target: "components/advanced-context-menu-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/advanced-context-menu-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "nested-dashboard-menu-demo": {
    name: "nested-dashboard-menu-demo",
    description:
      "Example showing a nested navigation menu component for dashboard layouts.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/nested-dashboard-menu"],
    files: [
      {
        path: "registry/example/nested-dashboard-menu-demo.tsx",
        type: "registry:example",
        target: "components/nested-dashboard-menu-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/nested-dashboard-menu-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "drawer-inner-content-demo": {
    name: "drawer-inner-content-demo",
    description:
      "Example showing a drawer component with customizable inner content layout.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/drawer-inner-content"],
    files: [
      {
        path: "registry/example/drawer-inner-content-demo.tsx",
        type: "registry:example",
        target: "components/drawer-inner-content-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/drawer-inner-content-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "centered-feedback-drawer-demo": {
    name: "centered-feedback-drawer-demo",
    description:
      "Example showing a centered drawer component designed for feedback collection.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/centered-feedback-drawer"],
    files: [
      {
        path: "registry/example/centered-feedback-drawer-demo.tsx",
        type: "registry:example",
        target: "components/centered-feedback-drawer-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/centered-feedback-drawer-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "bottom-drawers-demo": {
    name: "bottom-drawers-demo",
    description:
      "Example showing a bottom drawer component that slides up from the bottom of the screen.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/bottom-drawers"],
    files: [
      {
        path: "registry/example/bottom-drawers-demo.tsx",
        type: "registry:example",
        target: "components/bottom-drawers-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/bottom-drawers-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "social-card-demo": {
    name: "social-card-demo",
    description:
      "Example showing a social media style card component with engagement features.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/social-card"],
    files: [
      {
        path: "registry/example/social-card-demo.tsx",
        type: "registry:example",
        target: "components/social-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/social-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "portfolio-card-demo": {
    name: "portfolio-card-demo",
    description:
      "Example showing a professional portfolio card component showcasing skills and profile.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/portfolio-card"],
    files: [
      {
        path: "registry/example/portfolio-card-demo.tsx",
        type: "registry:example",
        target: "components/portfolio-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/portfolio-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "team-project-card-demo": {
    name: "team-project-card-demo",
    description:
      "Example showing a collaborative project card with team members and milestones.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/team-project-card"],
    files: [
      {
        path: "registry/example/team-project-card-demo.tsx",
        type: "registry:example",
        target: "components/team-project-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/team-project-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "collab-chat-card-demo": {
    name: "collab-chat-card-demo",
    description:
      "Example showing a collaborative chat interface card with participant filtering.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/collab-chat-card"],
    files: [
      {
        path: "registry/example/collab-chat-card-demo.tsx",
        type: "registry:example",
        target: "components/collab-chat-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/collab-chat-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "goal-tracker-card-demo": {
    name: "goal-tracker-card-demo",
    description:
      "Example showing an activity and goal tracking card with progress visualization.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/goal-tracker-card"],
    files: [
      {
        path: "registry/example/goal-tracker-card-demo.tsx",
        type: "registry:example",
        target: "components/goal-tracker-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/goal-tracker-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "environment-card-demo": {
    name: "environment-card-demo",
    description:
      "Example showing a smart home environment control card with device management.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/environment-card"],
    files: [
      {
        path: "registry/example/environment-card-demo.tsx",
        type: "registry:example",
        target: "components/environment-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/environment-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "schedule-card-demo": {
    name: "schedule-card-demo",
    description:
      "Example showing a schedule card component displaying daily events and meetings.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/schedule-card"],
    files: [
      {
        path: "registry/example/schedule-card-demo.tsx",
        type: "registry:example",
        target: "components/schedule-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/schedule-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "showcase-card-demo": {
    name: "showcase-card-demo",
    description:
      "Example showing a showcase card component for displaying projects and portfolios.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/showcase-card"],
    files: [
      {
        path: "registry/example/showcase-card-demo.tsx",
        type: "registry:example",
        target: "components/showcase-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/showcase-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "order-summary-card-demo": {
    name: "order-summary-card-demo",
    description:
      "Example showing an order summary card component for e-commerce checkout flows.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/order-summary-card"],
    files: [
      {
        path: "registry/example/order-summary-card-demo.tsx",
        type: "registry:example",
        target: "components/order-summary-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/order-summary-card-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "doctor-profile-card-demo": {
    name: "doctor-profile-card-demo",
    description:
      "Example showing a doctor profile card component for healthcare applications.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/doctor-profile-card"],
    files: [
      {
        path: "registry/example/doctor-profile-card-demo.tsx",
        type: "registry:example",
        target: "components/doctor-profile-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/doctor-profile-card-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "gradient-blob-card-demo": {
    name: "gradient-blob-card-demo",
    description:
      "Example showing an animated gradient blob card with glassmorphism effects.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/gradient-blob-card"],
    files: [
      {
        path: "registry/example/gradient-blob-card-demo.tsx",
        type: "registry:example",
        target: "components/gradient-blob-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/gradient-blob-card-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "idea-generator-card-demo": {
    name: "idea-generator-card-demo",
    description:
      "Example showing an AI-powered idea generator card with input and action buttons.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/idea-generator-card"],
    files: [
      {
        path: "registry/example/idea-generator-card-demo.tsx",
        type: "registry:example",
        target: "components/idea-generator-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/idea-generator-card-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "input-with-select-demo": {
    name: "input-with-select-demo",
    description:
      "Example showing a modern input field with an integrated select dropdown for currency or unit selection.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/input-with-select"],
    files: [
      {
        path: "registry/example/input-with-select-demo.tsx",
        type: "registry:example",
        target: "components/input-with-select-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/input-with-select-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "range-slider-input-demo": {
    name: "range-slider-input-demo",
    description:
      "Example showing a dual-range slider with numeric inputs and increment/decrement controls.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/range-slider-input"],
    files: [
      {
        path: "registry/example/range-slider-input-demo.tsx",
        type: "registry:example",
        target: "components/range-slider-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/range-slider-input-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "url-input-demo": {
    name: "url-input-demo",
    description:
      "Example showing a smart URL input field that automatically displays website favicons.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/url-input"],
    files: [
      {
        path: "registry/example/url-input-demo.tsx",
        type: "registry:example",
        target: "components/url-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/url-input-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "floating-input-demo": {
    name: "floating-input-demo",
    description:
      "Example showing a modern input field with floating label animation and icon support.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/floating-input"],
    files: [
      {
        path: "registry/example/floating-input-demo.tsx",
        type: "registry:example",
        target: "components/floating-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/floating-input-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "time-with-icon-demo": {
    name: "time-with-icon-demo",
    description:
      "Example showing a time input field with dynamic icons that change based on the selected time.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/time-with-icon"],
    files: [
      {
        path: "registry/example/time-with-icon-demo.tsx",
        type: "registry:example",
        target: "components/time-with-icon-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/time-with-icon-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "otp-field-demo": {
    name: "otp-field-demo",
    description:
      "Example showing a customizable OTP (One-Time Password) input field with auto-focus and paste support.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/otp-field"],
    files: [
      {
        path: "registry/example/otp-field-demo.tsx",
        type: "registry:example",
        target: "components/otp-field-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/otp-field-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "modern-card-input-demo": {
    name: "modern-card-input-demo",
    description:
      "Example showing a sophisticated credit card input with real-time validation and card type detection.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/modern-card-input"],
    files: [
      {
        path: "registry/example/modern-card-input-demo.tsx",
        type: "registry:example",
        target: "components/modern-card-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/modern-card-input-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "password-field-demo": {
    name: "password-field-demo",
    description:
      "Example showing an advanced password input with strength meter, validation checklist, and password generation.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/password-field"],
    files: [
      {
        path: "registry/example/password-field-demo.tsx",
        type: "registry:example",
        target: "components/password-field-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/password-field-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "smart-assist-input-demo": {
    name: "smart-assist-input-demo",
    description:
      "Example showing an intelligent input field with history tracking, validation, and quick actions.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/smart-assist-input"],
    files: [
      {
        path: "registry/example/smart-assist-input-demo.tsx",
        type: "registry:example",
        target: "components/smart-assist-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/smart-assist-input-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "action-hub-input-demo": {
    name: "action-hub-input-demo",
    description:
      "Example showing a versatile input field with customizable action buttons and status indicators.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/action-hub-input"],
    files: [
      {
        path: "registry/example/action-hub-input-demo.tsx",
        type: "registry:example",
        target: "components/action-hub-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/action-hub-input-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "smart-notify-button-demo": {
    name: "smart-notify-button-demo",
    description:
      "Example showing a button component that triggers customizable toast notifications with actions and different types.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/smart-notify-button"],
    files: [
      {
        path: "registry/example/smart-notify-button-demo.tsx",
        type: "registry:example",
        target: "components/smart-notify-button-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/smart-notify-button-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notification-badge-demo": {
    name: "notification-badge-demo",
    description:
      "Example showing a notification badge component with animated count display and different notification types.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/notification-badge"],
    files: [
      {
        path: "registry/example/notification-badge-demo.tsx",
        type: "registry:example",
        target: "components/notification-badge-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/notification-badge-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notifications-popover-demo": {
    name: "notifications-popover-demo",
    description:
      "Example showing a dropdown menu component for displaying notifications with different types and read states.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/notifications-popover"],
    files: [
      {
        path: "registry/example/notifications-popover-demo.tsx",
        type: "registry:example",
        target: "components/notifications-popover-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/notifications-popover-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notification-demo": {
    name: "notification-demo",
    description:
      "Example showing a clean notification popover component with title, description, and timestamp display.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/notification"],
    files: [
      {
        path: "registry/example/notification-demo.tsx",
        type: "registry:example",
        target: "components/notification-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/notification-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notification-alt-demo": {
    name: "notification-alt-demo",
    description:
      "Example showing an enhanced notification component with info tooltips, clickable links, and different notification types.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/notification-alt"],
    files: [
      {
        path: "registry/example/notification-alt-demo.tsx",
        type: "registry:example",
        target: "components/notification-alt-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/notification-alt-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notifications-with-actions-demo": {
    name: "notifications-with-actions-demo",
    description:
      "Example showing interactive notification component with swipe-to-reveal actions like archive and delete.",
    type: "registry:example",
    registryDependencies: [
      "https://www.ruixen.com/r/notifications-with-actions",
    ],
    files: [
      {
        path: "registry/example/notifications-with-actions-demo.tsx",
        type: "registry:example",
        target: "components/notifications-with-actions-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/notifications-with-actions-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notifications-carousel-demo": {
    name: "notifications-carousel-demo",
    description:
      "Example showing a carousel-style notification component that displays one notification at a time with navigation controls.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/notifications-carousel"],
    files: [
      {
        path: "registry/example/notifications-carousel-demo.tsx",
        type: "registry:example",
        target: "components/notifications-carousel-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/notifications-carousel-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notification-toggle-demo": {
    name: "notification-toggle-demo",
    description:
      "Example showing a versatile notification component that toggles between carousel and list view modes.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/notification-toggle"],
    files: [
      {
        path: "registry/example/notification-toggle-demo.tsx",
        type: "registry:example",
        target: "components/notification-toggle-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/notification-toggle-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "notifications-filter-demo": {
    name: "notifications-filter-demo",
    description:
      "Example showing a notification component with category filtering to organize notifications by type.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/notifications-filter"],
    files: [
      {
        path: "registry/example/notifications-filter-demo.tsx",
        type: "registry:example",
        target: "components/notifications-filter-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/notifications-filter-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "avatar-notifications-demo": {
    name: "avatar-notifications-demo",
    description:
      "Example showing a notification component that displays user avatars with messages and animated status indicators.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/avatar-notifications"],
    files: [
      {
        path: "registry/example/avatar-notifications-demo.tsx",
        type: "registry:example",
        target: "components/avatar-notifications-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/avatar-notifications-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "sign-in-form-demo": {
    name: "sign-in-form-demo",
    description:
      "Example showing a professional sign-in form with email/password fields and social login options.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/sign-in-form"],
    files: [
      {
        path: "registry/example/sign-in-form-demo.tsx",
        type: "registry:example",
        target: "components/sign-in-form-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/sign-in-form-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "create-account-form-demo": {
    name: "create-account-form-demo",
    description:
      "Example showing a modern account creation form with validation and terms acceptance.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/create-account-form"],
    files: [
      {
        path: "registry/example/create-account-form-demo.tsx",
        type: "registry:example",
        target: "components/create-account-form-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/create-account-form-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "newsletter-form-demo": {
    name: "newsletter-form-demo",
    description:
      "Example showing a simple newsletter subscription form with success state.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/newsletter-form"],
    files: [
      {
        path: "registry/example/newsletter-form-demo.tsx",
        type: "registry:example",
        target: "components/newsletter-form-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/newsletter-form-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "sign-in-card-demo": {
    name: "sign-in-card-demo",
    description:
      "Example showing a Microsoft-inspired sign-in card with clean design and branding.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/sign-in-card"],
    files: [
      {
        path: "registry/example/sign-in-card-demo.tsx",
        type: "registry:example",
        target: "components/sign-in-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/sign-in-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "job-card-demo": {
    name: "job-card-demo",
    description:
      "Example showing a professional job listing card with company info and action buttons.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/job-card"],
    files: [
      {
        path: "registry/example/job-card-demo.tsx",
        type: "registry:example",
        target: "components/job-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/job-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "cookie-notice-demo": {
    name: "cookie-notice-demo",
    description:
      "Example showing a GDPR-compliant cookie consent notice with customizable preferences.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/cookie-notice"],
    files: [
      {
        path: "registry/example/cookie-notice-demo.tsx",
        type: "registry:example",
        target: "components/cookie-notice-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/cookie-notice-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "file-tree-manager-demo": {
    name: "file-tree-manager-demo",
    description:
      "Example showing a comprehensive file tree component with CRUD operations and management features.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/file-tree-manager"],
    files: [
      {
        path: "registry/example/file-tree-manager-demo.tsx",
        type: "registry:example",
        target: "components/file-tree-manager-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/file-tree-manager-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "motion-file-tree-demo": {
    name: "motion-file-tree-demo",
    description:
      "Example showing an animated file tree component with smooth expand/collapse transitions.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/motion-file-tree"],
    files: [
      {
        path: "registry/example/motion-file-tree-demo.tsx",
        type: "registry:example",
        target: "components/motion-file-tree-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/motion-file-tree-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "magic-tree-demo": {
    name: "magic-tree-demo",
    description:
      "Example showing a magical file tree with sparkle effects and interactive animations.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/magic-tree"],
    files: [
      {
        path: "registry/example/magic-tree-demo.tsx",
        type: "registry:example",
        target: "components/magic-tree-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/magic-tree-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "tree-node-tooltip-demo": {
    name: "tree-node-tooltip-demo",
    description:
      "Example showing a file tree component with tooltip support for each node.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/tree-node-tooltip"],
    files: [
      {
        path: "registry/example/tree-node-tooltip-demo.tsx",
        type: "registry:example",
        target: "components/tree-node-tooltip-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/tree-node-tooltip-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "sortable-table-demo": {
    name: "sortable-table-demo",
    description:
      "Example showing a sortable and filterable data table with search functionality.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/sortable-table"],
    files: [
      {
        path: "registry/example/sortable-table-demo.tsx",
        type: "registry:example",
        target: "components/sortable-table-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/sortable-table-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "table-edit-demo": {
    name: "table-edit-demo",
    description:
      "Example showing an editable table component with inline editing and dropdown menus.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/table-edit"],
    files: [
      {
        path: "registry/example/table-edit-demo.tsx",
        type: "registry:example",
        target: "components/table-edit-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/table-edit-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "table-with-dialog-demo": {
    name: "table-with-dialog-demo",
    description:
      "Example showing a data table with row details shown in a dialog modal.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/table-with-dialog"],
    files: [
      {
        path: "registry/example/table-with-dialog-demo.tsx",
        type: "registry:example",
        target: "components/table-with-dialog-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/table-with-dialog-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "fixed-header-footer-table-demo": {
    name: "fixed-header-footer-table-demo",
    description:
      "Example showing a table with fixed header and footer, and scrollable body.",
    type: "registry:example",
    registryDependencies: [
      "https://www.ruixen.com/r/fixed-header-footer-table",
    ],
    files: [
      {
        path: "registry/example/fixed-header-footer-table-demo.tsx",
        type: "registry:example",
        target: "components/fixed-header-footer-table-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/fixed-header-footer-table-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "date-time-picker-demo": {
    name: "date-time-picker-demo",
    description:
      "Example showing a date and time picker with calendar and time selection.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/date-time-picker"],
    files: [
      {
        path: "registry/example/date-time-picker-demo.tsx",
        type: "registry:example",
        target: "components/date-time-picker-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/date-time-picker-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "date-range-picker-demo": {
    name: "date-range-picker-demo",
    description: "Example showing a date range picker with dual calendar view.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/date-range-picker"],
    files: [
      {
        path: "registry/example/date-range-picker-demo.tsx",
        type: "registry:example",
        target: "components/date-range-picker-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/date-range-picker-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "monthly-heatmap-calendar-demo": {
    name: "monthly-heatmap-calendar-demo",
    description:
      "Example showing a monthly calendar with event heatmap visualization.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/monthly-heatmap-calendar"],
    files: [
      {
        path: "registry/example/monthly-heatmap-calendar-demo.tsx",
        type: "registry:example",
        target: "components/monthly-heatmap-calendar-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/monthly-heatmap-calendar-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "event-scheduler-demo": {
    name: "event-scheduler-demo",
    description:
      "Example showing a full-featured event scheduler with event creation and management.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/event-scheduler"],
    files: [
      {
        path: "registry/example/event-scheduler-demo.tsx",
        type: "registry:example",
        target: "components/event-scheduler-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/event-scheduler-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "scheduler-demo": {
    name: "scheduler-demo",
    description:
      "Example showing a simple event scheduler with calendar integration.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/scheduler"],
    files: [
      {
        path: "registry/example/scheduler-demo.tsx",
        type: "registry:example",
        target: "components/scheduler-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/scheduler-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "daily-timeline-scheduler-demo": {
    name: "daily-timeline-scheduler-demo",
    description:
      "Example showing a timeline-based daily scheduler with time slot management.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/daily-timeline-scheduler"],
    files: [
      {
        path: "registry/example/daily-timeline-scheduler-demo.tsx",
        type: "registry:example",
        target: "components/daily-timeline-scheduler-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/daily-timeline-scheduler-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "image-cropper-demo": {
    name: "image-cropper-demo",
    description:
      "Example showing an image cropping tool with zoom and aspect ratio controls.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/image-cropper"],
    files: [
      {
        path: "registry/example/image-cropper-demo.tsx",
        type: "registry:example",
        target: "components/image-cropper-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/image-cropper-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "advanced-image-uploader-demo": {
    name: "advanced-image-uploader-demo",
    description:
      "Example showing a drag-and-drop image uploader with cropping functionality.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/advanced-image-uploader"],
    files: [
      {
        path: "registry/example/advanced-image-uploader-demo.tsx",
        type: "registry:example",
        target: "components/advanced-image-uploader-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/advanced-image-uploader-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "reorderable-table-demo": {
    name: "reorderable-table-demo",
    description:
      "Example showing a table with column reordering and visibility controls.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/reorderable-table"],
    files: [
      {
        path: "registry/example/reorderable-table-demo.tsx",
        type: "registry:example",
        target: "components/reorderable-table-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/reorderable-table-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "comparison-table-demo": {
    name: "comparison-table-demo",
    description:
      "Example showing a comparison table with filtering and side-by-side comparison.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/comparison-table"],
    files: [
      {
        path: "registry/example/comparison-table-demo.tsx",
        type: "registry:example",
        target: "components/comparison-table-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/comparison-table-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "flexi-filter-table-demo": {
    name: "flexi-filter-table-demo",
    description:
      "Example showing a flexible table with multiple filter options.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/flexi-filter-table"],
    files: [
      {
        path: "registry/example/flexi-filter-table-demo.tsx",
        type: "registry:example",
        target: "components/flexi-filter-table-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/flexi-filter-table-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "table-dialog-demo": {
    name: "table-dialog-demo",
    description: "Example showing an editable table with dialog-based editing.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/table-dialog"],
    files: [
      {
        path: "registry/example/table-dialog-demo.tsx",
        type: "registry:example",
        target: "components/table-dialog-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/table-dialog-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "minimisable-table-demo": {
    name: "minimisable-table-demo",
    description: "Example showing a table with collapsible columns.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/minimisable-table"],
    files: [
      {
        path: "registry/example/minimisable-table-demo.tsx",
        type: "registry:example",
        target: "components/minimisable-table-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/minimisable-table-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "inline-analytics-table-demo": {
    name: "inline-analytics-table-demo",
    description:
      "Example showing a table with inline analytics and progress indicators.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/inline-analytics-table"],
    files: [
      {
        path: "registry/example/inline-analytics-table-demo.tsx",
        type: "registry:example",
        target: "components/inline-analytics-table-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/inline-analytics-table-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "column-collaboration-table-demo": {
    name: "column-collaboration-table-demo",
    description:
      "Example showing a collaborative table with column-level comments.",
    type: "registry:example",
    registryDependencies: [
      "https://www.ruixen.com/r/column-collaboration-table",
    ],
    files: [
      {
        path: "registry/example/column-collaboration-table-demo.tsx",
        type: "registry:example",
        target: "components/column-collaboration-table-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/column-collaboration-table-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "video-player-pro-demo": {
    name: "video-player-pro-demo",
    description:
      "Example showing a professional video player with custom controls.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/video-player-pro"],
    files: [
      {
        path: "registry/example/video-player-pro-demo.tsx",
        type: "registry:example",
        target: "components/video-player-pro-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/video-player-pro-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "hover-play-card-demo": {
    name: "hover-play-card-demo",
    description: "Example showing a video card that plays on hover.",
    type: "registry:example",
    registryDependencies: ["https://www.ruixen.com/r/hover-play-card"],
    files: [
      {
        path: "registry/example/hover-play-card-demo.tsx",
        type: "registry:example",
        target: "components/hover-play-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/hover-play-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "wave-background-demo": {
    name: "wave-background-demo",
    description:
      "Example showing a flowing wave background with WebGL shaders.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/wave-background"],
    files: [
      {
        path: "registry/example/wave-background-demo.tsx",
        type: "registry:example",
        target: "components/wave-background-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/wave-background-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "aurora-flow-demo": {
    name: "aurora-flow-demo",
    description:
      "Example showing a beautiful aurora-style background with flowing gradients.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/aurora-flow"],
    files: [
      {
        path: "registry/example/aurora-flow-demo.tsx",
        type: "registry:example",
        target: "components/aurora-flow-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/aurora-flow-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "aurora-waves-demo": {
    name: "aurora-waves-demo",
    description:
      "Example showing aurora-style waves with customizable properties.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/aurora-waves"],
    files: [
      {
        path: "registry/example/aurora-waves-demo.tsx",
        type: "registry:example",
        target: "components/aurora-waves-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/aurora-waves-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "falling-symbols-background-demo": {
    name: "falling-symbols-background-demo",
    description: "Example showing a Matrix-style falling symbols background.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/falling-symbols-background"],
    files: [
      {
        path: "registry/example/falling-symbols-background-demo.tsx",
        type: "registry:example",
        target: "components/falling-symbols-background-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/falling-symbols-background-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "spotlight-background-demo": {
    name: "spotlight-background-demo",
    description: "Example showing a mouse-following spotlight effect.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/spotlight-background"],
    files: [
      {
        path: "registry/example/spotlight-background-demo.tsx",
        type: "registry:example",
        target: "components/spotlight-background-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/spotlight-background-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "ripple-distortion-demo": {
    name: "ripple-distortion-demo",
    description:
      "Example showing an interactive image distortion effect with ripples.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/ripple-distortion"],
    files: [
      {
        path: "registry/example/ripple-distortion-demo.tsx",
        type: "registry:example",
        target: "components/ripple-distortion-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/ripple-distortion-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "particle-field-demo": {
    name: "particle-field-demo",
    description:
      "Example showing an interactive particle field with mouse attraction.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/particle-field"],
    files: [
      {
        path: "registry/example/particle-field-demo.tsx",
        type: "registry:example",
        target: "components/particle-field-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/particle-field-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "rain-background-demo": {
    name: "rain-background-demo",
    description: "Example showing a neon rain effect with animated streaks.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/rain-background"],
    files: [
      {
        path: "registry/example/rain-background-demo.tsx",
        type: "registry:example",
        target: "components/rain-background-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/rain-background-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "dual-tone-rain-background-demo": {
    name: "dual-tone-rain-background-demo",
    description:
      "Example showing a sophisticated rain effect with dual-tone colors.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/dual-tone-rain-background"],
    files: [
      {
        path: "registry/example/dual-tone-rain-background-demo.tsx",
        type: "registry:example",
        target: "components/dual-tone-rain-background-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/dual-tone-rain-background-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  utils: {
    name: "utils",
    description: "",
    type: "registry:lib",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/lib/utils.ts",
        type: "registry:lib",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/lib/utils.ts");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
};
