/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react";

export const Index: Record<string, any> = {
  index: {
    name: "index",
    description: "",
    type: "registry:style",
    registryDependencies: ["utils"],
    files: [],
    component: null,
    meta: undefined,
  },
  "staggered-faq-section": {
    name: "staggered-faq-section",
    description:
      "A responsive FAQ component with animated text reveals and customizable content.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/staggered-faq-section.tsx",
        type: "registry:ui",
        target: "components/ruixen/staggered-faq-section.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/staggered-faq-section.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "animated-theme-toggler": {
    name: "animated-theme-toggler",
    description: "A component for theme changing animation.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/animated-theme-toggler.tsx",
        type: "registry:ui",
        target: "components/ruixen/animated-theme-toggler.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/animated-theme-toggler.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-highlights": {
    name: "feature-highlights",
    description:
      "A responsive feature highlights component with expandable accordion sections and images.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/feature-highlights.tsx",
        type: "registry:ui",
        target: "components/ruixen/feature-highlights.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/feature-highlights.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "faq-scroll-accordion": {
    name: "faq-scroll-accordion",
    description:
      "A scroll-triggered FAQ accordion component with smooth GSAP animations and auto-expanding items.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/faq-scroll-accordion.tsx",
        type: "registry:ui",
        target: "components/ruixen/faq-scroll-accordion.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/faq-scroll-accordion.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "faq-auto-accordion": {
    name: "faq-auto-accordion",
    description:
      "A scroll-triggered FAQ accordion component with smooth GSAP animations and auto-expanding items.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/faq-auto-accordion.tsx",
        type: "registry:ui",
        target: "components/ruixen/faq-auto-accordion.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/faq-auto-accordion.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "compact-accordion": {
    name: "compact-accordion",
    description:
      "A clean and minimal accordion component with icons and smooth animations for organizing content in collapsible sections.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/compact-accordion.tsx",
        type: "registry:ui",
        target: "components/ruixen/compact-accordion.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/compact-accordion.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "aurora-hero-section": {
    name: "aurora-hero-section",
    description:
      "A beautiful hero section with aurora-style background effects and animated elements",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/aurora-hero-section.tsx",
        type: "registry:ui",
        target: "components/ruixen/aurora-hero-section.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/aurora-hero-section.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "card-carousel-hero": {
    name: "card-carousel-hero",
    description:
      "An interactive hero section featuring a card carousel with smooth animations",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/card-carousel-hero.tsx",
        type: "registry:ui",
        target: "components/ruixen/card-carousel-hero.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/card-carousel-hero.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "gradient-hero-showcase": {
    name: "gradient-hero-showcase",
    description:
      "A modern hero section with animated gradient background and smooth transitions",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/gradient-hero-showcase.tsx",
        type: "registry:ui",
        target: "components/ruixen/gradient-hero-showcase.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/gradient-hero-showcase.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "spectrum-hero-section": {
    name: "spectrum-hero-section",
    description:
      "A vibrant hero section with spectrum color effects and dynamic animations",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/spectrum-hero-section.tsx",
        type: "registry:ui",
        target: "components/ruixen/spectrum-hero-section.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/spectrum-hero-section.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "video-hero-showcase": {
    name: "video-hero-showcase",
    description:
      "A dynamic hero section featuring video backgrounds and interactive elements",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/video-hero-showcase.tsx",
        type: "registry:ui",
        target: "components/ruixen/video-hero-showcase.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/video-hero-showcase.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "visionary-hero-section": {
    name: "visionary-hero-section",
    description:
      "A visionary hero section with elegant design and smooth animations",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/visionary-hero-section.tsx",
        type: "registry:ui",
        target: "components/ruixen/visionary-hero-section.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/visionary-hero-section.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "featured-highlights": {
    name: "featured-highlights",
    description:
      "Interactive feature showcase with image preview and hover effects",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/featured-highlights.tsx",
        type: "registry:ui",
        target: "components/ruixen/featured-highlights.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/featured-highlights.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-grid-section": {
    name: "feature-grid-section",
    description: "Grid layout showcasing features with icons and descriptions",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/feature-grid-section.tsx",
        type: "registry:ui",
        target: "components/ruixen/feature-grid-section.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/feature-grid-section.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-tabs-showcase": {
    name: "feature-tabs-showcase",
    description:
      "Interactive tabs with animated background and feature showcase",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/feature-tabs-showcase.tsx",
        type: "registry:ui",
        target: "components/ruixen/feature-tabs-showcase.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/feature-tabs-showcase.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "composite-feature-showcase": {
    name: "composite-feature-showcase",
    description: "Complex dashboard layout with map, charts, and feature cards",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/composite-feature-showcase.tsx",
        type: "registry:ui",
        target: "components/ruixen/composite-feature-showcase.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/composite-feature-showcase.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "integration-and-stats-section": {
    name: "integration-and-stats-section",
    description:
      "Integration showcase with testimonials, stats, and card stack",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/integration-and-stats-section.tsx",
        type: "registry:ui",
        target: "components/ruixen/integration-and-stats-section.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/integration-and-stats-section.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "tech-orbit-showcase": {
    name: "tech-orbit-showcase",
    description:
      "Animated orbital showcase with rotating tech icons and call-to-action",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/tech-orbit-showcase.tsx",
        type: "registry:ui",
        target: "components/ruixen/tech-orbit-showcase.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/tech-orbit-showcase.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "partner-integrations-grid": {
    name: "partner-integrations-grid",
    description: "Grid showcase of partner integrations with octagonal design",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/partner-integrations-grid.tsx",
        type: "registry:ui",
        target: "components/ruixen/partner-integrations-grid.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/partner-integrations-grid.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "analytics-dashboard-stats": {
    name: "analytics-dashboard-stats",
    description:
      "Analytics dashboard with statistics and area chart visualization",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/analytics-dashboard-stats.tsx",
        type: "registry:ui",
        target: "components/ruixen/analytics-dashboard-stats.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/analytics-dashboard-stats.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "ruixen-dashboard-stats": {
    name: "ruixen-dashboard-stats",
    description:
      "Dashboard stats with animated counter and chart visualization",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/ruixen-dashboard-stats.tsx",
        type: "registry:ui",
        target: "components/ruixen/ruixen-dashboard-stats.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/ruixen-dashboard-stats.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-carousel": {
    name: "feature-carousel",
    description:
      "Interactive carousel showcasing dashboard features with auto-rotation",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/feature-carousel.tsx",
        type: "registry:ui",
        target: "components/ruixen/feature-carousel.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/feature-carousel.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "crm-insights-panel": {
    name: "crm-insights-panel",
    description: "CRM dashboard with video preview and feature showcase grid",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/crm-insights-panel.tsx",
        type: "registry:ui",
        target: "components/ruixen/crm-insights-panel.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/crm-insights-panel.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "multi-orbit-semi-circle": {
    name: "multi-orbit-semi-circle",
    description: "Multi-layered semi-circular orbit animation with tech icons",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/multi-orbit-semi-circle.tsx",
        type: "registry:ui",
        target: "components/ruixen/multi-orbit-semi-circle.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/multi-orbit-semi-circle.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "rotating-gradient-right": {
    name: "rotating-gradient-right",
    description: "Rotating conic gradient animation with centered card content",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/rotating-gradient-right.tsx",
        type: "registry:ui",
        target: "components/ruixen/rotating-gradient-right.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/rotating-gradient-right.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "automated-tasks-panel": {
    name: "automated-tasks-panel",
    description: "Animated task panel with scrolling automation features",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/automated-tasks-panel.tsx",
        type: "registry:ui",
        target: "components/ruixen/automated-tasks-panel.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/automated-tasks-panel.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "case-studies": {
    name: "case-studies",
    description:
      "Customer case studies with metrics, testimonials, and success stories",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/case-studies.tsx",
        type: "registry:ui",
        target: "components/ruixen/case-studies.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/case-studies.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "trusted-clients-showcase": {
    name: "trusted-clients-showcase",
    description: "Showcase trusted clients with logos in a clean grid layout",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/trusted-clients-showcase.tsx",
        type: "registry:ui",
        target: "components/ruixen/trusted-clients-showcase.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/trusted-clients-showcase.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "client-carousel-showcase": {
    name: "client-carousel-showcase",
    description:
      "Interactive carousel showcasing client logos with navigation controls",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/client-carousel-showcase.tsx",
        type: "registry:ui",
        target: "components/ruixen/client-carousel-showcase.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/client-carousel-showcase.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "auto-scrolling-client-carousel": {
    name: "auto-scrolling-client-carousel",
    description:
      "Automatically scrolling carousel showcasing client logos with infinite loop",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/auto-scrolling-client-carousel.tsx",
        type: "registry:ui",
        target: "components/ruixen/auto-scrolling-client-carousel.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/auto-scrolling-client-carousel.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-pro": {
    name: "footer-pro",
    description:
      "A professional footer component with logo, description, contact info, social links, and organized column sections.",
    type: "registry:ui",
    registryDependencies: ["button", "card"],
    files: [
      {
        path: "registry/ruixenui/footer-pro.tsx",
        type: "registry:ui",
        target: "components/ruixen/footer-pro.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/footer-pro.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "corporate-footer": {
    name: "corporate-footer",
    description:
      "A corporate-style footer with comprehensive navigation and company information.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/corporate-footer.tsx",
        type: "registry:ui",
        target: "components/ruixen/corporate-footer.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/corporate-footer.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-extended": {
    name: "footer-extended",
    description:
      "An extended footer layout with multiple sections and comprehensive information.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/footer-extended.tsx",
        type: "registry:ui",
        target: "components/ruixen/footer-extended.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/footer-extended.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-enterprise": {
    name: "footer-enterprise",
    description:
      "An enterprise-grade footer with advanced features and comprehensive navigation.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/footer-enterprise.tsx",
        type: "registry:ui",
        target: "components/ruixen/footer-enterprise.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/footer-enterprise.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-mega": {
    name: "footer-mega",
    description:
      "A mega footer with extensive navigation and multiple content sections.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/footer-mega.tsx",
        type: "registry:ui",
        target: "components/ruixen/footer-mega.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/footer-mega.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "hover-gradient-navbar": {
    name: "hover-gradient-navbar",
    description:
      "A navigation bar with gradient hover effects and smooth transitions.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/hover-gradient-navbar.tsx",
        type: "registry:ui",
        target: "components/ruixen/hover-gradient-navbar.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/hover-gradient-navbar.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "floating-navbar": {
    name: "floating-navbar",
    description:
      "A floating navigation bar that appears on scroll with smooth animations.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/floating-navbar.tsx",
        type: "registry:ui",
        target: "components/ruixen/floating-navbar.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/floating-navbar.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "luma-bar": {
    name: "luma-bar",
    description:
      "A sleek navigation bar with Luma-inspired design and interactions.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/luma-bar.tsx",
        type: "registry:ui",
        target: "components/ruixen/luma-bar.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/luma-bar.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "promote-header": {
    name: "promote-header",
    description:
      "A promotional header component for announcements and marketing messages.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/promote-header.tsx",
        type: "registry:ui",
        target: "components/ruixen/promote-header.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/promote-header.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-plans": {
    name: "pricing-plans",
    description:
      "A comprehensive pricing plans component with multiple tiers and features.",
    type: "registry:ui",
    registryDependencies: ["button", "card"],
    files: [
      {
        path: "registry/ruixenui/pricing-plans.tsx",
        type: "registry:ui",
        target: "components/ruixen/pricing-plans.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/pricing-plans.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-comparison": {
    name: "pricing-comparison",
    description:
      "A detailed pricing comparison table with features and plan differences.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/pricing-comparison.tsx",
        type: "registry:ui",
        target: "components/ruixen/pricing-comparison.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/pricing-comparison.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "subscription-plans": {
    name: "subscription-plans",
    description:
      "A subscription-focused pricing component with billing options and features.",
    type: "registry:ui",
    registryDependencies: ["button", "card"],
    files: [
      {
        path: "registry/ruixenui/subscription-plans.tsx",
        type: "registry:ui",
        target: "components/ruixen/subscription-plans.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/subscription-plans.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-flow": {
    name: "pricing-flow",
    description:
      "An interactive pricing flow with billing toggles and plan selection.",
    type: "registry:ui",
    registryDependencies: ["button", "card"],
    files: [
      {
        path: "registry/ruixenui/pricing-flow.tsx",
        type: "registry:ui",
        target: "components/ruixen/pricing-flow.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/pricing-flow.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-with-user-scaling": {
    name: "pricing-with-user-scaling",
    description:
      "A pricing component with user-based scaling and dynamic pricing calculations.",
    type: "registry:ui",
    registryDependencies: ["button", "card", "slider"],
    files: [
      {
        path: "registry/ruixenui/pricing-with-user-scaling.tsx",
        type: "registry:ui",
        target: "components/ruixen/pricing-with-user-scaling.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/pricing-with-user-scaling.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "testimonial-tabs": {
    name: "testimonial-tabs",
    description:
      "An interactive testimonial component with tabbed navigation and smooth transitions.",
    type: "registry:ui",
    registryDependencies: ["tabs"],
    files: [
      {
        path: "registry/ruixenui/testimonial-tabs.tsx",
        type: "registry:ui",
        target: "components/ruixen/testimonial-tabs.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/testimonial-tabs.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "slide-to-delete-button": {
    name: "slide-to-delete-button",
    description:
      "A draggable button that requires sliding to confirm deletion action.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/slide-to-delete-button.tsx",
        type: "registry:ui",
        target: "components/ruixen/slide-to-delete-button.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/slide-to-delete-button.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "glow-link-button": {
    name: "glow-link-button",
    description:
      "A button with a subtle glow effect and animated arrow on hover.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/glow-link-button.tsx",
        type: "registry:ui",
        target: "components/ruixen/glow-link-button.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/glow-link-button.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "theme-cycle-button": {
    name: "theme-cycle-button",
    description:
      "A button that cycles through different theme modes with smooth transitions.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/theme-cycle-button.tsx",
        type: "registry:ui",
        target: "components/ruixen/theme-cycle-button.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/theme-cycle-button.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "morphing-github-button": {
    name: "morphing-github-button",
    description:
      "A GitHub button that morphs between different states with animations.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/morphing-github-button.tsx",
        type: "registry:ui",
        target: "components/ruixen/morphing-github-button.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/morphing-github-button.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "circular-stepper-input": {
    name: "circular-stepper-input",
    description:
      "A circular input component with increment/decrement functionality.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/circular-stepper-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/circular-stepper-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/circular-stepper-input.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "password-strength-input": {
    name: "password-strength-input",
    description:
      "A password input with real-time strength validation and visual feedback.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/password-strength-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/password-strength-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/password-strength-input.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "otp-input": {
    name: "otp-input",
    description:
      "A one-time password input component with individual digit fields.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/otp-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/otp-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/otp-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "color-picker-input": {
    name: "color-picker-input",
    description:
      "A color picker component with opacity control and copy functionality.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/color-picker-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/color-picker-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/color-picker-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "gravatar-email-input": {
    name: "gravatar-email-input",
    description: "An email input that displays Gravatar avatar preview.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/gravatar-email-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/gravatar-email-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/gravatar-email-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "correct-number-input": {
    name: "correct-number-input",
    description: "A number input with validation and correction features.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/correct-number-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/correct-number-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/correct-number-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "better-time-picker": {
    name: "better-time-picker",
    description: "An enhanced time picker with improved user experience.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/better-time-picker.tsx",
        type: "registry:ui",
        target: "components/ruixen/better-time-picker.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/better-time-picker.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "inline-copy-input": {
    name: "inline-copy-input",
    description: "An input field with inline copy-to-clipboard functionality.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/inline-copy-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/inline-copy-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/inline-copy-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "clean-tag-input": {
    name: "clean-tag-input",
    description:
      "A clean and minimal tag input component for adding multiple values.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/clean-tag-input.tsx",
        type: "registry:ui",
        target: "components/ruixen/clean-tag-input.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/clean-tag-input.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "search-with-category": {
    name: "search-with-category",
    description:
      "A search input component with category filtering functionality.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/search-with-category.tsx",
        type: "registry:ui",
        target: "components/ruixen/search-with-category.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/search-with-category.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "advanced-context-menu": {
    name: "advanced-context-menu",
    description:
      "An advanced context menu component with nested items and keyboard navigation.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/advanced-context-menu.tsx",
        type: "registry:ui",
        target: "components/ruixen/advanced-context-menu.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/advanced-context-menu.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "nested-dashboard-menu": {
    name: "nested-dashboard-menu",
    description: "A nested navigation menu component for dashboard layouts.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/nested-dashboard-menu.tsx",
        type: "registry:ui",
        target: "components/ruixen/nested-dashboard-menu.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/nested-dashboard-menu.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "drawer-inner-content": {
    name: "drawer-inner-content",
    description: "A drawer component with customizable inner content layout.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/drawer-inner-content.tsx",
        type: "registry:ui",
        target: "components/ruixen/drawer-inner-content.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/drawer-inner-content.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "centered-feedback-drawer": {
    name: "centered-feedback-drawer",
    description:
      "A centered drawer component designed for feedback collection.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/centered-feedback-drawer.tsx",
        type: "registry:ui",
        target: "components/ruixen/centered-feedback-drawer.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/ruixenui/centered-feedback-drawer.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "bottom-drawers": {
    name: "bottom-drawers",
    description:
      "A bottom drawer component that slides up from the bottom of the screen.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/bottom-drawers.tsx",
        type: "registry:ui",
        target: "components/ruixen/bottom-drawers.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/bottom-drawers.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "social-card": {
    name: "social-card",
    description:
      "A social media style card component with engagement features.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/social-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/social-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/social-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "portfolio-card": {
    name: "portfolio-card",
    description:
      "A professional portfolio card component showcasing skills and profile.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/portfolio-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/portfolio-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/portfolio-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "team-project-card": {
    name: "team-project-card",
    description:
      "A collaborative project card showing team members and milestones.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/team-project-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/team-project-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/team-project-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "collab-chat-card": {
    name: "collab-chat-card",
    description:
      "A collaborative chat interface card with participant filtering.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/collab-chat-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/collab-chat-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/collab-chat-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "goal-tracker-card": {
    name: "goal-tracker-card",
    description:
      "An activity and goal tracking card with progress visualization.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/goal-tracker-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/goal-tracker-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/goal-tracker-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "environment-card": {
    name: "environment-card",
    description:
      "A smart home environment control card with device management.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/environment-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/environment-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/environment-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "schedule-card": {
    name: "schedule-card",
    description:
      "A schedule card component displaying daily events and meetings.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/schedule-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/schedule-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/schedule-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "showcase-card": {
    name: "showcase-card",
    description:
      "A showcase card component for displaying projects and portfolios.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/showcase-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/showcase-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/showcase-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "order-summary-card": {
    name: "order-summary-card",
    description:
      "An order summary card component for e-commerce checkout flows.",
    type: "registry:ui",
    registryDependencies: ["button", "card"],
    files: [
      {
        path: "registry/ruixenui/order-summary-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/order-summary-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/order-summary-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "doctor-profile-card": {
    name: "doctor-profile-card",
    description: "A doctor profile card component for healthcare applications.",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [
      {
        path: "registry/ruixenui/doctor-profile-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/doctor-profile-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/doctor-profile-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "gradient-blob-card": {
    name: "gradient-blob-card",
    description: "An animated gradient blob card with glassmorphism effects.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/gradient-blob-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/gradient-blob-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/gradient-blob-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "idea-generator-card": {
    name: "idea-generator-card",
    description:
      "An AI-powered idea generator card with input and action buttons.",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/ruixenui/idea-generator-card.tsx",
        type: "registry:ui",
        target: "components/ruixen/idea-generator-card.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/ruixenui/idea-generator-card.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "staggered-faq-section-demo": {
    name: "staggered-faq-section-demo",
    description:
      "Example showing a responsive FAQ component with animated text reveals.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/staggered-faq-section"],
    files: [
      {
        path: "registry/example/staggered-faq-section-demo.tsx",
        type: "registry:example",
        target: "components/staggered-faq-section-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/staggered-faq-section-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-highlights-demo": {
    name: "feature-highlights-demo",
    description:
      "Example showing a responsive FAQ component with animated text reveals.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/feature-highlights"],
    files: [
      {
        path: "registry/example/feature-highlights-demo.tsx",
        type: "registry:example",
        target: "components/feature-highlights-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/feature-highlights-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "faq-scroll-accordion-demo": {
    name: "faq-scroll-accordion-demo",
    description:
      "Example showing a scroll-triggered FAQ accordion component with smooth GSAP animations and auto-expanding items.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/faq-scroll-accordion"],
    files: [
      {
        path: "registry/example/faq-scroll-accordion-demo.tsx",
        type: "registry:example",
        target: "components/faq-scroll-accordion-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/faq-scroll-accordion-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "faq-auto-accordion-demo": {
    name: "faq-auto-accordion-demo",
    description:
      "Example showing a scroll-triggered FAQ accordion component with smooth GSAP animations and auto-expanding items.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/faq-auto-accordion"],
    files: [
      {
        path: "registry/example/faq-auto-accordion-demo.tsx",
        type: "registry:example",
        target: "components/faq-auto-accordion-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/faq-auto-accordion-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "compact-accordion-demo": {
    name: "compact-accordion-demo",
    description:
      "Example showing a compact accordion component with icons and smooth animations.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/r/compact-accordion"],
    files: [
      {
        path: "registry/example/compact-accordion-demo.tsx",
        type: "registry:example",
        target: "components/compact-accordion-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/compact-accordion-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "animated-theme-toggler-demo": {
    name: "animated-theme-toggler-demo",
    description: "Example showing animation while changing the theme.",
    type: "registry:example",
    registryDependencies: ["https://ruixen.com/animated-theme-toggler"],
    files: [
      {
        path: "registry/example/animated-theme-toggler-demo.tsx",
        type: "registry:example",
        target: "components/animated-theme-toggler-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/animated-theme-toggler-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "aurora-hero-section-demo": {
    name: "aurora-hero-section-demo",
    description:
      "Example showing a beautiful hero section with aurora-style background effects",
    type: "registry:example",
    registryDependencies: ["aurora-hero-section"],
    files: [
      {
        path: "registry/example/aurora-hero-section-demo.tsx",
        type: "registry:example",
        target: "components/aurora-hero-section-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/aurora-hero-section-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "card-carousel-hero-demo": {
    name: "card-carousel-hero-demo",
    description:
      "Example showing an interactive hero section with card carousel",
    type: "registry:example",
    registryDependencies: ["card-carousel-hero"],
    files: [
      {
        path: "registry/example/card-carousel-hero-demo.tsx",
        type: "registry:example",
        target: "components/card-carousel-hero-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/card-carousel-hero-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "gradient-hero-showcase-demo": {
    name: "gradient-hero-showcase-demo",
    description:
      "Example showing a modern hero section with animated gradient background",
    type: "registry:example",
    registryDependencies: ["gradient-hero-showcase"],
    files: [
      {
        path: "registry/example/gradient-hero-showcase-demo.tsx",
        type: "registry:example",
        target: "components/gradient-hero-showcase-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/gradient-hero-showcase-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "spectrum-hero-section-demo": {
    name: "spectrum-hero-section-demo",
    description:
      "Example showing a vibrant hero section with spectrum color effects",
    type: "registry:example",
    registryDependencies: ["spectrum-hero-section"],
    files: [
      {
        path: "registry/example/spectrum-hero-section-demo.tsx",
        type: "registry:example",
        target: "components/spectrum-hero-section-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/spectrum-hero-section-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "video-hero-showcase-demo": {
    name: "video-hero-showcase-demo",
    description:
      "Example showing a dynamic hero section with video backgrounds",
    type: "registry:example",
    registryDependencies: ["video-hero-showcase"],
    files: [
      {
        path: "registry/example/video-hero-showcase-demo.tsx",
        type: "registry:example",
        target: "components/video-hero-showcase-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/video-hero-showcase-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "visionary-hero-section-demo": {
    name: "visionary-hero-section-demo",
    description: "Example showing a visionary hero section with elegant design",
    type: "registry:example",
    registryDependencies: ["visionary-hero-section"],
    files: [
      {
        path: "registry/example/visionary-hero-section-demo.tsx",
        type: "registry:example",
        target: "components/visionary-hero-section-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/visionary-hero-section-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "featured-highlights-demo": {
    name: "featured-highlights-demo",
    description: "Example of interactive feature showcase with image preview",
    type: "registry:example",
    registryDependencies: ["featured-highlights"],
    files: [
      {
        path: "registry/example/featured-highlights-demo.tsx",
        type: "registry:example",
        target: "components/featured-highlights-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/featured-highlights-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-grid-section-demo": {
    name: "feature-grid-section-demo",
    description: "Example of grid layout showcasing features with icons",
    type: "registry:example",
    registryDependencies: ["feature-grid-section"],
    files: [
      {
        path: "registry/example/feature-grid-section-demo.tsx",
        type: "registry:example",
        target: "components/feature-grid-section-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/feature-grid-section-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-tabs-showcase-demo": {
    name: "feature-tabs-showcase-demo",
    description: "Example of interactive tabs with animated background",
    type: "registry:example",
    registryDependencies: ["feature-tabs-showcase"],
    files: [
      {
        path: "registry/example/feature-tabs-showcase-demo.tsx",
        type: "registry:example",
        target: "components/feature-tabs-showcase-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/feature-tabs-showcase-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "composite-feature-showcase-demo": {
    name: "composite-feature-showcase-demo",
    description: "Example of complex dashboard layout with map and charts",
    type: "registry:example",
    registryDependencies: ["composite-feature-showcase"],
    files: [
      {
        path: "registry/example/composite-feature-showcase-demo.tsx",
        type: "registry:example",
        target: "components/composite-feature-showcase-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/composite-feature-showcase-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "integration-and-stats-section-demo": {
    name: "integration-and-stats-section-demo",
    description: "Example of integration showcase with testimonials and stats",
    type: "registry:example",
    registryDependencies: ["integration-and-stats-section"],
    files: [
      {
        path: "registry/example/integration-and-stats-section-demo.tsx",
        type: "registry:example",
        target: "components/integration-and-stats-section-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/integration-and-stats-section-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "tech-orbit-showcase-demo": {
    name: "tech-orbit-showcase-demo",
    description:
      "Example of animated orbital showcase with rotating tech icons",
    type: "registry:example",
    registryDependencies: ["tech-orbit-showcase"],
    files: [
      {
        path: "registry/example/tech-orbit-showcase-demo.tsx",
        type: "registry:example",
        target: "components/tech-orbit-showcase-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/tech-orbit-showcase-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "partner-integrations-grid-demo": {
    name: "partner-integrations-grid-demo",
    description: "Example of grid showcase with partner integrations",
    type: "registry:example",
    registryDependencies: ["partner-integrations-grid"],
    files: [
      {
        path: "registry/example/partner-integrations-grid-demo.tsx",
        type: "registry:example",
        target: "components/partner-integrations-grid-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/partner-integrations-grid-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "analytics-dashboard-stats-demo": {
    name: "analytics-dashboard-stats-demo",
    description: "Example of analytics dashboard with statistics and charts",
    type: "registry:example",
    registryDependencies: ["analytics-dashboard-stats"],
    files: [
      {
        path: "registry/example/analytics-dashboard-stats-demo.tsx",
        type: "registry:example",
        target: "components/analytics-dashboard-stats-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/analytics-dashboard-stats-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "ruixen-dashboard-stats-demo": {
    name: "ruixen-dashboard-stats-demo",
    description: "Example of dashboard stats with animated counter and chart",
    type: "registry:example",
    registryDependencies: ["ruixen-dashboard-stats"],
    files: [
      {
        path: "registry/example/ruixen-dashboard-stats-demo.tsx",
        type: "registry:example",
        target: "components/ruixen-dashboard-stats-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/ruixen-dashboard-stats-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "feature-carousel-demo": {
    name: "feature-carousel-demo",
    description:
      "Example of interactive carousel showcasing dashboard features",
    type: "registry:example",
    registryDependencies: ["feature-carousel"],
    files: [
      {
        path: "registry/example/feature-carousel-demo.tsx",
        type: "registry:example",
        target: "components/feature-carousel-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/feature-carousel-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "crm-insights-panel-demo": {
    name: "crm-insights-panel-demo",
    description: "Example of CRM dashboard with video preview and feature grid",
    type: "registry:example",
    registryDependencies: ["crm-insights-panel"],
    files: [
      {
        path: "registry/example/crm-insights-panel-demo.tsx",
        type: "registry:example",
        target: "components/crm-insights-panel-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/crm-insights-panel-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "multi-orbit-semi-circle-demo": {
    name: "multi-orbit-semi-circle-demo",
    description: "Example of multi-layered semi-circular orbit animation",
    type: "registry:example",
    registryDependencies: ["multi-orbit-semi-circle"],
    files: [
      {
        path: "registry/example/multi-orbit-semi-circle-demo.tsx",
        type: "registry:example",
        target: "components/multi-orbit-semi-circle-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/multi-orbit-semi-circle-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "rotating-gradient-right-demo": {
    name: "rotating-gradient-right-demo",
    description:
      "Example of rotating conic gradient animation with centered card",
    type: "registry:example",
    registryDependencies: ["rotating-gradient-right"],
    files: [
      {
        path: "registry/example/rotating-gradient-right-demo.tsx",
        type: "registry:example",
        target: "components/rotating-gradient-right-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/rotating-gradient-right-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "automated-tasks-panel-demo": {
    name: "automated-tasks-panel-demo",
    description:
      "Example of animated task panel with scrolling automation features",
    type: "registry:example",
    registryDependencies: ["automated-tasks-panel"],
    files: [
      {
        path: "registry/example/automated-tasks-panel-demo.tsx",
        type: "registry:example",
        target: "components/automated-tasks-panel-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/automated-tasks-panel-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "case-studies-demo": {
    name: "case-studies-demo",
    description:
      "Example of customer case studies with metrics and testimonials",
    type: "registry:example",
    registryDependencies: ["case-studies"],
    files: [
      {
        path: "registry/example/case-studies-demo.tsx",
        type: "registry:example",
        target: "components/case-studies-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/case-studies-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "trusted-clients-showcase-demo": {
    name: "trusted-clients-showcase-demo",
    description:
      "Example of trusted clients showcase with logos in grid layout",
    type: "registry:example",
    registryDependencies: ["trusted-clients-showcase"],
    files: [
      {
        path: "registry/example/trusted-clients-showcase-demo.tsx",
        type: "registry:example",
        target: "components/trusted-clients-showcase-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/trusted-clients-showcase-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "client-carousel-showcase-demo": {
    name: "client-carousel-showcase-demo",
    description: "Example of interactive carousel showcasing client logos",
    type: "registry:example",
    registryDependencies: ["client-carousel-showcase"],
    files: [
      {
        path: "registry/example/client-carousel-showcase-demo.tsx",
        type: "registry:example",
        target: "components/client-carousel-showcase-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/client-carousel-showcase-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "auto-scrolling-client-carousel-demo": {
    name: "auto-scrolling-client-carousel-demo",
    description:
      "Example of automatically scrolling carousel with client logos",
    type: "registry:example",
    registryDependencies: ["auto-scrolling-client-carousel"],
    files: [
      {
        path: "registry/example/auto-scrolling-client-carousel-demo.tsx",
        type: "registry:example",
        target: "components/auto-scrolling-client-carousel-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/auto-scrolling-client-carousel-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-pro-demo": {
    name: "footer-pro-demo",
    description: "Example of a professional footer with comprehensive sections",
    type: "registry:example",
    registryDependencies: ["footer-pro"],
    files: [
      {
        path: "registry/example/footer-pro-demo.tsx",
        type: "registry:example",
        target: "components/footer-pro-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/footer-pro-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "corporate-footer-demo": {
    name: "corporate-footer-demo",
    description: "Example of a corporate-style footer component",
    type: "registry:example",
    registryDependencies: ["corporate-footer"],
    files: [
      {
        path: "registry/example/corporate-footer-demo.tsx",
        type: "registry:example",
        target: "components/corporate-footer-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/corporate-footer-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-extended-demo": {
    name: "footer-extended-demo",
    description: "Example of an extended footer with multiple sections",
    type: "registry:example",
    registryDependencies: ["footer-extended"],
    files: [
      {
        path: "registry/example/footer-extended-demo.tsx",
        type: "registry:example",
        target: "components/footer-extended-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/footer-extended-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-enterprise-demo": {
    name: "footer-enterprise-demo",
    description: "Example of an enterprise-grade footer component",
    type: "registry:example",
    registryDependencies: ["footer-enterprise"],
    files: [
      {
        path: "registry/example/footer-enterprise-demo.tsx",
        type: "registry:example",
        target: "components/footer-enterprise-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/footer-enterprise-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "footer-mega-demo": {
    name: "footer-mega-demo",
    description: "Example of a mega footer with extensive navigation",
    type: "registry:example",
    registryDependencies: ["footer-mega"],
    files: [
      {
        path: "registry/example/footer-mega-demo.tsx",
        type: "registry:example",
        target: "components/footer-mega-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/footer-mega-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "hover-gradient-navbar-demo": {
    name: "hover-gradient-navbar-demo",
    description: "Example of a navigation bar with gradient hover effects",
    type: "registry:example",
    registryDependencies: ["hover-gradient-navbar"],
    files: [
      {
        path: "registry/example/hover-gradient-navbar-demo.tsx",
        type: "registry:example",
        target: "components/hover-gradient-navbar-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/hover-gradient-navbar-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "floating-navbar-demo": {
    name: "floating-navbar-demo",
    description: "Example of a floating navigation bar with scroll animations",
    type: "registry:example",
    registryDependencies: ["floating-navbar"],
    files: [
      {
        path: "registry/example/floating-navbar-demo.tsx",
        type: "registry:example",
        target: "components/floating-navbar-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/floating-navbar-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "luma-bar-demo": {
    name: "luma-bar-demo",
    description: "Example of a Luma-inspired navigation bar",
    type: "registry:example",
    registryDependencies: ["luma-bar"],
    files: [
      {
        path: "registry/example/luma-bar-demo.tsx",
        type: "registry:example",
        target: "components/luma-bar-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/luma-bar-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "promote-header-demo": {
    name: "promote-header-demo",
    description: "Example of a promotional header component",
    type: "registry:example",
    registryDependencies: ["promote-header"],
    files: [
      {
        path: "registry/example/promote-header-demo.tsx",
        type: "registry:example",
        target: "components/promote-header-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/promote-header-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-plans-demo": {
    name: "pricing-plans-demo",
    description: "Example of comprehensive pricing plans with multiple tiers",
    type: "registry:example",
    registryDependencies: ["pricing-plans"],
    files: [
      {
        path: "registry/example/pricing-plans-demo.tsx",
        type: "registry:example",
        target: "components/pricing-plans-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/pricing-plans-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-comparison-demo": {
    name: "pricing-comparison-demo",
    description: "Example of a detailed pricing comparison table",
    type: "registry:example",
    registryDependencies: ["pricing-comparison"],
    files: [
      {
        path: "registry/example/pricing-comparison-demo.tsx",
        type: "registry:example",
        target: "components/pricing-comparison-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/pricing-comparison-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "subscription-plans-demo": {
    name: "subscription-plans-demo",
    description: "Example of subscription-focused pricing component",
    type: "registry:example",
    registryDependencies: ["subscription-plans"],
    files: [
      {
        path: "registry/example/subscription-plans-demo.tsx",
        type: "registry:example",
        target: "components/subscription-plans-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/subscription-plans-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-flow-demo": {
    name: "pricing-flow-demo",
    description: "Example of interactive pricing flow with billing toggles",
    type: "registry:example",
    registryDependencies: ["pricing-flow"],
    files: [
      {
        path: "registry/example/pricing-flow-demo.tsx",
        type: "registry:example",
        target: "components/pricing-flow-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/pricing-flow-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "pricing-with-user-scaling-demo": {
    name: "pricing-with-user-scaling-demo",
    description: "Example of pricing component with user-based scaling",
    type: "registry:example",
    registryDependencies: ["pricing-with-user-scaling"],
    files: [
      {
        path: "registry/example/pricing-with-user-scaling-demo.tsx",
        type: "registry:example",
        target: "components/pricing-with-user-scaling-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/pricing-with-user-scaling-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "testimonial-tabs-demo": {
    name: "testimonial-tabs-demo",
    description: "Example of interactive testimonial component with tabs",
    type: "registry:example",
    registryDependencies: ["testimonial-tabs"],
    files: [
      {
        path: "registry/example/testimonial-tabs-demo.tsx",
        type: "registry:example",
        target: "components/testimonial-tabs-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/testimonial-tabs-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "slide-to-delete-button-demo": {
    name: "slide-to-delete-button-demo",
    description:
      "Example showing a draggable button that requires sliding to confirm deletion action.",
    type: "registry:example",
    registryDependencies: ["slide-to-delete-button"],
    files: [
      {
        path: "registry/example/slide-to-delete-button-demo.tsx",
        type: "registry:example",
        target: "components/slide-to-delete-button-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/slide-to-delete-button-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "glow-link-button-demo": {
    name: "glow-link-button-demo",
    description:
      "Example showing a button with a subtle glow effect and animated arrow on hover.",
    type: "registry:example",
    registryDependencies: ["glow-link-button"],
    files: [
      {
        path: "registry/example/glow-link-button-demo.tsx",
        type: "registry:example",
        target: "components/glow-link-button-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/glow-link-button-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "theme-cycle-button-demo": {
    name: "theme-cycle-button-demo",
    description:
      "Example showing a button that cycles through different theme modes with smooth transitions.",
    type: "registry:example",
    registryDependencies: ["theme-cycle-button"],
    files: [
      {
        path: "registry/example/theme-cycle-button-demo.tsx",
        type: "registry:example",
        target: "components/theme-cycle-button-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/theme-cycle-button-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "morphing-github-button-demo": {
    name: "morphing-github-button-demo",
    description:
      "Example showing a GitHub button that morphs between different states with animations.",
    type: "registry:example",
    registryDependencies: ["morphing-github-button"],
    files: [
      {
        path: "registry/example/morphing-github-button-demo.tsx",
        type: "registry:example",
        target: "components/morphing-github-button-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/morphing-github-button-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "circular-stepper-input-demo": {
    name: "circular-stepper-input-demo",
    description:
      "Example showing a circular input component with increment/decrement functionality.",
    type: "registry:example",
    registryDependencies: ["circular-stepper-input"],
    files: [
      {
        path: "registry/example/circular-stepper-input-demo.tsx",
        type: "registry:example",
        target: "components/circular-stepper-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/circular-stepper-input-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "password-strength-input-demo": {
    name: "password-strength-input-demo",
    description:
      "Example showing a password input with real-time strength validation and visual feedback.",
    type: "registry:example",
    registryDependencies: ["password-strength-input"],
    files: [
      {
        path: "registry/example/password-strength-input-demo.tsx",
        type: "registry:example",
        target: "components/password-strength-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/password-strength-input-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "otp-input-demo": {
    name: "otp-input-demo",
    description:
      "Example showing a one-time password input component with individual digit fields.",
    type: "registry:example",
    registryDependencies: ["otp-input"],
    files: [
      {
        path: "registry/example/otp-input-demo.tsx",
        type: "registry:example",
        target: "components/otp-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/otp-input-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "color-picker-input-demo": {
    name: "color-picker-input-demo",
    description:
      "Example showing a color picker component with opacity control and copy functionality.",
    type: "registry:example",
    registryDependencies: ["color-picker-input"],
    files: [
      {
        path: "registry/example/color-picker-input-demo.tsx",
        type: "registry:example",
        target: "components/color-picker-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/color-picker-input-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "gravatar-email-input-demo": {
    name: "gravatar-email-input-demo",
    description:
      "Example showing an email input that displays Gravatar avatar preview.",
    type: "registry:example",
    registryDependencies: ["gravatar-email-input"],
    files: [
      {
        path: "registry/example/gravatar-email-input-demo.tsx",
        type: "registry:example",
        target: "components/gravatar-email-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/gravatar-email-input-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "correct-number-input-demo": {
    name: "correct-number-input-demo",
    description:
      "Example showing a number input with validation and correction features.",
    type: "registry:example",
    registryDependencies: ["correct-number-input"],
    files: [
      {
        path: "registry/example/correct-number-input-demo.tsx",
        type: "registry:example",
        target: "components/correct-number-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/correct-number-input-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "better-time-picker-demo": {
    name: "better-time-picker-demo",
    description:
      "Example showing an enhanced time picker with improved user experience.",
    type: "registry:example",
    registryDependencies: ["better-time-picker"],
    files: [
      {
        path: "registry/example/better-time-picker-demo.tsx",
        type: "registry:example",
        target: "components/better-time-picker-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/better-time-picker-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "inline-copy-input-demo": {
    name: "inline-copy-input-demo",
    description:
      "Example showing an input field with inline copy-to-clipboard functionality.",
    type: "registry:example",
    registryDependencies: ["inline-copy-input"],
    files: [
      {
        path: "registry/example/inline-copy-input-demo.tsx",
        type: "registry:example",
        target: "components/inline-copy-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/inline-copy-input-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "clean-tag-input-demo": {
    name: "clean-tag-input-demo",
    description:
      "Example showing a clean and minimal tag input component for adding multiple values.",
    type: "registry:example",
    registryDependencies: ["clean-tag-input"],
    files: [
      {
        path: "registry/example/clean-tag-input-demo.tsx",
        type: "registry:example",
        target: "components/clean-tag-input-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/clean-tag-input-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "search-with-category-demo": {
    name: "search-with-category-demo",
    description:
      "Example showing a search input component with category filtering functionality.",
    type: "registry:example",
    registryDependencies: ["search-with-category"],
    files: [
      {
        path: "registry/example/search-with-category-demo.tsx",
        type: "registry:example",
        target: "components/search-with-category-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/search-with-category-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "advanced-context-menu-demo": {
    name: "advanced-context-menu-demo",
    description:
      "Example showing an advanced context menu component with nested items and keyboard navigation.",
    type: "registry:example",
    registryDependencies: ["advanced-context-menu"],
    files: [
      {
        path: "registry/example/advanced-context-menu-demo.tsx",
        type: "registry:example",
        target: "components/advanced-context-menu-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/advanced-context-menu-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "nested-dashboard-menu-demo": {
    name: "nested-dashboard-menu-demo",
    description:
      "Example showing a nested navigation menu component for dashboard layouts.",
    type: "registry:example",
    registryDependencies: ["nested-dashboard-menu"],
    files: [
      {
        path: "registry/example/nested-dashboard-menu-demo.tsx",
        type: "registry:example",
        target: "components/nested-dashboard-menu-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/nested-dashboard-menu-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "drawer-inner-content-demo": {
    name: "drawer-inner-content-demo",
    description:
      "Example showing a drawer component with customizable inner content layout.",
    type: "registry:example",
    registryDependencies: ["drawer-inner-content"],
    files: [
      {
        path: "registry/example/drawer-inner-content-demo.tsx",
        type: "registry:example",
        target: "components/drawer-inner-content-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/drawer-inner-content-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "centered-feedback-drawer-demo": {
    name: "centered-feedback-drawer-demo",
    description:
      "Example showing a centered drawer component designed for feedback collection.",
    type: "registry:example",
    registryDependencies: ["centered-feedback-drawer"],
    files: [
      {
        path: "registry/example/centered-feedback-drawer-demo.tsx",
        type: "registry:example",
        target: "components/centered-feedback-drawer-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/centered-feedback-drawer-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "bottom-drawers-demo": {
    name: "bottom-drawers-demo",
    description:
      "Example showing a bottom drawer component that slides up from the bottom of the screen.",
    type: "registry:example",
    registryDependencies: ["bottom-drawers"],
    files: [
      {
        path: "registry/example/bottom-drawers-demo.tsx",
        type: "registry:example",
        target: "components/bottom-drawers-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/bottom-drawers-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "social-card-demo": {
    name: "social-card-demo",
    description:
      "Example showing a social media style card component with engagement features.",
    type: "registry:example",
    registryDependencies: ["social-card"],
    files: [
      {
        path: "registry/example/social-card-demo.tsx",
        type: "registry:example",
        target: "components/social-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/social-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "portfolio-card-demo": {
    name: "portfolio-card-demo",
    description:
      "Example showing a professional portfolio card component showcasing skills and profile.",
    type: "registry:example",
    registryDependencies: ["portfolio-card"],
    files: [
      {
        path: "registry/example/portfolio-card-demo.tsx",
        type: "registry:example",
        target: "components/portfolio-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/portfolio-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "team-project-card-demo": {
    name: "team-project-card-demo",
    description:
      "Example showing a collaborative project card with team members and milestones.",
    type: "registry:example",
    registryDependencies: ["team-project-card"],
    files: [
      {
        path: "registry/example/team-project-card-demo.tsx",
        type: "registry:example",
        target: "components/team-project-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/team-project-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "collab-chat-card-demo": {
    name: "collab-chat-card-demo",
    description:
      "Example showing a collaborative chat interface card with participant filtering.",
    type: "registry:example",
    registryDependencies: ["collab-chat-card"],
    files: [
      {
        path: "registry/example/collab-chat-card-demo.tsx",
        type: "registry:example",
        target: "components/collab-chat-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/collab-chat-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "goal-tracker-card-demo": {
    name: "goal-tracker-card-demo",
    description:
      "Example showing an activity and goal tracking card with progress visualization.",
    type: "registry:example",
    registryDependencies: ["goal-tracker-card"],
    files: [
      {
        path: "registry/example/goal-tracker-card-demo.tsx",
        type: "registry:example",
        target: "components/goal-tracker-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/goal-tracker-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "environment-card-demo": {
    name: "environment-card-demo",
    description:
      "Example showing a smart home environment control card with device management.",
    type: "registry:example",
    registryDependencies: ["environment-card"],
    files: [
      {
        path: "registry/example/environment-card-demo.tsx",
        type: "registry:example",
        target: "components/environment-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/environment-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "schedule-card-demo": {
    name: "schedule-card-demo",
    description:
      "Example showing a schedule card component displaying daily events and meetings.",
    type: "registry:example",
    registryDependencies: ["schedule-card"],
    files: [
      {
        path: "registry/example/schedule-card-demo.tsx",
        type: "registry:example",
        target: "components/schedule-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/schedule-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "showcase-card-demo": {
    name: "showcase-card-demo",
    description:
      "Example showing a showcase card component for displaying projects and portfolios.",
    type: "registry:example",
    registryDependencies: ["showcase-card"],
    files: [
      {
        path: "registry/example/showcase-card-demo.tsx",
        type: "registry:example",
        target: "components/showcase-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/example/showcase-card-demo.tsx");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "order-summary-card-demo": {
    name: "order-summary-card-demo",
    description:
      "Example showing an order summary card component for e-commerce checkout flows.",
    type: "registry:example",
    registryDependencies: ["order-summary-card"],
    files: [
      {
        path: "registry/example/order-summary-card-demo.tsx",
        type: "registry:example",
        target: "components/order-summary-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/order-summary-card-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "doctor-profile-card-demo": {
    name: "doctor-profile-card-demo",
    description:
      "Example showing a doctor profile card component for healthcare applications.",
    type: "registry:example",
    registryDependencies: ["doctor-profile-card"],
    files: [
      {
        path: "registry/example/doctor-profile-card-demo.tsx",
        type: "registry:example",
        target: "components/doctor-profile-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/doctor-profile-card-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "gradient-blob-card-demo": {
    name: "gradient-blob-card-demo",
    description:
      "Example showing an animated gradient blob card with glassmorphism effects.",
    type: "registry:example",
    registryDependencies: ["gradient-blob-card"],
    files: [
      {
        path: "registry/example/gradient-blob-card-demo.tsx",
        type: "registry:example",
        target: "components/gradient-blob-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/gradient-blob-card-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  "idea-generator-card-demo": {
    name: "idea-generator-card-demo",
    description:
      "Example showing an AI-powered idea generator card with input and action buttons.",
    type: "registry:example",
    registryDependencies: ["idea-generator-card"],
    files: [
      {
        path: "registry/example/idea-generator-card-demo.tsx",
        type: "registry:example",
        target: "components/idea-generator-card-demo.tsx",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import(
        "@/registry/example/idea-generator-card-demo.tsx"
      );
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
  utils: {
    name: "utils",
    description: "",
    type: "registry:lib",
    registryDependencies: undefined,
    files: [
      {
        path: "registry/lib/utils.ts",
        type: "registry:lib",
        target: "",
      },
    ],
    component: React.lazy(async () => {
      const mod = await import("@/registry/lib/utils.ts");
      const exportName =
        Object.keys(mod).find(
          (key) =>
            typeof mod[key] === "function" || typeof mod[key] === "object",
        ) || item.name;
      return { default: mod.default || mod[exportName] };
    }),
    meta: undefined,
  },
};
